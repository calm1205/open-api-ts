/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v2/user": {
    /** user entityを全て取得 */
    get: {
      responses: {
        /** get user */
        200: {
          content: {
            "application/json": components["schemas"]["userEntities"];
          };
        };
        /** userが存在しない */
        404: unknown;
      };
    };
    /** userの追加 */
    post: {
      responses: {
        /** post user */
        200: {
          content: {
            "application/json": components["schemas"]["userEntity"];
          };
        };
      };
      requestBody: components["requestBodies"]["userEntity"];
    };
  };
  "/v2/user/{id}": {
    /** user(単体)の取得 */
    get: {
      parameters: {
        path: {
          /** user id */
          id: number;
        };
      };
      responses: {
        /** get user */
        200: {
          content: {
            "application/json": components["schemas"]["userEntity"];
          };
        };
      };
    };
    /** userの更新 */
    put: {
      parameters: {
        path: {
          /** user id */
          id: number;
        };
      };
      responses: {
        /** put user */
        200: {
          content: {
            "application/json": components["schemas"]["userEntity"];
          };
        };
      };
      requestBody: components["requestBodies"]["userEntity"];
    };
    /** userの削除 */
    delete: {
      parameters: {
        path: {
          /** user id */
          id: number;
        };
      };
      responses: {
        /** delete user */
        200: {
          content: {
            "application/json": components["schemas"]["userEntity"];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    /** @description user entity */
    userEntity: {
      /**
       * Format: int32
       * @description user id
       */
      id?: number;
      /** @description user name */
      name?: string;
      /**
       * Format: int32
       * @description user age
       */
      age?: number;
    };
    /** @description user entityの配列 */
    userEntities: components["schemas"]["userEntity"][];
  };
  requestBodies: {
    /** userのリクエスト */
    userEntity: {
      content: {
        "application/json": components["schemas"]["userEntity"];
      };
    };
  };
}

export interface operations {}

export interface external {}
