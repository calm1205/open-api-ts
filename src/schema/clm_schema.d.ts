/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v2/project": {
    /** return project list with stats */
    get: operations["getV2Project"];
    /** create project */
    post: operations["postV2Project"];
  };
  "/v2/project/{project_id}/document_ids": {
    get: operations["getV2ProjectProjectIdDocumentIds"];
  };
  "/v2/project/{project_id}/question_config_next": {
    /** 次のquestion configを返す */
    get: operations["getV2ProjectProjectIdQuestionConfigNext"];
  };
  "/v2/project/{project_id}/set_scheme": {
    /** update project scheme */
    post: operations["postV2ProjectProjectIdSetScheme"];
  };
  "/v2/project/{project_id}": {
    /** return project */
    get: operations["getV2ProjectProjectId"];
    /** update project */
    put: operations["putV2ProjectProjectId"];
  };
  "/v2/project/{project_id}/admin_email_notification": {
    /** index admin_email_notifications */
    get: operations["getV2ProjectProjectIdAdminEmailNotification"];
  };
  "/v2/project/{project_id}/admin_email_notification/{admin_email_notification_id}/suspend": {
    /** suspend admin_email_notification */
    post: operations["postV2ProjectProjectIdAdminEmailNotificationAdminEmailNotificationIdSuspend"];
  };
  "/v2/project/{project_id}/admin_email_notification/{admin_email_notification_id}/send": {
    /** send admin_email_notification */
    post: operations["postV2ProjectProjectIdAdminEmailNotificationAdminEmailNotificationIdSend"];
  };
  "/v2/project/{project_id}/document/decrypt": {
    /** cannot_openなドキュメントの一括復号化を試みる */
    post: operations["postV2ProjectProjectIdDocumentDecrypt"];
  };
  "/v2/project/{project_id}/document": {
    get: operations["getV2ProjectProjectIdDocument"];
    delete: operations["deleteV2ProjectProjectIdDocument"];
  };
  "/v2/project/{project_id}/document/{document_id}": {
    get: operations["getV2ProjectProjectIdDocumentDocumentId"];
    /** Update document */
    put: operations["putV2ProjectProjectIdDocumentDocumentId"];
    /** Delete document */
    delete: operations["deleteV2ProjectProjectIdDocumentDocumentId"];
  };
  "/v2/project/{project_id}/document_count": {
    get: operations["getV2ProjectProjectIdDocumentCount"];
  };
  "/v2/project/{project_id}/execution_date_info": {
    get: operations["getV2ProjectProjectIdExecutionDateInfo"];
  };
  "/v2/project/{project_id}/set_created_at_for_search_with_tika": {
    post: operations["postV2ProjectProjectIdSetCreatedAtForSearchWithTika"];
  };
  "/v2/project/{project_id}/try_decrypt_documents_by_passwords": {
    post: operations["postV2ProjectProjectIdTryDecryptDocumentsByPasswords"];
  };
  "/v2/project/{project_id}/annotation": {
    get: operations["getV2ProjectProjectIdAnnotation"];
  };
  "/v2/project/{project_id}/document/{document_id}/annotation": {
    /** get document annotations */
    get: operations["getV2ProjectProjectIdDocumentDocumentIdAnnotation"];
  };
  "/v2/project/{project_id}/document_tree": {
    /** get subtree */
    get: operations["getV2ProjectProjectIdDocumentTree"];
    /** create document tree */
    post: operations["postV2ProjectProjectIdDocumentTree"];
  };
  "/v2/project/{project_id}/document_tree/{document_tree_id}": {
    /** get directory_tree */
    get: operations["getV2ProjectProjectIdDocumentTreeDocumentTreeId"];
    /** update directory_tree */
    put: operations["putV2ProjectProjectIdDocumentTreeDocumentTreeId"];
    /** delete document_tree */
    delete: operations["deleteV2ProjectProjectIdDocumentTreeDocumentTreeId"];
  };
  "/v2/project/{project_id}/document_tree/{document_tree_id}/move": {
    /** move directory_tree */
    post: operations["postV2ProjectProjectIdDocumentTreeDocumentTreeIdMove"];
  };
  "/v2/project/{project_id}/document_tree/{document_tree_id}/is_matter_dir": {
    /** check before update directory_tree */
    get: operations["getV2ProjectProjectIdDocumentTreeDocumentTreeIdIsMatterDir"];
  };
  "/v2/project/{project_id}/document_tree_map": {
    /** list directory map (forMAのみで有効。同等のことをしたい場合は GET /api/v2/document_tree/directory_children を利用してください) */
    get: operations["getV2ProjectProjectIdDocumentTreeMap"];
  };
  "/v2/project/{project_id}/question_config/reset": {
    /** reset question_configs answer */
    post: operations["postV2ProjectProjectIdQuestionConfigReset"];
  };
  "/v2/project/{project_id}/question_config/render": {
    /** bulk create questions from question_configs */
    post: operations["postV2ProjectProjectIdQuestionConfigRender"];
  };
  "/v2/project/{project_id}/question_config/answer": {
    /** answer question config */
    post: operations["postV2ProjectProjectIdQuestionConfigAnswer"];
  };
  "/v2/project/{project_id}/target_company": {
    /** create target_company */
    post: operations["postV2ProjectProjectIdTargetCompany"];
  };
  "/v2/project/{project_id}/target_company/{target_company_id}": {
    /** update target_company */
    put: operations["putV2ProjectProjectIdTargetCompanyTargetCompanyId"];
    /** delete target_company */
    delete: operations["deleteV2ProjectProjectIdTargetCompanyTargetCompanyId"];
  };
  "/v2/project/{project_id}/issue_tree": {
    /** Return issue_tree list */
    get: operations["getV2ProjectProjectIdIssueTree"];
    /** bulk update for ordering issue_tree */
    put: operations["putV2ProjectProjectIdIssueTree"];
  };
  "/v2/project/{project_id}/issue_tree/search": {
    /** Search issue_tree list */
    get: operations["getV2ProjectProjectIdIssueTreeSearch"];
  };
  "/v2/project/{project_id}/issue_tree/import": {
    /** Import issue_tree */
    post: operations["postV2ProjectProjectIdIssueTreeImport"];
  };
  "/v2/project/{project_id}/issue_tree/{issue_tree_id}": {
    /** Get issue_tree */
    get: operations["getV2ProjectProjectIdIssueTreeIssueTreeId"];
  };
  "/v2/project/{project_id}/question": {
    /** question list */
    get: operations["getV2ProjectProjectIdQuestion"];
    /** create question */
    post: operations["postV2ProjectProjectIdQuestion"];
  };
  "/v2/project/{project_id}/question/{question_id}": {
    /** update question */
    put: operations["putV2ProjectProjectIdQuestionQuestionId"];
  };
  "/v2/project/{project_id}/document_tree/{document_tree_id}/document_email": {
    /** return document_emails under document_tree(directory only) */
    get: operations["getV2ProjectProjectIdDocumentTreeDocumentTreeIdDocumentEmail"];
  };
  "/v2/document/refresh_cache_and_index": {
    /** (supplier only)documentの権限キャッシュクリア・再indexing */
    post: operations["postV2DocumentRefreshCacheAndIndex"];
  };
  "/v2/document/set_final_version_for_trial": {
    post: operations["postV2DocumentSetFinalVersionForTrial"];
  };
  "/v2/document/set_created_at_for_search_for_trial": {
    post: operations["postV2DocumentSetCreatedAtForSearchForTrial"];
  };
  "/v2/document/cancel_decrypt_documents_by_passwords": {
    post: operations["postV2DocumentCancelDecryptDocumentsByPasswords"];
  };
  "/v2/document/yoshina_rerun": {
    /** 旧Job環境で「よしなに」rerun してくれる API、新Job環境では利用できない */
    post: operations["postV2DocumentYoshinaRerun"];
  };
  "/v2/document/rerun": {
    /** 旧Job環境における rerun API、新Job環境では利用できない */
    post: operations["postV2DocumentRerun"];
  };
  "/v2/document/set_final_version": {
    post: operations["postV2DocumentSetFinalVersion"];
  };
  "/v2/document/update_credit_title": {
    /** 既にアップロードしてあるドキュメントの自社雛型への登録・解除。雛型にすると共有メモが編集できなくなる点にご注意ください */
    put: operations["putV2DocumentUpdateCreditTitle"];
  };
  "/v2/document": {
    get: operations["getV2Document"];
  };
  "/v2/document/{document_id}/generate_clause_structure": {
    /** 初期の行データを生成 */
    post: operations["postV2DocumentDocumentIdGenerateClauseStructure"];
  };
  "/v2/document/{document_id}/ledger_info": {
    get: operations["getV2DocumentDocumentIdLedgerInfo"];
  };
  "/v2/document/{document_id}/ledger_custom_column_value": {
    put: operations["putV2DocumentDocumentIdLedgerCustomColumnValue"];
  };
  "/v2/document/{document_id}/public_favorite_items": {
    get: operations["getV2DocumentDocumentIdPublicFavoriteItems"];
  };
  "/v2/document/{document_id}/is_mntsq_en_module_target": {
    get: operations["getV2DocumentDocumentIdIsMntsqEnModuleTarget"];
  };
  "/v2/document/{document_id}/document_content": {
    /** document_content */
    get: operations["getV2DocumentDocumentIdDocumentContent"];
  };
  "/v2/document/{document_id}": {
    get: operations["getV2DocumentDocumentId"];
  };
  "/v2/document/{document_id}/review_log": {
    post: operations["postV2DocumentDocumentIdReviewLog"];
  };
  "/v2/document/{document_id}/analyze_job/{analyze_job_id}": {
    /** edit analyze job */
    put: operations["putV2DocumentDocumentIdAnalyzeJobAnalyzeJobId"];
  };
  "/v2/document/{document_id}/annotation": {
    /** create annotation */
    post: operations["postV2DocumentDocumentIdAnnotation"];
    /** 指定したannotationを全て削除する */
    delete: operations["deleteV2DocumentDocumentIdAnnotation"];
  };
  "/v2/document/{document_id}/annotation/{annotation_id}": {
    /** Update annotation */
    put: operations["putV2DocumentDocumentIdAnnotationAnnotationId"];
    /** Delete annotation */
    delete: operations["deleteV2DocumentDocumentIdAnnotationAnnotationId"];
  };
  "/v2/document/{document_id}/clause_tag": {
    /** return clause_tag hierarchy tree */
    get: operations["getV2DocumentDocumentIdClauseTag"];
  };
  "/v2/document/{document_id}/clause_structure": {
    /** clause_structure */
    get: operations["getV2DocumentDocumentIdClauseStructure"];
  };
  "/v2/document/{document_id}/clause_structure/{clause_structure_id}": {
    /** update clause_structure */
    put: operations["putV2DocumentDocumentIdClauseStructureClauseStructureId"];
  };
  "/v2/document/{document_id}/related_document/{related_document_id}": {
    /** Delete document_related_document */
    delete: operations["deleteV2DocumentDocumentIdRelatedDocumentRelatedDocumentId"];
  };
  "/v2/document/{document_id}/notifications": {
    /** Get document notifications */
    get: operations["getV2DocumentDocumentIdNotifications"];
  };
  "/v2/document/{document_id}/governing_law/upsert": {
    post: operations["postV2DocumentDocumentIdGoverningLawUpsert"];
  };
  "/v2/document/{document_id}/governing_law": {
    /** post document governing_law */
    post: operations["postV2DocumentDocumentIdGoverningLaw"];
  };
  "/v2/document/{document_id}/governing_law/{governing_law_code}": {
    delete: operations["deleteV2DocumentDocumentIdGoverningLawGoverningLawCode"];
  };
  "/v2/document/{document_id}/discussions": {
    /** 対象ドキュメントのディスカッション（コメント）を一括登録する */
    post: operations["postV2DocumentDocumentIdDiscussions"];
  };
  "/v2/document/{document_id}/reminder": {
    /** 書類の自動通知設定の取得 */
    get: operations["getV2DocumentDocumentIdReminder"];
    /** 書類への自動通知設定の追加 */
    post: operations["postV2DocumentDocumentIdReminder"];
  };
  "/v2/section": {
    /** create section */
    post: operations["postV2Section"];
    /** Delete section */
    delete: operations["deleteV2Section"];
  };
  "/v2/analyze_job_left": {
    /** return if analyze_job remain or not */
    get: operations["getV2AnalyzeJobLeft"];
  };
  "/v2/analyze_job": {
    /** return analyze_job list */
    get: operations["getV2AnalyzeJob"];
  };
  "/v2/analyze_job/{analyze_job_id}": {
    /** get analyze_job */
    get: operations["getV2AnalyzeJobAnalyzeJobId"];
  };
  "/v2/analyze_job_left_count": {
    /** return analyze_job left_count */
    get: operations["getV2AnalyzeJobLeftCount"];
  };
  "/v2/annotation/option_group": {
    get: operations["getV2AnnotationOptionGroup"];
  };
  "/v2/annotation": {
    /** return annotation list with stats */
    get: operations["getV2Annotation"];
  };
  "/v2/annotation/{annotation_id}": {
    get: operations["getV2AnnotationAnnotationId"];
  };
  "/v2/annotation/{annotation_id}/source_text/{source_text_id}": {
    /** update source_text */
    put: operations["putV2AnnotationAnnotationIdSourceTextSourceTextId"];
    /** delete source_text */
    delete: operations["deleteV2AnnotationAnnotationIdSourceTextSourceTextId"];
  };
  "/v2/annotation/{annotation_id}/inner_review_status/{inner_review_status_id}": {
    /** update inner_review_status */
    put: operations["putV2AnnotationAnnotationIdInnerReviewStatusInnerReviewStatusId"];
  };
  "/v2/auth_info_csv_batch_log/execute_job": {
    /** auth_info_csv_jobを実行する */
    post: operations["postV2AuthInfoCsvBatchLogExecuteJob"];
  };
  "/v2/auth_info_csv_batch_log": {
    /** return auth_info_csv_batch_log list */
    get: operations["getV2AuthInfoCsvBatchLog"];
  };
  "/v2/auth_info_csv_batch_notification_email": {
    /** return auth_info_csv_batch_notification_email list */
    get: operations["getV2AuthInfoCsvBatchNotificationEmail"];
    /** auth_info_csv_batch_notification_emailを追加する */
    post: operations["postV2AuthInfoCsvBatchNotificationEmail"];
  };
  "/v2/auth_info_csv_batch_notification_email/{id}": {
    /** auth_info_csv_batch_notification_emailを削除する */
    delete: operations["deleteV2AuthInfoCsvBatchNotificationEmailId"];
  };
  "/v2/authentication/authentication_type": {
    /** judge authentication type */
    get: operations["getV2AuthenticationAuthenticationType"];
  };
  "/v2/authentication": {
    /** authenticate user and return user info */
    post: operations["postV2Authentication"];
    /** ログアウトAPI */
    delete: operations["deleteV2Authentication"];
  };
  "/v2/authentication_saml/{idp_key}/process_sign_out": {
    /** logout処理 */
    get: operations["getV2AuthenticationSamlIdpKeyProcessSignOut"];
  };
  "/v2/authentication_saml/{idp_key}/sign_out": {
    /** MNTSQ内からのサインアウトリクエスト */
    get: operations["getV2AuthenticationSamlIdpKeySignOut"];
  };
  "/v2/authentication_saml/{idp_key}/metadata": {
    /** IDPからのmetadata問い合わせ */
    get: operations["getV2AuthenticationSamlIdpKeyMetadata"];
  };
  "/v2/authentication_saml/{idp_key}/consume": {
    /** IDPからのログイン時コールバック受付 */
    post: operations["postV2AuthenticationSamlIdpKeyConsume"];
  };
  "/v2/authentication_saml/{idp_key}/init": {
    /** IDPの認証画面に遷移 */
    get: operations["getV2AuthenticationSamlIdpKeyInit"];
  };
  "/v2/user/export_list": {
    post: operations["postV2UserExportList"];
  };
  "/v2/user/me": {
    /** get user info */
    get: operations["getV2UserMe"];
    /** Update session user */
    put: operations["putV2UserMe"];
  };
  "/v2/user/initialize_my_name": {
    put: operations["putV2UserInitializeMyName"];
  };
  "/v2/user/bulk_insert": {
    /** tsvファイルをもとにユーザーを一括登録する。https://docs.google.com/spreadsheets/d/1g4s2BKL4fqw53HCQN2mxLTIk8AJ0kJYkYIWUBs6F14s/edit#gid=0 を参考にconfidentialドライブでシートを作成し、そのtsvファイルを使う */
    post: operations["postV2UserBulkInsert"];
  };
  "/v2/user/reset_password": {
    /** reset password */
    post: operations["postV2UserResetPassword"];
  };
  "/v2/user": {
    /** list users <br /> (※paginationが不要で高速に候補データを取得したい場合は、 GET api/v2/suggest/user を使用してください) */
    get: operations["getV2User"];
    /** create user */
    post: operations["postV2User"];
  };
  "/v2/user/{user_id}/unlock": {
    /** unlock user account */
    post: operations["postV2UserUserIdUnlock"];
  };
  "/v2/user/{user_id}": {
    get: operations["getV2UserUserId"];
    /** update user */
    put: operations["putV2UserUserId"];
  };
  "/v2/user/{user_id}/favorite_item": {
    /** get favorite_items */
    get: operations["getV2UserUserIdFavoriteItem"];
    /** create favorite_item */
    post: operations["postV2UserUserIdFavoriteItem"];
  };
  "/v2/user/{user_id}/favorite_item/{favorite_item_id}": {
    /** Update favorite_item */
    put: operations["putV2UserUserIdFavoriteItemFavoriteItemId"];
    /** Delete favorite_item */
    delete: operations["deleteV2UserUserIdFavoriteItemFavoriteItemId"];
  };
  "/v2/user/{user_id}/user_group": {
    /** create user_group_relation */
    post: operations["postV2UserUserIdUserGroup"];
  };
  "/v2/user/{user_id}/user_group/{user_group_id}": {
    /** Delete user_group_relations */
    delete: operations["deleteV2UserUserIdUserGroupUserGroupId"];
  };
  "/v2/document_tree/children": {
    /** 指定フォルダ直下のファイル・フォルダ情報を返す */
    get: operations["getV2DocumentTreeChildren"];
  };
  "/v2/document_tree/directory_children": {
    /** 指定フォルダ直下のフォルダ情報を返す */
    get: operations["getV2DocumentTreeDirectoryChildren"];
  };
  "/v2/document_tree/bulk_move_recover": {
    /** bulk_moveのAPIが途中で失敗したときに現状復旧するために利用するAPIです。DO_NOT_USE と名前の付いたフォルダが移動元の親フォルダにあるときに利用してください */
    post: operations["postV2DocumentTreeBulkMoveRecover"];
  };
  "/v2/document_tree/bulk_move": {
    /** このAPIはわりと雑に巨大なフォルダを移動するためのAPIです。途中でエラーが起きると移動途中の状況で処理が停止することがあります。できるだけ移動対象のフォルダへの操作が無い状況でこのAPIを利用してください。 */
    post: operations["postV2DocumentTreeBulkMove"];
  };
  "/v2/document_tree/{document_tree_id}/file_count": {
    /** 指定フォルダ配下の閲覧可能なファイル数を取得する */
    get: operations["getV2DocumentTreeDocumentTreeIdFileCount"];
  };
  "/v2/document_tree/{document_tree_id}/connectmail_email_dispatch": {
    /** get connectmail email dispatch */
    get: operations["getV2DocumentTreeDocumentTreeIdConnectmailEmailDispatch"];
    /** update connectmail email dispatch */
    put: operations["putV2DocumentTreeDocumentTreeIdConnectmailEmailDispatch"];
    /** create connectmail email dispatch */
    post: operations["postV2DocumentTreeDocumentTreeIdConnectmailEmailDispatch"];
  };
  "/v2/docusign_sync_status": {
    /** list docusign_sync_status */
    get: operations["getV2DocusignSyncStatus"];
  };
  "/v2/docusign_sync_status/{docusign_sync_status_id}": {
    /** return docusign_sync_status */
    put: operations["putV2DocusignSyncStatusDocusignSyncStatusId"];
    /** Delete docusign_sync_status */
    delete: operations["deleteV2DocusignSyncStatusDocusignSyncStatusId"];
  };
  "/v2/docusign_user": {
    /** list docusign_user */
    get: operations["getV2DocusignUser"];
    /** create docusign_user */
    post: operations["postV2DocusignUser"];
  };
  "/v2/docusign_user/{docusign_user_id}/check_authentication": {
    /** check docusign_user authentication */
    get: operations["getV2DocusignUserDocusignUserIdCheckAuthentication"];
  };
  "/v2/docusign_user/{docusign_user_id}": {
    /** update docusign_user */
    put: operations["putV2DocusignUserDocusignUserId"];
    /** delete docusign_user */
    delete: operations["deleteV2DocusignUserDocusignUserId"];
  };
  "/v2/docusign_user/{docusign_user_id}/consent_obtain_url": {
    /** issue consent obtain url */
    get: operations["getV2DocusignUserDocusignUserIdConsentObtainUrl"];
  };
  "/v2/docusign_account": {
    /** list docusign_account */
    get: operations["getV2DocusignAccount"];
  };
  "/v2/docusign_account/{docusign_account_id}": {
    /** update docusign_account */
    put: operations["putV2DocusignAccountDocusignAccountId"];
    /** delete docusign_account */
    delete: operations["deleteV2DocusignAccountDocusignAccountId"];
  };
  "/v2/docusign_custom_field_condition": {
    /** list docusign_custom_field_condition */
    get: operations["getV2DocusignCustomFieldCondition"];
    /** create docusign_custom_field_condition */
    post: operations["postV2DocusignCustomFieldCondition"];
  };
  "/v2/docusign_custom_field_condition/{docusign_custom_field_condition_id}": {
    /** update docusign_custom_field_condition */
    put: operations["putV2DocusignCustomFieldConditionDocusignCustomFieldConditionId"];
    /** delete docusign_custom_field_condition */
    delete: operations["deleteV2DocusignCustomFieldConditionDocusignCustomFieldConditionId"];
  };
  "/v2/docusign_test/survey_missing_envelopes_on_db": {
    /** survey missing envelopes on db */
    get: operations["getV2DocusignTestSurveyMissingEnvelopesOnDb"];
  };
  "/v2/docusign_test/refetch_envelope": {
    /** refetch docusign_envelope */
    get: operations["getV2DocusignTestRefetchEnvelope"];
  };
  "/v2/docusign_test/list_status": {
    /** list docusign_envelope statues */
    get: operations["getV2DocusignTestListStatus"];
  };
  "/v2/docusign_test/list_documents": {
    /** list docusign_documents */
    get: operations["getV2DocusignTestListDocuments"];
  };
  "/v2/docusign_test/get_envelope": {
    /** get docusign_envelope */
    get: operations["getV2DocusignTestGetEnvelope"];
  };
  "/v2/docusign_webhook/sync_proof_file_on_s3": {
    /** sync proof file on s3 */
    put: operations["putV2DocusignWebhookSyncProofFileOnS3"];
  };
  "/v2/docusign_webhook": {
    /** list docusign_webhook */
    get: operations["getV2DocusignWebhook"];
    /** create docusign_webhook */
    post: operations["postV2DocusignWebhook"];
  };
  "/v2/docusign_webhook/{docusign_webhook_id}": {
    /** update docusign_webhook */
    put: operations["putV2DocusignWebhookDocusignWebhookId"];
    /** delete docusign_webhook */
    delete: operations["deleteV2DocusignWebhookDocusignWebhookId"];
  };
  "/v2/gdrive_sync_config": {
    /** list gdrive_sync_config */
    get: operations["getV2GdriveSyncConfig"];
    post: operations["postV2GdriveSyncConfig"];
  };
  "/v2/gdrive_sync_config/{id}": {
    /** delete gdrive_sync_config */
    delete: operations["deleteV2GdriveSyncConfigId"];
  };
  "/v2/gdrive_user/consent_obtain_url": {
    /** issue consent obtain url */
    get: operations["getV2GdriveUserConsentObtainUrl"];
  };
  "/v2/gdrive_user": {
    /** list gdrive_user */
    get: operations["getV2GdriveUser"];
  };
  "/v2/gdrive_user/{id}": {
    /** delete gdrive_user */
    delete: operations["deleteV2GdriveUserId"];
  };
  "/v2/assignment": {
    /** return assignment list */
    get: operations["getV2Assignment"];
    /** create assignment */
    post: operations["postV2Assignment"];
  };
  "/v2/assignment/{assignment_id}": {
    /** Delete assignment */
    delete: operations["deleteV2AssignmentAssignmentId"];
  };
  "/v2/assignment/{assignment_id}/section_type": {
    /** assign section */
    post: operations["postV2AssignmentAssignmentIdSectionType"];
    /** remove assignment of section_type */
    delete: operations["deleteV2AssignmentAssignmentIdSectionType"];
  };
  "/v2/maintenance": {
    /** return project list with stats */
    get: operations["getV2Maintenance"];
  };
  "/v2/maintenance/{maintenance_id}": {
    /** update maintenance */
    put: operations["putV2MaintenanceMaintenanceId"];
  };
  "/v2/maintenance_mode": {
    /** get maintenance_mode */
    get: operations["getV2MaintenanceMode"];
    /** update maintenance_mode */
    put: operations["putV2MaintenanceMode"];
  };
  "/v2/maintenance_not_applicable_user": {
    /** update maintenance_not_applicable_user */
    put: operations["putV2MaintenanceNotApplicableUser"];
  };
  "/v2/contract_type/option_group": {
    get: operations["getV2ContractTypeOptionGroup"];
  };
  "/v2/contract_type": {
    post: operations["postV2ContractType"];
    delete: operations["deleteV2ContractType"];
  };
  "/v2/analyze_job_suspend": {
    /** get analyze_job_suspend */
    get: operations["getV2AnalyzeJobSuspend"];
    /** updates analyze_job_suspend */
    put: operations["putV2AnalyzeJobSuspend"];
  };
  "/v2/clause/bulk_save": {
    /** create clause in bulk */
    post: operations["postV2ClauseBulkSave"];
  };
  "/v2/clause": {
    /** return clause list */
    get: operations["getV2Clause"];
    /** create clause */
    post: operations["postV2Clause"];
  };
  "/v2/clause/{clause_id}": {
    /** return clause */
    get: operations["getV2ClauseClauseId"];
    /** update clause */
    put: operations["putV2ClauseClauseId"];
  };
  "/v2/clause/{clause_id}/clause_tag": {
    /** create clause tag */
    post: operations["postV2ClauseClauseIdClauseTag"];
  };
  "/v2/clause/{clause_id}/clause_tag/{clause_tag_id}": {
    /** delete clause tag */
    delete: operations["deleteV2ClauseClauseIdClauseTagClauseTagId"];
  };
  "/v2/clause/{clause_id}/clause_user_tag": {
    post: operations["postV2ClauseClauseIdClauseUserTag"];
  };
  "/v2/clause_tag/option_group": {
    get: operations["getV2ClauseTagOptionGroup"];
  };
  "/v2/clause_tag/bulk_save": {
    post: operations["postV2ClauseTagBulkSave"];
  };
  "/v2/clause_user_tag/{clause_user_tag_id}": {
    put: operations["putV2ClauseUserTagClauseUserTagId"];
    delete: operations["deleteV2ClauseUserTagClauseUserTagId"];
  };
  "/v2/clause_user_tag_master": {
    get: operations["getV2ClauseUserTagMaster"];
    post: operations["postV2ClauseUserTagMaster"];
  };
  "/v2/clause_user_tag_master/{clause_user_tag_master_id}": {
    put: operations["putV2ClauseUserTagMasterClauseUserTagMasterId"];
    delete: operations["deleteV2ClauseUserTagMasterClauseUserTagMasterId"];
  };
  "/v2/document_diff": {
    /** analyze diff of specified documents */
    post: operations["postV2DocumentDiff"];
  };
  "/v2/suggest/user_group": {
    /**
     * GET api/v2/user_groupと異なり、paginationなどの処理を除いて高速に候補を返すことに特化しているため、候補の絞り込みにはこちらを使用してください。 <br />
     * (補足) <br />
     * ・is_selectable: trueなグループのみレスポンスに含む <br />
     * ・名前(name)の昇順に並ぶ
     */
    get: operations["getV2SuggestUserGroup"];
  };
  "/v2/suggest/user": {
    /**
     * GET api/v2/userと異なり、paginationなどの処理を除いて高速に候補を返すことに特化しているため、候補の絞り込みにはこちらを使用してください。 <br />
     * (補足) <br />
     * ・API呼び出しユーザーがsupplierの場合のみ、レスポンスにsupplier userを含む <br />
     * ・API呼び出しユーザーがsupplierまたはtester user (@mntsq.com)の場合のみ、レスポンスにtester userを含む <br />
     * ・非表示(status: archive), 停止中(status: suspend)ユーザーをレスポンスに含まない <br />
     * ・非表示(status: archive), 停止中(status: suspend)ユーザーをレスポンスに含まない <br />
     * ・名前(name)の昇順に並ぶ
     */
    get: operations["getV2SuggestUser"];
  };
  "/v2/suggest/client_master": {
    get: operations["getV2SuggestClientMaster"];
  };
  "/v2/suggest/tag": {
    get: operations["getV2SuggestTag"];
  };
  "/v2/search/matter/export": {
    /** export searched matter list async */
    post: operations["postV2SearchMatterExport"];
  };
  "/v2/search/matter": {
    get: operations["getV2SearchMatter"];
  };
  "/v2/search/related_agreement_candidate": {
    /** 指定されたdocumentの関連契約と思われるdocumentを検索します */
    get: operations["getV2SearchRelatedAgreementCandidate"];
  };
  "/v2/search/clause/export": {
    post: operations["postV2SearchClauseExport"];
  };
  "/v2/search/clause": {
    get: operations["getV2SearchClause"];
  };
  "/v2/search/ledger/export": {
    /**
     * review_target_ledger_tagあり、ledger_tagあり/なし: 指定された台帳の個別と共通のカスタム項目を出力<br/>
     * review_target_ledger_tagなし、ledger_tagあり: 指定された台帳の共通のカスタム項目を出力<br/>
     * review_target_ledger_tagなし、ledger_tagなし: 権限のある台帳の共通のカスタム項目を出力
     */
    post: operations["postV2SearchLedgerExport"];
  };
  "/v2/search/document": {
    get: operations["getV2SearchDocument"];
  };
  "/v2/search_engine_management/synonyms": {
    /** post search synonyms */
    post: operations["postV2SearchEngineManagementSynonyms"];
  };
  "/v2/search_engine_management/synonyms/{synonym_id}": {
    /** get search synonyms */
    get: operations["getV2SearchEngineManagementSynonymsSynonymId"];
    /** put search synonyms */
    put: operations["putV2SearchEngineManagementSynonymsSynonymId"];
    /** delete search synonyms */
    delete: operations["deleteV2SearchEngineManagementSynonymsSynonymId"];
  };
  "/v2/search_engine_management/purpose_synonym": {
    /** get search synonym on purpose field (deprecated) */
    get: operations["getV2SearchEngineManagementPurposeSynonym"];
    /** put search synonym on purpose field (deprecated) */
    put: operations["putV2SearchEngineManagementPurposeSynonym"];
  };
  "/v2/search_engine_management/text_synonym": {
    /** get search synonyms (deprecated) */
    get: operations["getV2SearchEngineManagementTextSynonym"];
    /** put search synonyms (deprecated) */
    put: operations["putV2SearchEngineManagementTextSynonym"];
  };
  "/v2/dashboard": {
    /** dashboard */
    get: operations["getV2Dashboard"];
  };
  "/v2/favorite_item": {
    /** get favorite_item list (supplier only available) */
    get: operations["getV2FavoriteItem"];
  };
  "/v2/user_group": {
    /** return user_group list with stats  <br /> (※paginationが不要で高速に候補データを取得したい場合は、 GET api/v2/suggest/user を使用してください) */
    get: operations["getV2UserGroup"];
    /** create user_group */
    post: operations["postV2UserGroup"];
  };
  "/v2/user_group/descendants": {
    /** user_group descendants */
    get: operations["getV2UserGroupDescendants"];
  };
  "/v2/user_group/{user_group_id}": {
    get: operations["getV2UserGroupUserGroupId"];
    /** update user_group */
    put: operations["putV2UserGroupUserGroupId"];
    /** delete user_group */
    delete: operations["deleteV2UserGroupUserGroupId"];
  };
  "/v2/user_group/{user_group_id}/group_permission": {
    /** create group_permission */
    post: operations["postV2UserGroupUserGroupIdGroupPermission"];
  };
  "/v2/user_group/{user_group_id}/group_permission/{group_permission_id}": {
    /** Delete group_permissions */
    delete: operations["deleteV2UserGroupUserGroupIdGroupPermissionGroupPermissionId"];
  };
  "/v2/product_config": {
    /** product_config */
    get: operations["getV2ProductConfig"];
  };
  "/v2/product_config/{product_config_id}": {
    /** update product_config */
    put: operations["putV2ProductConfigProductConfigId"];
  };
  "/v2/client_name_master/bulk_insert": {
    post: operations["postV2ClientNameMasterBulkInsert"];
  };
  "/v2/client_name_master": {
    /** create client_name_master */
    post: operations["postV2ClientNameMaster"];
  };
  "/v2/client_name_master/{client_name_master_id}": {
    /** update client_name_master */
    put: operations["putV2ClientNameMasterClientNameMasterId"];
  };
  "/v2/client_master": {
    /** list client_masters */
    get: operations["getV2ClientMaster"];
    /** create client_master */
    post: operations["postV2ClientMaster"];
  };
  "/v2/party_identification/rerun": {
    post: operations["postV2PartyIdentificationRerun"];
  };
  "/v2/party_identification": {
    /** list party_identifications */
    get: operations["getV2PartyIdentification"];
  };
  "/v2/party_identification/{party_identification_id}": {
    /** update party_identification */
    put: operations["putV2PartyIdentificationPartyIdentificationId"];
  };
  "/v2/contract_template": {
    /** return contract_template list */
    get: operations["getV2ContractTemplate"];
  };
  "/v2/contract_template/import": {
    /** 雛型zipのimport。長く画面が遷移しなくても、504のtime-outエラーが出ても気にせずに、時間を置いてから対象のフォルダを見て結果を確認してください。supplier only */
    post: operations["postV2ContractTemplateImport"];
  };
  "/v2/contract_template/archive": {
    /** MNTSQ雛型のarchive。古くなったMNTSQ雛型の切替機能を消し、outdated フラグを付与して（その結果検索結果から除外し）、"旧MNTSQ雛型 > yyyy年mm月バージョン"フォルダ配下にアーカイブする。supplier only */
    put: operations["putV2ContractTemplateArchive"];
  };
  "/v2/document_responsible_user": {
    /** create document_responsible_user */
    post: operations["postV2DocumentResponsibleUser"];
  };
  "/v2/document_responsible_user/{document_responsible_user_id}": {
    /** delete document_responsible_user */
    delete: operations["deleteV2DocumentResponsibleUserDocumentResponsibleUserId"];
  };
  "/v2/document_responsible_user_group": {
    /** create document_responsible_user_group */
    post: operations["postV2DocumentResponsibleUserGroup"];
  };
  "/v2/document_responsible_user_group/{document_responsible_user_group_id}": {
    /** delete document_responsible_user_group */
    delete: operations["deleteV2DocumentResponsibleUserGroupDocumentResponsibleUserGroupId"];
  };
  "/v2/extract": {
    /** extract related data */
    get: operations["getV2Extract"];
  };
  "/v2/async_job_log": {
    /** index async_job_logs */
    get: operations["getV2AsyncJobLog"];
  };
  "/v2/async_job_log/{async_job_log_id}": {
    /** get async_job_log */
    get: operations["getV2AsyncJobLogAsyncJobLogId"];
  };
  "/v2/sticky": {
    /** return sticky list with stats */
    get: operations["getV2Sticky"];
    /** create sticky */
    post: operations["postV2Sticky"];
  };
  "/v2/sticky/{sticky_id}": {
    /** return sticky */
    get: operations["getV2StickyStickyId"];
    /** update sticky */
    put: operations["putV2StickyStickyId"];
    /** delete sticky */
    delete: operations["deleteV2StickyStickyId"];
  };
  "/v2/hello": {
    /** get system status */
    get: operations["getV2Hello"];
  };
  "/v2/management_tag/bulk_assign": {
    post: operations["postV2ManagementTagBulkAssign"];
  };
  "/v2/management_tag": {
    /** index management_tags */
    get: operations["getV2ManagementTag"];
    /** create management_tag */
    post: operations["postV2ManagementTag"];
  };
  "/v2/management_tag/{management_tag_id}": {
    /** Update management_tag */
    put: operations["putV2ManagementTagManagementTagId"];
    /** Delete management_tag */
    delete: operations["deleteV2ManagementTagManagementTagId"];
  };
  "/v2/document_management_tag": {
    /** create document_management_tag */
    post: operations["postV2DocumentManagementTag"];
  };
  "/v2/document_management_tag/{document_management_tag_id}": {
    /** Delete document_management_tag */
    delete: operations["deleteV2DocumentManagementTagDocumentManagementTagId"];
  };
  "/v2/ledger_tag/bulk_assign": {
    post: operations["postV2LedgerTagBulkAssign"];
  };
  "/v2/ledger_tag": {
    /** index ledger_tags */
    get: operations["getV2LedgerTag"];
    /** create ledger_tag */
    post: operations["postV2LedgerTag"];
  };
  "/v2/ledger_tag/{ledger_tag_id}": {
    /** Get ledger_tag */
    get: operations["getV2LedgerTagLedgerTagId"];
    /** Update ledger_tag */
    put: operations["putV2LedgerTagLedgerTagId"];
    /** Delete ledger_tag */
    delete: operations["deleteV2LedgerTagLedgerTagId"];
  };
  "/v2/ledger_tag/{ledger_tag_id}/ledger_tag_default_column": {
    /** update ledger_default_column */
    put: operations["putV2LedgerTagLedgerTagIdLedgerTagDefaultColumn"];
  };
  "/v2/ledger_tag/{ledger_tag_id}/document": {
    /** upload document */
    post: operations["postV2LedgerTagLedgerTagIdDocument"];
  };
  "/v2/ledger_tag/{ledger_tag_id}/ledger_custom_column": {
    /** create ledger custom column */
    post: operations["postV2LedgerTagLedgerTagIdLedgerCustomColumn"];
  };
  "/v2/ledger_tag/{ledger_tag_id}/ledger_custom_column/{ledger_custom_column_id}": {
    /** create ledger_tag_custom_column */
    post: operations["postV2LedgerTagLedgerTagIdLedgerCustomColumnLedgerCustomColumnId"];
    /** delete ledger tag custom column */
    delete: operations["deleteV2LedgerTagLedgerTagIdLedgerCustomColumnLedgerCustomColumnId"];
  };
  "/v2/ledger_tag/{ledger_tag_id}/ledger_tag_reminder_template": {
    /** 書類の自動通知設定の取得 */
    get: operations["getV2LedgerTagLedgerTagIdLedgerTagReminderTemplate"];
    /** 台帳の自動通知設定の追加 */
    post: operations["postV2LedgerTagLedgerTagIdLedgerTagReminderTemplate"];
  };
  "/v2/document_ledger_tag": {
    /** create document_ledger_tag */
    post: operations["postV2DocumentLedgerTag"];
  };
  "/v2/document_ledger_tag/{document_ledger_tag_id}": {
    /** Delete document_ledger_tag */
    delete: operations["deleteV2DocumentLedgerTagDocumentLedgerTagId"];
  };
  "/v2/conflict_fileupload/resolve_all": {
    /** resolve all conflict_fileupload */
    post: operations["postV2ConflictFileuploadResolveAll"];
  };
  "/v2/conflict_fileupload/{conflict_fileupload_id}/resolve": {
    /** resolve conflict_fileupload */
    post: operations["postV2ConflictFileuploadConflictFileuploadIdResolve"];
  };
  "/v2/cloudsign_team": {
    /** get cloudsign_team */
    get: operations["getV2CloudsignTeam"];
    /** create cloudsign_team */
    post: operations["postV2CloudsignTeam"];
  };
  "/v2/cloudsign_team/{cloudsign_team_id}": {
    /** update cloudsign_team */
    put: operations["putV2CloudsignTeamCloudsignTeamId"];
  };
  "/v2/log/view_document": {
    /** return view_document log */
    get: operations["getV2LogViewDocument"];
  };
  "/v2/oauth2/docusign": {
    get: operations["getV2Oauth2Docusign"];
  };
  "/v2/oauth2/gdrive": {
    get: operations["getV2Oauth2Gdrive"];
  };
  "/v2/custom_report": {
    /** get custom_report */
    get: operations["getV2CustomReport"];
    /** Create custom_report */
    post: operations["postV2CustomReport"];
  };
  "/v2/custom_report/{custom_report_id}": {
    /** updates custom_report */
    put: operations["putV2CustomReportCustomReportId"];
    /** Delete custom_report */
    delete: operations["deleteV2CustomReportCustomReportId"];
  };
  "/v2/custom_report_value": {
    /** Create custom_report_value */
    post: operations["postV2CustomReportValue"];
  };
  "/v2/custom_report_value/{custom_report_value_id}": {
    /** updates custom_report_value */
    put: operations["putV2CustomReportValueCustomReportValueId"];
    /** Delete custom_report_value */
    delete: operations["deleteV2CustomReportValueCustomReportValueId"];
  };
  "/v2/document_related_document": {
    /** create document_related_document */
    post: operations["postV2DocumentRelatedDocument"];
  };
  "/v2/drafting_model": {
    /** return drafting_model */
    get: operations["getV2DraftingModel"];
    /** import drafting_model by zip */
    post: operations["postV2DraftingModel"];
  };
  "/v2/drafting_model/{drafting_model_id}": {
    /** get drafting_model */
    get: operations["getV2DraftingModelDraftingModelId"];
    /** update drafting_model */
    put: operations["putV2DraftingModelDraftingModelId"];
    /** delete drafting_model */
    delete: operations["deleteV2DraftingModelDraftingModelId"];
  };
  "/v2/drafting_model/{drafting_model_id}/render_dev": {
    /** dev render drafting_model */
    get: operations["getV2DraftingModelDraftingModelIdRenderDev"];
  };
  "/v2/drafting_model_test": {
    /** test drafting_model */
    post: operations["postV2DraftingModelTest"];
  };
  "/v2/drafting_task": {
    /** return drafting_tasks */
    get: operations["getV2DraftingTask"];
    /** create drafting_task */
    post: operations["postV2DraftingTask"];
  };
  "/v2/drafting_task/{drafting_task_id}/render": {
    /** render drafting_task */
    post: operations["postV2DraftingTaskDraftingTaskIdRender"];
  };
  "/v2/drafting_task/{drafting_task_id}/undo": {
    /** undo drafting_task answer */
    post: operations["postV2DraftingTaskDraftingTaskIdUndo"];
  };
  "/v2/drafting_task/{drafting_task_id}/reset": {
    /** reset drafting_task answer */
    post: operations["postV2DraftingTaskDraftingTaskIdReset"];
  };
  "/v2/drafting_task/{drafting_task_id}/answer": {
    /** answer drafting_task */
    post: operations["postV2DraftingTaskDraftingTaskIdAnswer"];
  };
  "/v2/drafting_task/{drafting_task_id}": {
    /** return drafting_task */
    get: operations["getV2DraftingTaskDraftingTaskId"];
  };
  "/v2/ledger_custom_column": {
    get: operations["getV2LedgerCustomColumn"];
    /** create ledger custom column */
    post: operations["postV2LedgerCustomColumn"];
  };
  "/v2/ledger_custom_column/{ledger_custom_column_id}": {
    /**
     * 台帳カスタム項目を更新する。 <br/>
     * 選択肢があるoption_type(single_select, multi_select, list)の場合、以下のように追加・更新・削除を行える。 <br/>
     * ・追加: ledger_custom_column_options[][id]を未指定にする <br/>
     * ・更新: ledger_custom_column_options[][id]に既存のIDを指定する <br/>
     * ・削除: 削除したい既存の選択肢をledger_custom_column_options[]に含めない <br/>
     * ・すべて更新なし: ledger_custom_column_options[]自体を未指定にする
     */
    put: operations["putV2LedgerCustomColumnLedgerCustomColumnId"];
    /** delete ledger custom colum */
    delete: operations["deleteV2LedgerCustomColumnLedgerCustomColumnId"];
  };
  "/v2/notification": {
    /** get notification */
    get: operations["getV2Notification"];
    /** create notification */
    post: operations["postV2Notification"];
  };
  "/v2/notification/{notification_id}": {
    /** updates notification */
    put: operations["putV2NotificationNotificationId"];
    /** Delete notification */
    delete: operations["deleteV2NotificationNotificationId"];
  };
  "/v2/notification/{notification_id}/confirm": {
    /** confirm notification */
    post: operations["postV2NotificationNotificationIdConfirm"];
  };
  "/v2/notification/default_mail_content": {
    /** Get default mail content */
    get: operations["getV2NotificationDefaultMailContent"];
  };
  "/v2/documents/discussions": {
    /** return discussion list with spans and comments. group by document_id */
    get: operations["getV2DocumentsDiscussions"];
  };
  "/v2/documents/notifications": {
    /** Get documents notifications */
    get: operations["getV2DocumentsNotifications"];
  };
  "/v2/active_job_left": {
    /** return if active_job remain or not */
    get: operations["getV2ActiveJobLeft"];
  };
  "/v2/sso_config": {
    /** list sso_configs */
    get: operations["getV2SsoConfig"];
    /** create sso_config */
    post: operations["postV2SsoConfig"];
  };
  "/v2/sso_config/init_path": {
    /** sso_init path */
    get: operations["getV2SsoConfigInitPath"];
  };
  "/v2/sso_config/{sso_config_id}": {
    /** update sso_config */
    put: operations["putV2SsoConfigSsoConfigId"];
    /** destroy sso_config */
    delete: operations["deleteV2SsoConfigSsoConfigId"];
  };
  "/v2/sso_config_request_signature": {
    /** list sso_config_request_signatures */
    get: operations["getV2SsoConfigRequestSignature"];
    /** create sso_config_request_signature */
    post: operations["postV2SsoConfigRequestSignature"];
  };
  "/v2/sso_config_request_signature/{sso_config_request_signature_id}": {
    /** update sso_config_request_signature */
    put: operations["putV2SsoConfigRequestSignatureSsoConfigRequestSignatureId"];
    /** destroy sso_config_request_signature */
    delete: operations["deleteV2SsoConfigRequestSignatureSsoConfigRequestSignatureId"];
  };
  "/v2/governing_law": {
    /** get governing law */
    get: operations["getV2GoverningLaw"];
  };
  "/v2/public_favorite_item": {
    /** get public_favorite_items */
    get: operations["getV2PublicFavoriteItem"];
    /** create public_favorite_item */
    post: operations["postV2PublicFavoriteItem"];
  };
  "/v2/public_favorite_item/{public_favorite_item_id}": {
    /** update public_favorite_item */
    put: operations["putV2PublicFavoriteItemPublicFavoriteItemId"];
    /** delete public_favorite_item */
    delete: operations["deleteV2PublicFavoriteItemPublicFavoriteItemId"];
  };
  "/v2/sharepoint_document_library_config": {
    /** list sharepoint_document_library_config */
    get: operations["getV2SharepointDocumentLibraryConfig"];
    /** create sharepoint_document_library_config */
    post: operations["postV2SharepointDocumentLibraryConfig"];
  };
  "/v2/sharepoint_document_library_config/{id}": {
    /** update sharepoint_document_library_config */
    put: operations["putV2SharepointDocumentLibraryConfigId"];
    /** delete sharepoint_document_library_config */
    delete: operations["deleteV2SharepointDocumentLibraryConfigId"];
  };
  "/v2/authorization/diagnose": {
    /** get perm infos */
    get: operations["getV2AuthorizationDiagnose"];
  };
  "/v2/authorization/me": {
    /**
     * 指定した設定キー・リソースに対して、自分が保持している権限を返す。<br/>
     * 通常は確認したいresource_identifierに相当する設定キーとリソースを直接指定して実行する。(例: config_keys[]=workflow&resource_type=matter&resource_id=1) <br/>
     * ただし、resource_identifierを特定可能な別のリソースを指定することも可能。その場合、特定されたリソース種別はレスポンスのresolved_resource_typeに含まれる。
     * (例: config_keys[]=workflow&resource_type=document_tree&resource_id=1 とすると、document_tree:1 を案件フォルダ配下にかかえる案件の権限を返す)
     */
    get: operations["getV2AuthorizationMe"];
  };
  "/v2/authorization/group_permission": {
    get: operations["getV2AuthorizationGroupPermission"];
  };
  "/v2/organization_config/auth_info_csv_batch_setting": {
    /** update organization_config by not supplier user */
    put: operations["putV2OrganizationConfigAuthInfoCsvBatchSetting"];
  };
  "/v2/organization_config": {
    /** organization_config */
    get: operations["getV2OrganizationConfig"];
    /** update organization_config */
    put: operations["putV2OrganizationConfig"];
  };
  "/v2/tenant_config": {
    /** tenant_config */
    get: operations["getV2TenantConfig"];
  };
  "/v2/indexing_suspend": {
    /** ES indexingの停止/開始フラグの状態を取得する */
    get: operations["getV2IndexingSuspend"];
    /**
     * ES indexingの停止フラグの更新をおこなう。 <br/>
     * ・停止させた(will_suspends:false=>true)場合、今後のindexingは行われない。かつ、現在処理中のindexing jobがあれば、それも途中停止する。<br/>
     * ・開始させた(will_suspends:true=>false)場合、今後のindexingが行われるようになる。かつ、indexing処理対象レコードが停止時～停止中に(redisに)滞留していた場合は、そのindexingが即時実施される。<br/>
     *   ※keyword_suggestsとaggregation(名寄せ)については、redisに処理対象idを保持しないため、即時実施はない
     */
    put: operations["putV2IndexingSuspend"];
  };
  "/v2/box_sync_config": {
    /** list box_sync_config */
    get: operations["getV2BoxSyncConfig"];
    /** create box_sync_config */
    post: operations["postV2BoxSyncConfig"];
  };
  "/v2/box_sync_config/{id}": {
    /** delete box_sync_config */
    delete: operations["deleteV2BoxSyncConfigId"];
  };
  "/v2/search_indexer/keyword_suggests": {
    /**
     * keyword_suggestsのindexing実行の指示を出す。実行はapp_job_workerで非同期に実施される。<br/>
     * keyword_suggestsのindexingはapp_cronにて定期実行されているため、通常はこのAPIを使うことはない。<br/>
     * trial環境でkeyword_suggestsのindexを最新化させたい場合などで用いる。
     */
    post: operations["postV2SearchIndexerKeywordSuggests"];
  };
  "/v2/introduction_project/{organization_id}/matter_import": {
    /** csvから案件を一括取り込み */
    post: operations["postV2IntroductionProjectOrganizationIdMatterImport"];
  };
  "/v2/introduction_project/{organization_id}/ledger_tag_ledger_custom_column": {
    /** 既存の台帳に既存の共通カスタム項目を関連付ける */
    post: operations["postV2IntroductionProjectOrganizationIdLedgerTagLedgerCustomColumn"];
  };
  "/v2/introduction_project/{organization_id}/matter_form": {
    /** csvから案件フォームを一括作成 */
    post: operations["postV2IntroductionProjectOrganizationIdMatterForm"];
  };
  "/v2/introduction_project/{organization_id}/management_tag": {
    post: operations["postV2IntroductionProjectOrganizationIdManagementTag"];
  };
  "/v2/introduction_project/{organization_id}/folder": {
    post: operations["postV2IntroductionProjectOrganizationIdFolder"];
  };
  "/v2/introduction_project/{organization_id}/docusign_custom_field_condition": {
    post: operations["postV2IntroductionProjectOrganizationIdDocusignCustomFieldCondition"];
  };
  "/v2/introduction_project/{organization_id}/group_permission": {
    post: operations["postV2IntroductionProjectOrganizationIdGroupPermission"];
  };
  "/v2/introduction_project/{organization_id}/user_group_perm": {
    post: operations["postV2IntroductionProjectOrganizationIdUserGroupPerm"];
  };
  "/v2/introduction_project/{organization_id}/ledger_ledger_column": {
    /** 台帳の新規作成と、台帳項目の関連付け */
    post: operations["postV2IntroductionProjectOrganizationIdLedgerLedgerColumn"];
  };
  "/v2/introduction_project/{organization_id}/ledger/for_jcb": {
    /** "/app/shared/ledger_connect/input" 配下にファイルを用意し、その名前をパラメータに与えてください */
    post: operations["postV2IntroductionProjectOrganizationIdLedgerForJcb"];
  };
  "/v2/introduction_project/{organization_id}/ledger": {
    post: operations["postV2IntroductionProjectOrganizationIdLedger"];
  };
  "/v2/introduction_project/ledger_custom_column": {
    /** カスタム項目の新規作成 */
    post: operations["postV2IntroductionProjectLedgerCustomColumn"];
  };
  "/v2/mntsq_en_module_target_document_tree": {
    /** get mntsq_en_module_target_document_trees */
    get: operations["getV2MntsqEnModuleTargetDocumentTree"];
    /** create mntsq_en_module_target_document_tree */
    post: operations["postV2MntsqEnModuleTargetDocumentTree"];
  };
  "/v2/mntsq_en_module_target_document_tree/{mntsq_en_module_target_document_tree_id}": {
    /** delete mntsq_en_module_target_document_tree */
    delete: operations["deleteV2MntsqEnModuleTargetDocumentTreeMntsqEnModuleTargetDocumentTreeId"];
  };
  "/v2/matter_form": {
    /** get matter form / form_titleの文字コード昇順に返す */
    get: operations["getV2MatterForm"];
    /** create matter form */
    post: operations["postV2MatterForm"];
  };
  "/v2/matter_form/{matter_form_id}": {
    /** get matter_form */
    get: operations["getV2MatterFormMatterFormId"];
    /** put matter_form */
    put: operations["putV2MatterFormMatterFormId"];
    /** delete matter_form / supplierのみ実行可 / テストデータ削除や、顧客対応でデータ削除を依頼されたとき等の利用を想定 */
    delete: operations["deleteV2MatterFormMatterFormId"];
  };
  "/v2/matter_form/{matter_form_id}/unarchive": {
    /** unarchive matter_form */
    post: operations["postV2MatterFormMatterFormIdUnarchive"];
  };
  "/v2/matter_form/{matter_form_id}/archive": {
    /** archive matter_form */
    post: operations["postV2MatterFormMatterFormIdArchive"];
  };
  "/v2/matter_form/export_list/all": {
    /** 指定した案件フォームを、関連データと合わせてエクスポートする */
    post: operations["postV2MatterFormExportListAll"];
  };
  "/v2/matter_form/export_list": {
    /** 指定した案件フォームを、関連データと合わせてエクスポートする */
    post: operations["postV2MatterFormExportList"];
  };
  "/v2/matter_status/ordering": {
    /** update matter status order */
    post: operations["postV2MatterStatusOrdering"];
  };
  "/v2/matter_status": {
    /** create matter status / type:Customのステータスを作成する */
    post: operations["postV2MatterStatus"];
  };
  "/v2/matter_status/{matter_status_id}": {
    /** update matter status */
    put: operations["putV2MatterStatusMatterStatusId"];
    /** delete matter status */
    delete: operations["deleteV2MatterStatusMatterStatusId"];
  };
  "/v2/matter_custom_column": {
    /** create matter custom column */
    post: operations["postV2MatterCustomColumn"];
  };
  "/v2/matter_custom_column/{matter_custom_column_id}": {
    /**
     * 案件カスタム項目を更新する。 <br/>
     * 選択肢があるoption_type(single_select, multi_select, list)の場合、以下のように追加・更新・削除を行える。 <br/>
     * ・追加: matter_custom_column_options[][id]を未指定にする <br/>
     * ・更新: matter_custom_column_options[][id]に既存のIDを指定する <br/>
     * ・削除: 削除したい既存の選択肢をmatter_custom_column_options[]に含めない <br/>
     * ・すべて更新なし: matter_custom_column_options[]自体を未指定にする
     */
    put: operations["putV2MatterCustomColumnMatterCustomColumnId"];
    /** delete matter custom column */
    delete: operations["deleteV2MatterCustomColumnMatterCustomColumnId"];
  };
  "/v2/matter": {
    /** create matter */
    post: operations["postV2Matter"];
  };
  "/v2/matter/export_matter_list": {
    /** export matter list async */
    post: operations["postV2MatterExportMatterList"];
  };
  "/v2/matter/stats": {
    /** get matter stats async */
    get: operations["getV2MatterStats"];
  };
  "/v2/matter/stats/search_condition": {
    /** get matter stats search condition */
    get: operations["getV2MatterStatsSearchCondition"];
    /** ダッシュボードの検索条件を登録、更新します */
    post: operations["postV2MatterStatsSearchCondition"];
  };
  "/v2/matter/{matter_id}/last_actioned_at": {
    /** 案件の最終アクション日時を取得する */
    get: operations["getV2MatterMatterIdLastActionedAt"];
  };
  "/v2/matter/{matter_id}/set_time": {
    /** トライアル・デモ環境向け: 案件やタイムラインの日時を差し替える / supplierのみ実行可 */
    put: operations["putV2MatterMatterIdSetTime"];
  };
  "/v2/matter/{matter_id}/users": {
    /** 案件と案件フォームの権限をチェックし、「ユーザーが持つフォーム権限のうち最上位の権限」で分類する */
    get: operations["getV2MatterMatterIdUsers"];
  };
  "/v2/matter/{matter_id}": {
    /** get matter */
    get: operations["getV2MatterMatterId"];
    /** update matter */
    put: operations["putV2MatterMatterId"];
    /** delete matter / supplierのみ実行可 / テストデータ削除や、顧客対応でデータ削除を依頼されたとき等の利用を想定 */
    delete: operations["deleteV2MatterMatterId"];
  };
  "/v2/matter/{matter_id}/matter_timeline_comment_draft": {
    /** get matter timeline comment draft */
    get: operations["getV2MatterMatterIdMatterTimelineCommentDraft"];
  };
  "/v2/matter/{matter_id}/matter_timeline_comment_draft/upsert": {
    /** upsert matter timeline comment draft / 案件に既存下書きコメントが無いとき新規作成、あるとき更新する */
    post: operations["postV2MatterMatterIdMatterTimelineCommentDraftUpsert"];
  };
  "/v2/matter_timeline": {
    /** get matter_timeline list */
    get: operations["getV2MatterTimeline"];
    /** delete matter_timeline / supplierのみ実行可 / テストデータ削除等の利用を想定 */
    delete: operations["deleteV2MatterTimeline"];
  };
  "/v2/matter_timeline/comment": {
    /** create matter_timeline comment */
    post: operations["postV2MatterTimelineComment"];
  };
  "/v2/matter_timeline/{matter_timeline_id}/comment": {
    /** update matter_timeline comment / 自分が投稿したコメントのみ編集可 */
    put: operations["putV2MatterTimelineMatterTimelineIdComment"];
    /** delete matter_timeline comment / 自分が投稿したコメントのみ削除可 */
    delete: operations["deleteV2MatterTimelineMatterTimelineIdComment"];
  };
  "/v2/matter_timeline_comment_draft": {
    /** get matter timeline comment drafts */
    get: operations["getV2MatterTimelineCommentDraft"];
  };
  "/v2/matter_timeline_comment_draft/{matter_timeline_comment_draft_id}": {
    /** delete matter timeline comment draft / MNTSQユーザは自分が作成したもの以外でも指定したIDの下書きを削除できる */
    delete: operations["deleteV2MatterTimelineCommentDraftMatterTimelineCommentDraftId"];
  };
  "/v2/matter_timeline_comment_draft_attachment_document/fileuploads": {
    /** upload matter timeline comment draft attachment document */
    post: operations["postV2MatterTimelineCommentDraftAttachmentDocumentFileuploads"];
  };
  "/v2/matter_timeline_comment_draft_attachment_document/{matter_timeline_comment_draft_attachment_document_id}": {
    /** delete matter timeline comment draft attachment document / MNTSQユーザは自分がアップロードしたもの以外でも指定したIDのファイルを削除できる */
    delete: operations["deleteV2MatterTimelineCommentDraftAttachmentDocumentMatterTimelineCommentDraftAttachmentDocumentId"];
  };
  "/v2/matter_final_version_document/bulk_save": {
    /** bulk save matter_final_version_document */
    post: operations["postV2MatterFinalVersionDocumentBulkSave"];
  };
  "/v2/matter_responsible_entity/bulk_save": {
    /** bulk save matter_responsible_entity */
    post: operations["postV2MatterResponsibleEntityBulkSave"];
  };
  "/v2/matter_default_responsible_entity/bulk_save": {
    /** bulk save matter_default_responsible_entity */
    post: operations["postV2MatterDefaultResponsibleEntityBulkSave"];
  };
  "/v2/matter_default_related_entity/bulk_save": {
    /** bulk save matter_default_related_entity */
    post: operations["postV2MatterDefaultRelatedEntityBulkSave"];
  };
  "/v2/matter_requester_entity/bulk_save": {
    /** bulk save matter_requester_entity */
    post: operations["postV2MatterRequesterEntityBulkSave"];
  };
  "/v2/matter_related_entity/bulk_save": {
    /** bulk save matter_related_entity */
    post: operations["postV2MatterRelatedEntityBulkSave"];
  };
  "/v2/matter_column_setting/{matter_column_setting_id}": {
    /** update matter column setting */
    put: operations["putV2MatterColumnSettingMatterColumnSettingId"];
  };
  "/v2/matter_column_setting/ordering": {
    /** ordering matter_column_setting / 該当matter_formのすべての項目のidと並び順を指定する必要がある */
    post: operations["postV2MatterColumnSettingOrdering"];
  };
  "/v2/matter_attachment_document/fileuploads": {
    /** upload matter attachment document */
    post: operations["postV2MatterAttachmentDocumentFileuploads"];
  };
  "/v2/matter_draft": {
    /** get matter drafts */
    get: operations["getV2MatterDraft"];
    /** create matter draft */
    post: operations["postV2MatterDraft"];
  };
  "/v2/matter_draft/{matter_draft_id}": {
    /** get matter draft */
    get: operations["getV2MatterDraftMatterDraftId"];
    /** update matter draft */
    put: operations["putV2MatterDraftMatterDraftId"];
    /** delete matter draft */
    delete: operations["deleteV2MatterDraftMatterDraftId"];
  };
  "/v2/matter_draft_attachment_document/fileuploads": {
    /** upload matter draft attachment document */
    post: operations["postV2MatterDraftAttachmentDocumentFileuploads"];
  };
  "/v2/contract_relation/{contract_relation_id}": {
    /** get relation */
    get: operations["getV2ContractRelationContractRelationId"];
    /** put relation */
    put: operations["putV2ContractRelationContractRelationId"];
    /** delete relation */
    delete: operations["deleteV2ContractRelationContractRelationId"];
  };
  "/v2/contract_relation": {
    /** post relation */
    post: operations["postV2ContractRelation"];
    /** delete relation */
    delete: operations["deleteV2ContractRelation"];
  };
  "/v2/successive_client": {
    get: operations["getV2SuccessiveClient"];
    post: operations["postV2SuccessiveClient"];
  };
  "/v2/successive_client/{successive_client_id}": {
    put: operations["putV2SuccessiveClientSuccessiveClientId"];
    delete: operations["deleteV2SuccessiveClientSuccessiveClientId"];
  };
  "/v2/successive_client/{successive_client_id}/client_name": {
    post: operations["postV2SuccessiveClientSuccessiveClientIdClientName"];
  };
  "/v2/successive_client/{successive_client_id}/client_name/{client_name_id}": {
    put: operations["putV2SuccessiveClientSuccessiveClientIdClientNameClientNameId"];
    delete: operations["deleteV2SuccessiveClientSuccessiveClientIdClientNameClientNameId"];
  };
  "/v2/xlsxdownload/user_list": {
    /** ユーザー一覧リスト 出力<br>出力仕様: https://docs.google.com/document/d/1aU0ypoannheVOkLJgOx4gty-ca3jQ7TghCxKJfQ6a-U/edit */
    get: operations["getV2XlsxdownloadUserList"];
  };
  "/v2/xlsxdownload/matter_list": {
    /** 案件一覧リスト 出力<br>出力仕様: https://docs.google.com/document/d/14KBso7w4MHcVuzr5w7Xs45ZT-Hi601ACAOVVXnGf0qQ/edit# */
    get: operations["getV2XlsxdownloadMatterList"];
  };
  "/v2/xlsxdownload/annotation_list": {
    /** 危険条項リスト 出力<br>出力仕様: https://github.com/MNTSQ/mntsq/blob/develop/docs/file_exports.md#危険条項リスト */
    get: operations["getV2XlsxdownloadAnnotationList"];
  };
  "/v2/xlsxdownload": {
    get: operations["getV2Xlsxdownload"];
  };
  "/v2/csvdownload/docusign_webhook_list": {
    get: operations["getV2CsvdownloadDocusignWebhookList"];
  };
  "/v2/csvdownload/document_list": {
    get: operations["getV2CsvdownloadDocumentList"];
  };
  "/v2/connectmail/email_filter_mode": {
    /** get email_filter_mode */
    get: operations["getV2ConnectmailEmailFilterMode"];
    /** update email_filter_mode */
    put: operations["putV2ConnectmailEmailFilterMode"];
  };
  "/v2/connectmail/whitelisted_domain/{id}": {
    delete: operations["deleteV2ConnectmailWhitelistedDomainId"];
  };
  "/v2/connectmail/whitelisted_domain": {
    get: operations["getV2ConnectmailWhitelistedDomain"];
    post: operations["postV2ConnectmailWhitelistedDomain"];
  };
  "/v2/search_hash_generator/clause_minhash": {
    /** 条項のminhashを計算し、そのまま登録します */
    post: operations["postV2SearchHashGeneratorClauseMinhash"];
  };
  "/v2/localization_config": {
    /** get localization_config */
    get: operations["getV2LocalizationConfig"];
    /** update localization_config */
    put: operations["putV2LocalizationConfig"];
  };
  "/v2/document_analysis/rerun": {
    /** ドキュメントの解析パイプラインを rerun する */
    post: operations["postV2DocumentAnalysisRerun"];
  };
  "/v2/reminder/{reminder_id}": {
    /** 自動通知設定の取得 */
    get: operations["getV2ReminderReminderId"];
    /** 自動通知設定の更新 */
    put: operations["putV2ReminderReminderId"];
    /** 自動通知設定の削除 */
    delete: operations["deleteV2ReminderReminderId"];
  };
  "/v2/ledger_tag_reminder_template/{ledger_tag_reminder_template_id}": {
    /** 自動通知設定の取得 */
    get: operations["getV2LedgerTagReminderTemplateLedgerTagReminderTemplateId"];
    /** 自動通知設定の更新 */
    put: operations["putV2LedgerTagReminderTemplateLedgerTagReminderTemplateId"];
    /** 自動通知設定の削除 */
    delete: operations["deleteV2LedgerTagReminderTemplateLedgerTagReminderTemplateId"];
  };
  "/v2/notification_custom_mail_content": {
    /** メールカスタマイズ文章の全取得 */
    get: operations["getV2NotificationCustomMailContent"];
    /** メールカスタマイズ文章の作成 */
    post: operations["postV2NotificationCustomMailContent"];
  };
  "/v2/notification_custom_mail_content/{notification_custom_mail_content_id}": {
    /** メールカスタマイズ文章の更新 */
    put: operations["putV2NotificationCustomMailContentNotificationCustomMailContentId"];
    /** メールカスタマイズ文章の削除 */
    delete: operations["deleteV2NotificationCustomMailContentNotificationCustomMailContentId"];
  };
  "/v2/notification_custom_mail_content/{notification_custom_mail_content_id}/ledger_tags": {
    /** メールカスタマイズ文章に台帳を割り当てる */
    post: operations["postV2NotificationCustomMailContentNotificationCustomMailContentIdLedgerTags"];
  };
  "/v2/notification_custom_mail_content/{notification_custom_mail_content_id}/ledger_tag/{ledger_tag_id}": {
    /** メールカスタマイズ文章と台帳の割り当てを削除 */
    delete: operations["deleteV2NotificationCustomMailContentNotificationCustomMailContentIdLedgerTagLedgerTagId"];
  };
  "/v2/notification_custom_mail_content/preview": {
    /** メールカスタマイズ文章が割り当てられた台帳・通知種別から絞り込み取得 */
    get: operations["getV2NotificationCustomMailContentPreview"];
  };
  "/v2/office_connector/upload_targets": {
    /** office 連携で uploadするときの宛先情報 */
    get: operations["getV2OfficeConnectorUploadTargets"];
  };
}

export interface definitions {
  /** @description V2_ProjectEntity model */
  V2_ProjectEntity: {
    /**
     * Format: int32
     * @description project id
     */
    id?: number;
    /**
     * @description project名
     * @example 株式会社MNTSQ
     */
    name: string;
    /**
     * @description アノテーション用プロジェクトか否か
     * @example true
     */
    is_annotation_project: boolean;
    /**
     * @description プロジェクト開始日
     * @example 2018-01-12
     */
    start_on?: string;
    /**
     * @description プロジェクト終了日
     * @example 2019-03-01
     */
    end_on?: string;
    /**
     * @description ステータス live(進行中)かarchived(終了)
     * @example live
     */
    status: string;
    /**
     * @description DDのタイプ
     * @example full_scope(default) / limited_scope
     */
    dd_type: string;
    /**
     * @description プロジェクトの用途 train(学習用)かvalidation(検証用)かout_of_scope(対象外)
     * @example out_of_scope(default) / train / validation
     */
    ml_usage_type?: string;
    target_companies: definitions["V2_TargetCompanyEntity"][];
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
    /** @example 2018-10-01 12:00:00 */
    issue_tree_imported_at?: string;
    /** @description question configで設定した値 */
    question_config_status?: string;
    /** @description プロジェクトスキーム情報 */
    project_scheme?: definitions["V2_ProjectSchemeEntity"];
    members: { [key: string]: unknown }[];
    /** @example 2018-10-01 12:00:00 */
    question_config_last_answered_at?: string;
    /** @example 2018-10-01 12:00:00 */
    question_rendered_at?: string;
  };
  /** @description V2_TargetCompanyEntity model */
  V2_TargetCompanyEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description 資本関係
     * @example base
     */
    capital_relationship: string;
    /**
     * @description 会社の種別
     * @example target
     */
    company_type: string;
    /**
     * @description 完全保有か否か
     * @example false
     */
    is_wholly_owned?: boolean;
    /**
     * @description 上場会社か否か
     * @example false
     */
    is_listed_company?: boolean;
    /**
     * @description 公開会社か否か
     * @example false
     */
    is_public_company?: boolean;
    /**
     * @description 取締役会設置会社か否か
     * @example false
     */
    with_board_of_directors?: boolean;
    /**
     * @description 監査役会設置会社か否か
     * @example false
     */
    with_board_of_auditors?: boolean;
    /** @description 対象会社の社名配列 */
    company_names?: string[];
    /** @example 2019-02-01 12:00:00 */
    created_at?: string;
    /** @example 2019-02-01 12:00:00 */
    updated_at?: string;
  };
  V2_ProjectSchemeEntity: {
    /**
     * Format: int32
     * @description project scheme id
     */
    id?: number;
    /**
     * Format: int32
     * @description project id
     */
    project_id?: number;
    /** @description 株式譲渡スキームか？ */
    is_share_transfer?: boolean;
    /** @description 出資スキームか？ */
    is_share_contribution?: boolean;
    /** @description 合併スキームか？ */
    is_corporate_merger?: boolean;
    /** @description 会社分割スキームか？ */
    is_corporate_division?: boolean;
    /** @description 代表者の変更スキームか？ */
    is_change_of_representative?: boolean;
    /** @description 商号の変更スキームか？ */
    is_change_of_tradename?: boolean;
    /** @description 事業継承スキームか？ */
    is_business_transfer?: boolean;
  };
  /** @description V2_ProjectListWithStatsEntity model */
  V2_ProjectListWithStatsEntity: {
    projects: definitions["V2_ProjectDetailEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_ProjectDetailEntity model */
  V2_ProjectDetailEntity: {
    /**
     * Format: int32
     * @description project id
     */
    id?: number;
    /**
     * @description project名
     * @example 株式会社MNTSQ
     */
    name: string;
    /**
     * @description アノテーション用プロジェクトか否か
     * @example true
     */
    is_annotation_project: boolean;
    /**
     * @description プロジェクト開始日
     * @example 2018-01-12
     */
    start_on?: string;
    /**
     * @description プロジェクト終了日
     * @example 2019-03-01
     */
    end_on?: string;
    /**
     * @description ステータス live(進行中)かarchived(終了)
     * @example live
     */
    status: string;
    /**
     * @description DDのタイプ
     * @example full_scope(default) / limited_scope
     */
    dd_type: string;
    /**
     * @description プロジェクトの用途 train(学習用)かvalidation(検証用)かout_of_scope(対象外)
     * @example out_of_scope(default) / train / validation
     */
    ml_usage_type?: string;
    target_companies: definitions["V2_TargetCompanyEntity"][];
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
    /** @example 2018-10-01 12:00:00 */
    issue_tree_imported_at?: string;
    /** @description question configで設定した値 */
    question_config_status?: string;
    /** @description プロジェクトスキーム情報 */
    project_scheme?: definitions["V2_ProjectSchemeEntity"];
    /** @example 2018-10-01 12:00:00 */
    question_config_last_answered_at?: string;
    /** @example 2018-10-01 12:00:00 */
    question_rendered_at?: string;
  };
  V2_CollectionPager: {
    /**
     * Format: int32
     * @description 全件数
     * @example 3
     */
    counts_all: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 1
     */
    counts_pages_all: number;
    /**
     * Format: int32
     * @description 現ページ番号
     * @example 1
     */
    current_page: number;
    /**
     * @description 前ページが存在しているか
     * @example true
     */
    prev_exists: boolean;
    /**
     * @description 次ページが存在しているか
     * @example true
     */
    next_exists: boolean;
  };
  /** @description V2_DocumentIdListEntity model */
  V2_DocumentIdListEntity: {
    document_ids?: number[];
    stats: definitions["V2_Search_ListStatsEntity"];
  };
  V2_Search_ListStatsEntity: {
    /**
     * Format: int32
     * @description 全件数
     * @example 123
     */
    counts_all: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 12
     */
    counts_pages_all: number;
    /**
     * Format: int32
     * @description 現ページ番号
     * @example 12
     */
    current_page: number;
    /**
     * @description 前ページが存在しているか
     * @example false
     */
    prev_exists: boolean;
    /**
     * @description 次ページが存在しているか
     * @example true
     */
    next_exists: boolean;
  };
  /** @description V2_QuestionConfigAnswerEntity model */
  V2_QuestionConfigAnswerEntity: {
    /**
     * @description 回答が受理されたか
     * @example {result: 'success'}
     */
    stats?: string;
    question_config_next?: definitions["V2_RenderedQuestionConfigEntity"];
  };
  V2_RenderedQuestionConfigEntity: {
    /**
     * Format: int32
     * @description question config id
     * @example 1
     */
    id?: number;
    /**
     * @description QuestionConfigを特定するためのコード
     * @example QC-AA-00
     */
    code?: string;
    /**
     * @description 質問文
     * @example XXなものがあれば、ご開示ください
     */
    rendered_text?: string;
    /**
     * @description 選択肢の種類
     * @example single_select
     */
    interaction_type?: string;
    /**
     * @description 選択肢の内容
     * @example {"はい": True, "いいえ": False}
     */
    select_options?: string;
    /**
     * @description フロントエンドで表示する付加情報
     * @example こちらは○○になります
     */
    question_info?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_AdminEmailNotificationEntity model */
  V2_AdminEmailNotificationEntity: {
    /**
     * Format: int32
     * @description お知らせ通知メールID
     * @example 1
     */
    id: number;
    /**
     * @description お知らせ通知タイプ
     * @example auto_assign_finished
     */
    notification_type: string;
    /**
     * @description ステート
     * @example wait_for_send
     */
    state: string;
    /**
     * @description 送信日時
     * @example 2019-05-17 16:00:00
     */
    sent_at?: string;
    /**
     * @description 作成日時
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 更新日時
     * @example 2019-05-17 16:00:00
     */
    updated_at: string;
    /** @description メタデータ */
    metadata?: { [key: string]: unknown };
  };
  /** @description V2_DeletedItemListEntity model */
  V2_DeletedItemListEntity: {
    ids: number[];
  };
  /** @description V2_DocumentListWithExtendedStatsEntity model */
  V2_DocumentListWithExtendedStatsEntity: {
    response?: {
      documents: definitions["V2_DocumentEntity"][];
      stats: definitions["V2_DocumentListExtendedStatsEntity"];
    };
  };
  V2_DocumentEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description ファイル名
     * @example 定款
     */
    title: string;
    /**
     * @description 契約書かどうか
     * @example true
     */
    required_disclaim?: boolean;
    /**
     * @description 法務関連書類かどうか
     * @example true
     */
    required_annotate?: boolean;
    /**
     * @description ファイルの種類(pdf, docx)
     * @example pdf
     */
    file_type: string;
    normalized_file_type?: string;
    /** @description document_treeにおけるpath */
    ancestor_paths?: { [key: string]: unknown }[];
    /**
     * @description 終期の定めなし
     * @example false
     */
    is_non_fixed_contract_term?: boolean;
    /**
     * @description ドキュメントの登録日時
     * @example 2018-10-01 00:00:00
     */
    created_at: string;
    /**
     * @description ドキュメントの更新日時
     * @example 2018-10-01 00:00:00
     */
    updated_at: string;
    /** @example 2018-10-01 12:00:00 */
    translate_finished_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_started_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_timed_out_at?: string;
    sections?: definitions["V2_SectionEntity"][];
    parties?: definitions["V2_PartyEntity"][];
    analyze_job?: definitions["V2_AnalyzeJobEntity"];
    /**
     * @description メモ
     * @example 第3条にXXあり。要注意 >YY参照のこと
     */
    note?: string;
    /**
     * @description HTMLエスケープ済みメモ
     * @example 第3条にXXあり。要注意 &gt;YY参照のこと
     */
    escaped_note?: string;
    /**
     * @description 巨大なファイルか？(xls or xlsx)
     * @example false
     */
    is_too_big_file?: boolean;
    /**
     * Format: int32
     * @description アップロードしたUserのId
     * @example 1
     */
    uploader_user_id?: number;
    /**
     * @description 非対応ファイルか？
     * @example false
     */
    is_unsupported_format?: boolean;
    /**
     * Format: int32
     * @description ページ数
     * @example 1
     */
    page_num?: number;
    /**
     * @description ファイルタイプ
     * @example word
     */
    file_format_for_search?: string;
    /**
     * @description ドキュメントの作成日
     * @example 2018-10-01 12:00:00
     */
    created_at_for_search?: string;
    /**
     * @description 締結版か否か
     * @example true
     */
    is_final_version?: boolean;
    /** @description ドキュメント種別 */
    document_types?: string[];
    /**
     * @description 雛型か？
     * @example false
     */
    is_contract_template?: boolean;
    /**
     * @description どこの雛型か。not_contract_template, mntsq, outdated_mntsqなど
     * @example mntsq
     */
    contract_template_credit_title?: string;
    /**
     * @description 外部参照情報。MNTSQ外の客先システムのIDなど。
     * @example ABC123
     */
    external_reference_info?: string;
    /**
     * @description 外部参照リンク
     * @example http://example.com/external/link
     */
    external_service_url?: string;
    /**
     * @description OCRの精度が低い場合true
     * @example true
     */
    is_ocr_poor_quality?: boolean;
    language?: string;
    file_name_label?: string;
    /** @description 検索用にカスタムされた言語判定 */
    language_for_search?: string;
    ledger_tags?: definitions["V2_LedgerTagEntity"][];
    management_tags: definitions["V2_ManagementTagEntity"][];
    /**
     * @description どこからdocumentが追加されたか
     * @example manual_upload
     */
    data_source?: string;
    docusign_document?: definitions["V2_DocusignDocumentEntity"];
    /** Format: int32 */
    transaction_amount_annotation_id?: number;
    transaction_amount_annotation?: definitions["V2_TransactionAmountAnnotationEntity"];
    /** @description 有効/失効ステータス */
    status: string;
    document_governing_laws?: definitions["V2_DocumentGoverningLawEntity"][];
    /** @description 目的 */
    purpose?: string;
    gdrive_document_tree?: definitions["V2_GdriveDocumentTreeEntity"];
    box_document_tree?: definitions["V2_BoxDocumentTreeEntity"];
  };
  V2_SectionEntity: {
    /**
     * Format: int32
     * @description 紐づくdocumentのID
     * @example 1
     */
    document_id?: number;
    /**
     * @description 論点マップに掲載されているセクションのタイプ(全9種類)
     * @example asset
     */
    section_type: string;
    /**
     * @description ジョブによるものか？
     * @example true
     */
    auto_detect: boolean;
  };
  V2_PartyEntity: {
    /**
     * Format: int32
     * @description アノテーションID
     * @example 1
     */
    annotation_id?: number;
    /**
     * Format: int32
     * @description クライアントマスターID
     * @example 1
     */
    client_master_id?: number;
    /**
     * @description 企業名
     * @example やまだ自動車
     */
    name?: string;
    descriptions: string[];
    party_type: string[];
    /** @example false */
    is_group_company?: boolean;
    /** @example false */
    is_counterparty?: boolean;
  };
  /** @description V2_AnalyzeJobEntity model */
  V2_AnalyzeJobEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    updated_at?: string;
    pre_ocr_started_at?: string;
    pre_ocr_finished_at?: string;
    pre_ocr_process_id?: string;
    pre_ocr_result_message?: string;
    ocr_started_at?: string;
    ocr_finished_at?: string;
    ocr_process_id?: string;
    ocr_result_message?: string;
    post_ocr_started_at?: string;
    post_ocr_finished_at?: string;
    post_ocr_process_id?: string;
    post_ocr_result_message?: string;
    annotate_started_at?: string;
    annotate_finished_at?: string;
    annotate_process_id?: string;
    annotate_result_message?: string;
    post_annotate_started_at?: string;
    post_annotate_finished_at?: string;
    post_annotate_process_id?: string;
    post_annotate_result_message?: string;
    /** @example post_annotate_success */
    result_type?: string;
    /**
     * Format: int32
     * @example 1
     */
    document_id?: number;
    /** @example false */
    is_ocr_skipped?: boolean;
    finished_at?: string;
    process_type?: string;
  };
  /** @description V2_LedgerTagEntity model */
  V2_LedgerTagEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    organization_id: number;
    /** Format: int32 */
    target_document_tree_id?: number;
    label: string;
    auto_add_file_path?: string;
    description?: string;
    /** Format: int32 */
    order_num: number;
    ledger_custom_columns?: definitions["V2_LedgerCustomColumnEntity"][];
    ledger_tag_default_columns?: definitions["V2_LedgerTagDefaultColumnEntity"][];
  };
  /** @description V2_LedgerCustomColumnEntity model */
  V2_LedgerCustomColumnEntity: {
    /**
     * Format: int32
     * @description ID
     */
    id: number;
    /** @description カラム名 */
    column_name: string;
    /** @description 依頼者むけの注釈文 */
    caption_text?: string;
    /** @description 入力タイプ */
    option_type: string;
    /**
     * Format: int32
     * @description 並び順
     */
    order_num?: number;
    /** @description 表示非表示 */
    is_enabled?: boolean;
    /** @description 共有カスタム項目か */
    is_shared?: boolean;
    /** @description レビュー時に必須項目とするか */
    is_required?: boolean;
    default_value?: string;
    /** @description 選択肢 */
    ledger_custom_column_options?: definitions["V2_LedgerCustomColumnOptionEntity"][];
    ledger_tag_ledger_custom_columns?: definitions["V2_LedgerTagLedgerCustomColumnEntity"][];
  };
  V2_LedgerCustomColumnOptionEntity: {
    /**
     * Format: int32
     * @description ID
     */
    id: number;
    /** @description label */
    label: string;
    is_default: boolean;
  };
  V2_LedgerTagLedgerCustomColumnEntity: {
    /** Format: int32 */
    ledger_custom_column_id: number;
    /** Format: int32 */
    ledger_tag_id: number;
    ledger_tag_label?: string;
  };
  V2_LedgerTagDefaultColumnEntity: {
    /** Format: int32 */
    id: number;
    column_type: string;
    is_enabled: boolean;
  };
  /** @description V2_ManagementTagEntity model */
  V2_ManagementTagEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    organization_id: number;
    label: string;
    hierarchy_label: string;
    auto_add_file_path?: string;
    description?: string;
    /**
     * Format: int32
     * @description 親management_tag.id
     */
    parent_management_tag_id?: number;
    /** @description 祖先のmanagement_tag.id一式 */
    management_tag_ancestor_ids?: number[];
  };
  V2_DocusignDocumentEntity: {
    /**
     * @description documentのDocuSign上のuri
     * @example /envelopes/xxxxxx-xxx-xxxxxx/documents/documents
     */
    document_uri: string;
    /**
     * @description certificateのDocuSign上のuri
     * @example /envelopes/xxxxxx-xxx-xxxxxx/documents/certificate
     */
    certificate_uri?: string;
  };
  V2_TransactionAmountAnnotationEntity: {
    /**
     * Format: int32
     * @description user id
     * @example 1
     */
    id: number;
    /**
     * @description 機械が読める形の詳細情報
     * @example <stringifyされたjson>
     */
    details?: string;
  };
  /** @description V2_DocumentGoverningLawEntity model */
  V2_DocumentGoverningLawEntity: {
    /**
     * Format: int32
     * @description id
     */
    id: number;
    /**
     * Format: int32
     * @description ドキュメントのid
     */
    document_id: number;
    /** @description 準拠法コード */
    governing_law_code: string;
  };
  V2_GdriveDocumentTreeEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description GdriveのFileId
     * @example 12345
     */
    file_id: string;
  };
  V2_BoxDocumentTreeEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description BoxのItemId
     * @example 12345
     */
    box_item_id: string;
  };
  V2_DocumentListExtendedStatsEntity: {
    /**
     * @description リストの結果
     * @example success
     */
    result_type: string;
    /**
     * Format: int32
     * @description 全件数
     * @example 3
     */
    counts_all?: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 1
     */
    counts_pages_all: number;
    /**
     * Format: int32
     * @description 失敗の数
     * @example 0
     */
    counts_failure?: number;
    /**
     * Format: int32
     * @description 解読不能の数
     * @example 2
     */
    counts_unreadable?: number;
    /**
     * @description 前ページが存在しているか
     * @example true
     */
    prev_exists: boolean;
    /**
     * @description 次ページが存在しているか
     * @example true
     */
    next_exists: boolean;
    /** @description 検索対象の起点までのancestor_paths */
    scoped_ancestor_paths: { [key: string]: unknown }[];
  };
  /** @description V2_DocumentDetailEntity model */
  V2_DocumentDetailEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description ファイル名
     * @example 定款
     */
    title: string;
    /**
     * @description 契約書かどうか
     * @example true
     */
    required_disclaim?: boolean;
    /**
     * @description 法務関連書類かどうか
     * @example true
     */
    required_annotate?: boolean;
    /**
     * @description ファイルの種類(pdf, docx)
     * @example pdf
     */
    file_type: string;
    normalized_file_type?: string;
    /** @description document_treeにおけるpath */
    ancestor_paths?: { [key: string]: unknown }[];
    /**
     * @description 終期の定めなし
     * @example false
     */
    is_non_fixed_contract_term?: boolean;
    /**
     * @description ドキュメントの登録日時
     * @example 2018-10-01 00:00:00
     */
    created_at: string;
    /**
     * @description ドキュメントの更新日時
     * @example 2018-10-01 00:00:00
     */
    updated_at: string;
    /** @example 2018-10-01 12:00:00 */
    translate_finished_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_started_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_timed_out_at?: string;
    sections?: definitions["V2_SectionEntity"][];
    parties?: definitions["V2_PartyEntity"][];
    analyze_job?: definitions["V2_AnalyzeJobEntity"];
    /**
     * @description メモ
     * @example 第3条にXXあり。要注意 >YY参照のこと
     */
    note?: string;
    /**
     * @description HTMLエスケープ済みメモ
     * @example 第3条にXXあり。要注意 &gt;YY参照のこと
     */
    escaped_note?: string;
    /**
     * @description 巨大なファイルか？(xls or xlsx)
     * @example false
     */
    is_too_big_file?: boolean;
    /**
     * Format: int32
     * @description アップロードしたUserのId
     * @example 1
     */
    uploader_user_id?: number;
    /**
     * @description 非対応ファイルか？
     * @example false
     */
    is_unsupported_format?: boolean;
    /**
     * Format: int32
     * @description ページ数
     * @example 1
     */
    page_num?: number;
    /**
     * @description ファイルタイプ
     * @example word
     */
    file_format_for_search?: string;
    /**
     * @description ドキュメントの作成日
     * @example 2018-10-01 12:00:00
     */
    created_at_for_search?: string;
    /**
     * @description 締結版か否か
     * @example true
     */
    is_final_version?: boolean;
    /** @description ドキュメント種別 */
    document_types?: string[];
    /**
     * @description 雛型か？
     * @example false
     */
    is_contract_template?: boolean;
    /**
     * @description どこの雛型か。not_contract_template, mntsq, outdated_mntsqなど
     * @example mntsq
     */
    contract_template_credit_title?: string;
    /**
     * @description 外部参照情報。MNTSQ外の客先システムのIDなど。
     * @example ABC123
     */
    external_reference_info?: string;
    /**
     * @description 外部参照リンク
     * @example http://example.com/external/link
     */
    external_service_url?: string;
    /**
     * @description OCRの精度が低い場合true
     * @example true
     */
    is_ocr_poor_quality?: boolean;
    language?: string;
    file_name_label?: string;
    /** @description 検索用にカスタムされた言語判定 */
    language_for_search?: string;
    ledger_tags?: definitions["V2_LedgerTagEntity"][];
    management_tags: definitions["V2_ManagementTagEntity"][];
    /**
     * @description どこからdocumentが追加されたか
     * @example manual_upload
     */
    data_source?: string;
    docusign_document?: definitions["V2_DocusignDocumentEntity"];
    /** Format: int32 */
    transaction_amount_annotation_id?: number;
    transaction_amount_annotation?: definitions["V2_TransactionAmountAnnotationEntity"];
    /** @description 有効/失効ステータス */
    status: string;
    document_governing_laws?: definitions["V2_DocumentGoverningLawEntity"][];
    /** @description 目的 */
    purpose?: string;
    gdrive_document_tree?: definitions["V2_GdriveDocumentTreeEntity"];
    box_document_tree?: definitions["V2_BoxDocumentTreeEntity"];
    contract_types?: string[];
    annotations: { [key: string]: unknown }[];
    responsible_users?: definitions["V2_UserEntity"][];
    document_responsible_users?: definitions["V2_DocumentResponsibleUserEntity"][];
    responsible_user_groups?: definitions["V2_UserGroupFullEntity"][];
    document_responsible_user_groups?: definitions["V2_DocumentResponsibleUserGroupEntity"][];
    document_ledger_tags?: string[];
    document_management_tags?: definitions["V2_DocumentManagementTagEntity"][];
    related_documents?: { [key: string]: unknown }[];
    related_agreements?: { [key: string]: unknown }[];
    has_related_agreement_candidates?: boolean;
    notification?: definitions["V2_NotificationEntity"];
    document_email?: definitions["V2_DocumentEmailEntity"];
    ledger_custom_columns_with_value?: definitions["V2_LedgerCustomColumnWithValueEntity"][];
    /** @description このドキュメントを締結した元案件。複数ある場合は作成日の降順 */
    final_version_creator_matters?: definitions["V2_MatterEntity"][];
    /** @description このドキュメントに関連する(案件画面から添付された or 案件フォルダに直接uploadされた)案件。複数ある場合は作成日の降順 */
    related_matters?: definitions["V2_MatterEntity"][];
    /** @description レビュー済みかどうか */
    reviewed?: boolean;
  };
  /** @description V2_UserEntity model */
  V2_UserEntity: {
    /**
     * Format: int32
     * @description user id
     * @example 1
     */
    id: number;
    /**
     * @description user email
     * @example test@test.com
     */
    email: string;
    /**
     * @description user name
     * @example 板谷隆平
     */
    name: string;
    /**
     * @description status
     * @example live
     */
    status: string;
    /**
     * @description user type
     * @example member
     */
    user_type: string;
    /**
     * @description user role
     * @example lawyer
     */
    user_role: string;
    /**
     * @description user created_at
     * @example 2018-10-01 12:00:00
     */
    created_at: string;
    /**
     * @description user updated_at
     * @example 2018-11-03 11:20:33
     */
    updated_at: string;
    /** Format: int32 */
    organization_id: number;
    organization: definitions["V2_OrganizationEntity"];
    user_groups: definitions["V2_UserGroupFullEntity"][];
    /**
     * @description PW更新を求めるか
     * @example false
     */
    will_request_new_pw: boolean;
    /** @description ユーザーのフラグ管理 */
    details?: { [key: string]: unknown };
    /** @description SSO経由で登録した場合、どのIDPから登録したか */
    registered_idp_key?: string;
    /** @description SSO経由で登録し、仮の名称が割り振られている場合true */
    is_not_decided_name?: boolean;
    /**
     * @description ログインにはSSOを利用するか
     * @example false
     */
    is_sso_user: boolean;
    /**
     * @description MNTSQのテスターかどうか
     * @example false
     */
    is_tester: boolean;
    /**
     * @description 連携ロックをする場合true
     * @example false
     */
    ignore_auth_info_csv_batch: boolean;
    /**
     * @description 外部ユーザーID
     * @example user001
     */
    external_id?: string;
    /**
     * @description ユーザーの選択したロケール
     * @example ja-JP
     * @enum {string}
     */
    locale: "ja-JP" | "en-US";
    /**
     * @description ユーザーのタイムゾーン(frontendから渡されて引き継いだものであり、現時点ではbackend内でだけ使用する想定)
     * @example Aisa/Tokyo
     */
    timezone: string;
  };
  V2_OrganizationEntity: {
    /**
     * Format: int32
     * @description 組織ID
     * @example 1
     */
    id: number;
    /**
     * @description 組織名
     * @example 最強株式会社
     */
    name: string;
    /**
     * @description 組織画像
     * @example https://image.com/bbbb.png
     */
    image?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at: string;
  };
  /** @description V2_UserGroupFullEntity model */
  V2_UserGroupFullEntity: {
    /**
     * Format: int32
     * @description ユーザーグループID
     * @example 1
     */
    id: number;
    /**
     * @description ユーザーグループ名
     * @example ほげ部
     */
    name: string;
    hierarchy_label: string;
    group_ancestors?: string[];
    ancestor_ids?: number[];
    /**
     * @description 備考
     * @example ほげ部とは、ほげ部のことです。
     */
    note?: string;
    is_department: boolean;
    /**
     * @description 識別子
     * @example A0001
     */
    identifier: string;
    /**
     * Format: int32
     * @description 親user_group.id
     */
    parent_user_group_id?: number;
    /** @description 通知や担当者に設定できるようにする */
    is_selectable: boolean;
    /**
     * @description 連携ロックをする場合true
     * @example false
     */
    ignore_auth_info_csv_batch: boolean;
    group_permissions: definitions["V2_GroupPermissionEntity"][];
  };
  V2_GroupPermissionEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description リソースアイデンティファイアー
     * @example contract_database:document_tree:1
     */
    resource_identifier: string;
    /** @description 許可/拒否 */
    is_allow: boolean;
    /**
     * @description アクセスレベル
     * @example admin
     */
    access_level: string;
    /** @example {} */
    resource_detail?: { [key: string]: unknown };
    /** @description 削除可能かどうか */
    is_deletable?: boolean;
  };
  /** @description V2_DocumentResponsibleUserEntity model */
  V2_DocumentResponsibleUserEntity: {
    /** Format: int32 */
    id?: number;
    /** Format: int32 */
    document_id: number;
    /** Format: int32 */
    user_id: number;
  };
  /** @description V2_DocumentResponsibleUserGroupEntity model */
  V2_DocumentResponsibleUserGroupEntity: {
    /** Format: int32 */
    id?: number;
    /** Format: int32 */
    document_id: number;
    /** Format: int32 */
    user_group_id: number;
  };
  /** @description V2_DocumentManagementTagEntity model */
  V2_DocumentManagementTagEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    document_id: number;
    /** Format: int32 */
    management_tag_id: number;
    management_tag?: definitions["V2_ManagementTagEntity"];
  };
  /** @description V2_NotificationEntity model */
  V2_NotificationEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id?: number;
    /** @example master */
    service_type: string;
    /** @example document */
    related_resource_type: string;
    /** @example 200 */
    related_resource_value: string;
    /** @example renewal_deadline */
    message_text_type: string;
    /** @example 2025-03-01 00:00:00 */
    will_send_at?: string;
    sent_at?: string;
    confirmed_at?: string;
    /**
     * Format: int32
     * @description メールカスタム文章特定用の台帳ID
     * @example 1
     */
    ledger_tag_id?: number;
    notification_targets?: definitions["V2_NotificationTargetEntity"][];
    /** @example 契約更新の手続きを行なってください。 */
    note?: string;
  };
  V2_NotificationTargetEntity: {
    /** Format: int32 */
    id?: number;
    resource_type?: string;
    /** Format: int32 */
    resource_id?: number;
    resource_name?: string;
  };
  V2_DocumentEmailEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    document_id: number;
    /** @example メールタイトル */
    subject: string;
    /** @example 2018-10-01 00:00:00 */
    date: string;
    text?: string;
    html?: string;
    message_id?: string;
    in_reply_to?: string;
    from?: definitions["V2_EmailParticipantEntity"][];
    to?: definitions["V2_EmailParticipantEntity"][];
    cc?: definitions["V2_EmailParticipantEntity"][];
    bcc?: definitions["V2_EmailParticipantEntity"][];
    /** @example 2018-10-01 00:00:00 */
    created_at: string;
    /** @example 2018-10-01 00:00:00 */
    updated_at: string;
    related_documents?: string[];
  };
  V2_EmailParticipantEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /** @example from */
    participant_type: string;
    /** @example hoge@example.com */
    address: string;
    /** @example Alice */
    display_name?: string;
  };
  V2_LedgerCustomColumnWithValueEntity: {
    /**
     * Format: int32
     * @description ID
     */
    id: number;
    /** @description カラム名 */
    column_name: string;
    /** @description 依頼者むけの注釈文 */
    caption_text?: string;
    /** @description 入力タイプ */
    option_type: string;
    /** @description 登録済の値 */
    value?: string;
    /** @description 選択肢 */
    ledger_custom_column_options?: definitions["V2_LedgerCustomColumnOptionEntity"][];
    /** @description 表示非表示 */
    is_enabled?: boolean;
    /** @description レビュー時に必須項目とするか */
    is_required?: boolean;
    ledger_tag_ids?: number[];
  };
  V2_MatterEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_form_id: number;
    /** Format: int32 */
    matter_status_id: number;
    /**
     * Format: int32
     * @description 案件フォルダ(「共有フォルダ」と「案件回答部門限定フォルダ」を子にもつ)
     */
    target_document_tree_id?: number;
    /**
     * Format: int32
     * @description 共有フォルダ (案件が見える人全員が見える)
     */
    target_document_tree_public_id?: number;
    /**
     * Format: int32
     * @description 案件回答部門限定フォルダ (案件が見えて、かつ作成元フォームに回答部門権限(matter_form/admin)をもっている人だけが見える)
     */
    target_document_tree_for_agent_id?: number;
    /**
     * @description 案件番号 (yymmddxxxx形式で採番。xxxxは日別の通番4桁(0001,0002,...)。5桁以上もとりうる)
     * @example 2209260001
     */
    matter_number: string;
    /**
     * @description 案件タイトル
     * @example ロック株式会社との研究開発について
     */
    title: string;
    /**
     * @description 案件の内容
     * @example 先方から契約書のドラフトを受領したのでレビューをお願いします
     */
    description: string;
    /**
     * @description 案件メールアドレス
     * @example abcdef@bcdefg.mail.mntsq.com
     */
    matter_recipient_email_address: string;
    /**
     * Format: date
     * @description 期限
     */
    deadline_date?: string;
    /**
     * @description 依頼日
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 最終更新日時
     * @example 2019-05-17 16:00:00
     */
    last_actioned_at: string;
    /**
     * @description 最終更新者(ユーザー名) / MNTSQユーザー以外が更新した場合は、ここにのみ更新者が残る
     * @example 法務太郎
     */
    last_actioned_original_user_name?: string;
    /**
     * @description 最終更新者(メールアドレス) / MNTSQユーザー以外が更新した場合は、ここにのみ更新者が残る
     * @example houmu.tarou@example.com
     */
    last_actioned_original_user_email?: string;
    /**
     * Format: int32
     * @description 最終更新者 / MNTSQユーザーが更新した場合のuser_id
     */
    last_actioned_user_id?: number;
    /** @description お気に入りアイテム */
    favorite_item?: definitions["V2_FavoriteItemEntity"];
    /** @description 社内推奨 */
    public_favorite_item?: definitions["V2_PublicFavoriteItemEntity"];
  };
  /** @description V2_FavoriteItemEntity model */
  V2_FavoriteItemEntity: {
    /**
     * Format: int32
     * @description お気に入りのID
     * @example 1
     */
    id: number;
    /**
     * @description お気に入り対象の種類。(document, clause, query, document_tree, sticky)
     * @example document
     */
    item_type: string;
    /**
     * @description お気に入り対象の元名称
     * @example 賃貸借契約.docx
     */
    name: string;
    /**
     * @description お気に入り対象の識別値。item_typeに応じて変化。documentの場合はDocumentのid、clauseの場合はClauseのid、queryの場合はURL文字列。
     * @example 1
     */
    value: string;
    /**
     * Format: int32
     * @description 登録したuserのid
     * @example 1
     */
    user_id?: number;
    /** @description お気に入り登録時のタイトル */
    note?: string;
    /** @description お気に入り対象のドキュメント */
    document?: definitions["V2_DocumentSmallEntity"];
    /** @description お気に入り対象の条項 */
    clause?: definitions["V2_ClauseEntity"];
    /** @description お気に入り対象のフォルダ */
    document_tree?: definitions["V2_DocumentTreeMinimumEntity"];
    /** @description お気に入り対象の案件タイムライン */
    matter_timeline?: definitions["V2_MatterTimelineEntity"];
  };
  V2_DocumentSmallEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description ファイル名
     * @example 定款
     */
    title: string;
    /**
     * @description ファイルの種類(pdf, docx)
     * @example pdf
     */
    file_type: string;
    normalized_file_type?: string;
    /** @description document_treeにおけるpath */
    ancestor_paths?: { [key: string]: unknown }[];
    /**
     * @description ドキュメントの登録日時
     * @example 2018-10-01 00:00:00
     */
    created_at: string;
    /**
     * @description ドキュメントの更新日時
     * @example 2018-10-01 00:00:00
     */
    updated_at: string;
    /** @example 2018-10-01 12:00:00 */
    translate_finished_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_started_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_timed_out_at?: string;
    /**
     * @description メモ
     * @example 第3条にXXあり。要注意 >YY参照のこと
     */
    note?: string;
    /**
     * @description HTMLエスケープ済みメモ
     * @example 第3条にXXあり。要注意 &gt;YY参照のこと
     */
    escaped_note?: string;
    /**
     * @description 巨大なファイルか？(xls or xlsx)
     * @example false
     */
    is_too_big_file?: boolean;
    /**
     * Format: int32
     * @description アップロードしたUserのId
     * @example 1
     */
    uploader_user_id?: number;
    /**
     * @description 非対応ファイルか？
     * @example false
     */
    is_unsupported_format?: boolean;
    /**
     * Format: int32
     * @description ページ数
     * @example 1
     */
    page_num?: number;
    /**
     * @description ファイルタイプ
     * @example word
     */
    file_format_for_search?: string;
    /**
     * @description ドキュメントの作成日
     * @example 2018-10-01 12:00:00
     */
    created_at_for_search?: string;
    /**
     * @description 締結版か否か
     * @example true
     */
    is_final_version?: boolean;
    /**
     * @description 外部参照情報。MNTSQ外の客先システムのIDなど。
     * @example ABC123
     */
    external_reference_info?: string;
    language?: string;
    file_name_label?: string;
    language_for_search?: string;
  };
  /** @description V2_ClauseEntity model */
  V2_ClauseEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    document_id?: number;
    /**
     * Format: int32
     * @description ドキュメントの条項号の出現順（1,2,3とインクリメント）
     * @example 1
     */
    order_num?: number;
    /**
     * @description 階層レベル
     * @example first_level
     */
    hierarchy_level?: string;
    source_text?: string;
    description?: string;
    clause_tags?: definitions["V2_ClauseTagEntity"][];
    user_tags?: definitions["V2_ClauseUserTagAsChildWithMasterEntity"][];
    /**
     * @description 信用度が低いフラグ
     * @example false
     */
    is_unreliable?: boolean;
    /** Format: int32 */
    page_num?: number;
    details?: { [key: string]: unknown };
    children?: { [key: string]: unknown }[];
  };
  /** @description V2_ClauseTagEntity model */
  V2_ClauseTagEntity: {
    /**
     * Format: int32
     * @description ClauseTagのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description ClauseのID
     * @example 1
     */
    clause_id: number;
    /** @description 詳細はこちら(https://app.gitbook.com/@mntsq/s/mntsq-software/docs/annotations) */
    annotation_type: string;
    children?: definitions["V2_ClauseTagEntity"][];
  };
  V2_ClauseUserTagAsChildWithMasterEntity: {
    /**
     * Format: int32
     * @description ClauseUserTagのID
     * @example 1
     */
    id: number;
    /** @description メモ */
    description: string;
    /** @description 自動付与か否か */
    is_automatically_added: boolean;
    master?: definitions["V2_ClauseUserTagMasterEntity"];
  };
  /** @description V2_ClauseUserTagMasterEntity model */
  V2_ClauseUserTagMasterEntity: {
    /** Format: int32 */
    id: number;
    /** @description タグのラベル */
    label: string;
    description: string;
    clause_tag_auto_add_folders?: definitions["V2_ClauseTagAutoAddFolderEntity"][];
    /**
     * Format: int32
     * @description 自動付与対象の台帳ID
     */
    auto_add_ledger_tag_id?: number;
    /** @description 見出しでの自動付与の正規表現 */
    auto_add_regex_header?: string;
    /** @description 本文での自動付与の正規表現 */
    auto_add_regex_body?: string;
  };
  V2_ClauseTagAutoAddFolderEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    clause_user_tag_master_id: number;
    /** Format: int32 */
    document_tree_id: number;
  };
  /** @description V2_DocumentTreeMinimumEntity model */
  V2_DocumentTreeMinimumEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @example 1
     */
    parent_directory_id?: number;
    /** @example フォルダ */
    name: string;
    /** @example true */
    is_directory: boolean;
    /** Format: int32 */
    document_id?: number;
    created_at: string;
    updated_at: string;
  };
  V2_MatterTimelineEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_id: number;
    /**
     * @description やりとりの種類
     * @enum {string}
     */
    type:
      | "PostComment"
      | "UpdateField"
      | "UpdateRequesterEntity"
      | "UpdateResponsibleEntity"
      | "UpdateRelatedEntity"
      | "UpdateFinalVersionDocument";
    /** Format: int32 */
    user_id?: number;
    original_user_name: string;
    original_user_email: string;
    /**
     * @description type:PostComment の場合に使用する、表示範囲 (public:全体, for_agent:回答部門のみ)
     * @enum {string}
     */
    visible_scope: "public" | "for_agent";
    /**
     * @description 発生日時
     * @example 2018-10-01 12:00:00
     */
    created_at?: string;
    /** @description お気に入りアイテム */
    favorite_item?: definitions["V2_FavoriteItemEntity"];
    /** @description 社内推奨 */
    public_favorite_item?: definitions["V2_PublicFavoriteItemEntity"];
  };
  /** @description V2_PublicFavoriteItemEntity model */
  V2_PublicFavoriteItemEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 社内推奨の種類。(document, clause, query, document_tree, sticky)
     * @example document
     */
    item_type: string;
    /**
     * @description 社内推奨対象の元名称
     * @example 賃貸借契約.docx
     */
    name: string;
    /**
     * @description 社内推奨対象の識別値。item_typeに応じて変化。documentの場合はDocumentのid、clauseの場合はClauseのid、Queryの場合はURL文字列。
     * @example 1
     */
    value: string;
    /** @description 社内推奨登録時のタイトル */
    note: string;
    /** @description 社内推奨の使い方説明文 */
    description?: string;
    /** @description お気に入り対象のドキュメント */
    document?: definitions["V2_DocumentSmallEntity"];
    /** @description お気に入り対象の条項 */
    clause?: definitions["V2_ClauseEntity"];
    /** @description お気に入り対象のフォルダ */
    document_tree?: definitions["V2_DocumentTreeMinimumEntity"];
    /** @description お気に入り対象の案件タイムライン */
    matter_timeline?: definitions["V2_MatterTimelineEntity"];
  };
  /** @description V2_DocumentDetailForMaEntity model */
  V2_DocumentDetailForMaEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description ファイル名
     * @example 定款
     */
    title: string;
    /**
     * @description 契約書かどうか
     * @example true
     */
    required_disclaim?: boolean;
    /**
     * @description 法務関連書類かどうか
     * @example true
     */
    required_annotate?: boolean;
    /**
     * @description ファイルの種類(pdf, docx)
     * @example pdf
     */
    file_type: string;
    normalized_file_type?: string;
    /** @description document_treeにおけるpath */
    ancestor_paths?: { [key: string]: unknown }[];
    /**
     * @description 終期の定めなし
     * @example false
     */
    is_non_fixed_contract_term?: boolean;
    /**
     * @description ドキュメントの登録日時
     * @example 2018-10-01 00:00:00
     */
    created_at: string;
    /**
     * @description ドキュメントの更新日時
     * @example 2018-10-01 00:00:00
     */
    updated_at: string;
    /** @example 2018-10-01 12:00:00 */
    translate_finished_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_started_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_timed_out_at?: string;
    sections?: definitions["V2_SectionEntity"][];
    parties?: definitions["V2_PartyEntity"][];
    analyze_job?: definitions["V2_AnalyzeJobEntity"];
    /**
     * @description メモ
     * @example 第3条にXXあり。要注意 >YY参照のこと
     */
    note?: string;
    /**
     * @description HTMLエスケープ済みメモ
     * @example 第3条にXXあり。要注意 &gt;YY参照のこと
     */
    escaped_note?: string;
    /**
     * @description 巨大なファイルか？(xls or xlsx)
     * @example false
     */
    is_too_big_file?: boolean;
    /**
     * Format: int32
     * @description アップロードしたUserのId
     * @example 1
     */
    uploader_user_id?: number;
    /**
     * @description 非対応ファイルか？
     * @example false
     */
    is_unsupported_format?: boolean;
    /**
     * Format: int32
     * @description ページ数
     * @example 1
     */
    page_num?: number;
    /**
     * @description ファイルタイプ
     * @example word
     */
    file_format_for_search?: string;
    /**
     * @description ドキュメントの作成日
     * @example 2018-10-01 12:00:00
     */
    created_at_for_search?: string;
    /**
     * @description 締結版か否か
     * @example true
     */
    is_final_version?: boolean;
    /** @description ドキュメント種別 */
    document_types?: string[];
    /**
     * @description 雛型か？
     * @example false
     */
    is_contract_template?: boolean;
    /**
     * @description どこの雛型か。not_contract_template, mntsq, outdated_mntsqなど
     * @example mntsq
     */
    contract_template_credit_title?: string;
    /**
     * @description 外部参照情報。MNTSQ外の客先システムのIDなど。
     * @example ABC123
     */
    external_reference_info?: string;
    /**
     * @description 外部参照リンク
     * @example http://example.com/external/link
     */
    external_service_url?: string;
    /**
     * @description OCRの精度が低い場合true
     * @example true
     */
    is_ocr_poor_quality?: boolean;
    language?: string;
    file_name_label?: string;
    /** @description 検索用にカスタムされた言語判定 */
    language_for_search?: string;
    ledger_tags?: definitions["V2_LedgerTagEntity"][];
    management_tags: definitions["V2_ManagementTagEntity"][];
    /**
     * @description どこからdocumentが追加されたか
     * @example manual_upload
     */
    data_source?: string;
    docusign_document?: definitions["V2_DocusignDocumentEntity"];
    /** Format: int32 */
    transaction_amount_annotation_id?: number;
    transaction_amount_annotation?: definitions["V2_TransactionAmountAnnotationEntity"];
    /** @description 有効/失効ステータス */
    status: string;
    document_governing_laws?: definitions["V2_DocumentGoverningLawEntity"][];
    /** @description 目的 */
    purpose?: string;
    gdrive_document_tree?: definitions["V2_GdriveDocumentTreeEntity"];
    box_document_tree?: definitions["V2_BoxDocumentTreeEntity"];
    contract_types?: string[];
    annotations: { [key: string]: unknown }[];
    responsible_users?: definitions["V2_UserEntity"][];
    document_responsible_users?: definitions["V2_DocumentResponsibleUserEntity"][];
    responsible_user_groups?: definitions["V2_UserGroupFullEntity"][];
    document_responsible_user_groups?: definitions["V2_DocumentResponsibleUserGroupEntity"][];
    document_ledger_tags?: string[];
    document_management_tags?: definitions["V2_DocumentManagementTagEntity"][];
    related_documents?: { [key: string]: unknown }[];
    related_agreements?: { [key: string]: unknown }[];
    has_related_agreement_candidates?: boolean;
    notification?: definitions["V2_NotificationEntity"];
    document_email?: definitions["V2_DocumentEmailEntity"];
    ledger_custom_columns_with_value?: definitions["V2_LedgerCustomColumnWithValueEntity"][];
    /** @description このドキュメントを締結した元案件。複数ある場合は作成日の降順 */
    final_version_creator_matters?: definitions["V2_MatterEntity"][];
    /** @description このドキュメントに関連する(案件画面から添付された or 案件フォルダに直接uploadされた)案件。複数ある場合は作成日の降順 */
    related_matters?: definitions["V2_MatterEntity"][];
    /** @description レビュー済みかどうか */
    reviewed?: boolean;
  };
  /** @description V2_CountStatsEntity model */
  V2_CountStatsEntity: {
    /**
     * Format: int32
     * @description 全件数
     * @example 3
     */
    counts_all?: number;
    /**
     * Format: int32
     * @description 失敗の数
     * @example 0
     */
    counts_failure?: number;
    /**
     * Format: int32
     * @description 解読不能の数
     * @example 2
     */
    counts_unreadable?: number;
  };
  /** @description V2_DocumentExecutionDateRateEntity model */
  V2_DocumentExecutionDateRateEntity: {
    /**
     * Format: int32
     * @description 対象document数
     */
    total_count: number;
    /**
     * Format: int32
     * @description execution_dateが付いたdocument数
     */
    has_execution_date_count: number;
    /**
     * Format: int32
     * @description パースに失敗したdocument数
     */
    parse_failed_count: number;
  };
  /** @description V2_DocumentTikaEntity model */
  V2_DocumentTikaEntity: {
    message?: string;
  };
  /** @description V2_AnnotationListEntity model */
  V2_AnnotationListEntity: {
    response?: {
      stats: definitions["V2_AnnotationStatsEntity"];
      annotations: definitions["V2_AnnotationEntity"][];
    };
  };
  V2_AnnotationStatsEntity: {
    /**
     * @description 検出結果
     * @example annotate_success
     */
    result_type: string;
    /**
     * Format: int32
     * @description ページネーションを考慮しない検索結果全件
     * @example 3
     */
    counts_all: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 1
     */
    counts_pages_count: number;
    /**
     * Format: int32
     * @description ページネーションを考慮しないアノテーションの数
     * @example 1
     */
    counts_annotations: number;
    /**
     * @description 前ページが存在しているか
     * @example true
     */
    prev_exists: boolean;
    /**
     * @description 次ページが存在しているか
     * @example true
     */
    next_exists: boolean;
  };
  /** @description V2_AnnotationEntity model */
  V2_AnnotationEntity: {
    /** Format: int32 */
    id?: number;
    /** @description 詳細はこちら(https://app.gitbook.com/@mntsq/s/mntsq-software/docs/annotations) */
    annotation_type: string;
    /**
     * @description annotationが存在しているかどうか
     * @example positive
     */
    existence_type: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
    /**
     * @description そのアノテーションの深刻さ
     * @example normal
     */
    severity?: string;
    /**
     * Format: int32
     * @description user.id
     * @example 1
     */
    user_id?: number;
    /**
     * @description 自動アノテーションかそうではないか
     * @example true
     */
    auto_detect?: boolean;
    /**
     * @description 機械が読める形の詳細情報
     * @example <stringifyされたjson>
     */
    details?: string;
    document?: definitions["V2_DocumentEntity"];
    source_texts?: definitions["V2_SourceTextEntity"][];
    inner_review_data?: definitions["V2_InnerReviewStatusEntity"];
    /**
     * @description 非表示フラグ
     * @example true
     */
    is_hidden?: boolean;
    /** @description 契約当事者（名寄せジョブ） */
    party_identification?: definitions["V2_PartyIdentificationEntity"];
    /**
     * @description どこからannotationが追加されたか
     * @example manual_upload
     */
    data_source?: string;
  };
  V2_SourceTextEntity: {
    /** Format: int32 */
    id?: number;
    /** Format: int32 */
    annotation_id?: number;
    /**
     * @description 本文のどこの部分と対応しているか
     * @example 第一条: 損害賠償
     */
    source_text?: string;
    description?: string;
  };
  /** @description V2_InnerReviewStatusEntity model */
  V2_InnerReviewStatusEntity: {
    /**
     * Format: int32
     * @description inner_review_statusのID
     * @example 1
     */
    id?: number;
    /**
     * Format: int32
     * @description annotation_idのID
     * @example 1
     */
    annotation_id?: number;
    /** @example false */
    should_be_excluded_from_training?: boolean;
    /** @example false */
    should_be_excluded_from_validation?: boolean;
    /** @example to_be_reviewed */
    review_for_clause_extraction?: string;
    /** @example to_be_reviewed */
    review_for_annotation_type?: string;
    /** @example to_be_reviewed */
    review_for_coc_trigger?: string;
    /** @example to_be_reviewed */
    review_for_coc_effect?: string;
    /** @example to_be_reviewed */
    review_for_details?: string;
    /** @example to_be_reviewed */
    review_for_other?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_PartyIdentificationEntity model */
  V2_PartyIdentificationEntity: {
    /**
     * Format: int32
     * @description 当事者のID
     * @example 1
     */
    id: number;
    annotation?: definitions["V2_AnnotationPetitEntity"];
    client_master?: definitions["V2_ClientMasterFullEntity"];
    /**
     * @description 処理が終了した日時
     * @example 2018-10-01 12:00:03
     */
    finished_at?: string;
    /**
     * @description ジョブプロセスの結果(現状はエラーが発生した場合にエラー内容が入るようになっており、正常時は何も入らない)
     * @example
     */
    result_message?: string;
    /**
     * @description status
     * @example not_processed
     */
    status?: string;
    /**
     * @description party_type
     * @example lender
     */
    party_type?: string;
    /**
     * @description 相手方か否か
     * @example false
     */
    is_counterparty?: boolean;
  };
  V2_AnnotationPetitEntity: {
    /** Format: int32 */
    id?: number;
    source_texts?: definitions["V2_SourceTextEntity"][];
    /**
     * @description 自動アノテーションかそうではないか
     * @example true
     */
    auto_detect?: boolean;
    /**
     * @description 機械が読める形の詳細情報
     * @example <stringifyされたjson>
     */
    details?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_ClientMasterFullEntity model */
  V2_ClientMasterFullEntity: {
    /**
     * Format: int32
     * @description クライアントマスターID
     * @example 1
     */
    id: number;
    /**
     * @description 企業番号
     * @example abc
     */
    corporate_number?: string;
    /**
     * @description 種別
     * @example imported
     * @enum {string}
     */
    data_type?: "imported" | "external_resource_nta" | "generated";
    /**
     * Format: int32
     * @description 決算月
     * @example 12
     */
    closing_month?: number;
    /**
     * @description メモ
     * @example すごいメモ
     */
    note?: string;
    /**
     * @description グループ会社かどうか
     * @example false
     */
    is_group_company?: boolean;
    client_name_masters?: definitions["V2_ClientNameMasterEntity"][];
    latest_client_name_master?: definitions["V2_ClientNameMasterEntity"];
  };
  /** @description V2_ClientNameMasterEntity model */
  V2_ClientNameMasterEntity: {
    /**
     * Format: int32
     * @description クライアント名前マスターID
     * @example 1
     */
    id: number;
    /**
     * @description 企業名
     * @example 1
     */
    name?: string;
    /**
     * @description 企業名の読み
     * @example モンテスキュー
     */
    reading_form?: string;
    /**
     * @description 種別
     * @example imported
     */
    data_type?: string;
    /**
     * @description 言語
     * @example ja
     */
    language?: string;
    /**
     * Format: int32
     * @description クライアントマスターID
     * @example 2
     */
    client_master_id?: number;
    /**
     * @description 代表するclient_name_masterかどうか
     * @example true
     */
    is_latest?: boolean;
    /**
     * @description suggestionのみに利用するか
     * @example true
     */
    suggest_only?: boolean;
    /**
     * @description 契約当事者の住所
     * @example 東京都中央区日本橋堀留町2-9-8
     */
    contract_address?: string;
    /**
     * @description 契約当事者の肩書
     * @example 代表取締役
     */
    signer_title?: string;
    /**
     * @description 契約当事者の代表者名
     * @example 板谷隆平
     */
    signer_name?: string;
  };
  /** @description V2_DocumentTreeWithStatsEntity model */
  V2_DocumentTreeWithStatsEntity: {
    response?: {
      /** @description ドキュメントの統計情報 */
      stats: definitions["V2_DocumentTreeCollectionPager"];
      document_trees?: definitions["V2_DocumentTreeDirectoryEntity"][];
    };
  };
  V2_DocumentTreeCollectionPager: {
    /**
     * Format: int32
     * @description 全件数。(ただしwith_counts:trueの場合のみ、リクエストで指定したPJ配下の全ドキュメント数となる ※forMA互換動作)
     * @example 3
     */
    counts_all: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 1
     */
    counts_pages_all: number;
    /**
     * Format: int32
     * @description 現ページ番号
     * @example 1
     */
    current_page: number;
    /**
     * @description 前ページが存在しているか
     * @example true
     */
    prev_exists: boolean;
    /**
     * @description 次ページが存在しているか
     * @example true
     */
    next_exists: boolean;
    result_type: string;
    ancestor_paths: { [key: string]: unknown }[];
    /**
     * Format: int32
     * @description リクエストで指定したPJ配下の、analyze_job.result_typeがfailure_statusesに相当する全ドキュメント数 (with_counts:trueの場合のみ含まれる)
     * @example 3
     */
    counts_failure?: number;
    /**
     * Format: int32
     * @description リクエストで指定したPJ配下の、analyze_job.result_typeがunreadable_statusesに相当する全ドキュメント件数 (with_counts:trueの場合のみ含まれる)
     * @example 3
     */
    counts_unreadable?: number;
  };
  V2_DocumentTreeDirectoryEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @example 1
     */
    parent_directory_id?: number;
    /** @example フォルダ */
    name: string;
    /** @example true */
    is_directory: boolean;
    created_at: string;
    updated_at: string;
    document?: definitions["V2_DocumentEntity"];
    gdrive_document_tree?: definitions["V2_GdriveDocumentTreeEntity"];
    box_document_tree?: definitions["V2_BoxDocumentTreeEntity"];
    /** @description 子要素の統計情報 */
    children_stats: { [key: string]: unknown };
  };
  /** @description V2_DocumentTreeIsMatterDirEntity model */
  V2_DocumentTreeIsMatterDirEntity: {
    /** @description 案件に関連するディレクトリかどうか */
    is_matter_dir?: boolean;
  };
  /** @description V2_DocumentTreeWithPathEntity model */
  V2_DocumentTreeWithPathEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @example 1
     */
    parent_directory_id?: number;
    /** @example フォルダ */
    name: string;
    /** @example true */
    is_directory: boolean;
    /** Format: int32 */
    document_id?: number;
    created_at: string;
    updated_at: string;
    ancestor_paths?: { [key: string]: unknown }[];
    auth_hierarchy?: string;
  };
  /** @description V2_DocumentTreeDirectoryMapEntity model */
  V2_DocumentTreeDirectoryMapEntity: {
    /**
     * Format: int32
     * @description ドキュメントツリーのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @description 親ディレクトリのdocument_tree.id
     */
    parent_directory_id?: number;
    /**
     * @description フォルダ名
     * @example フォルダA
     */
    name: string;
    /**
     * @description ディレクトリか否か
     * @example true
     */
    is_directory: boolean;
    /**
     * @description ディレクトリのツリーとして末尾かどうか
     * @example true
     */
    is_leaf?: boolean;
    /**
     * @description 登録日時
     * @example 2018-10-01
     */
    created_at: string;
    /**
     * @description 更新日時
     * @example 2018-10-01
     */
    updated_at: string;
    /** @description サブディレクトリ */
    children: definitions["V2_DocumentTreeDirectoryMapEntity"][];
  };
  /** @description V2_QuestionConfigEntity model */
  V2_QuestionConfigEntity: {
    /**
     * Format: int32
     * @description question config id
     * @example 1
     */
    id?: number;
    /**
     * @description QuestionConfigを特定するためのコード
     * @example QC-AA-00
     */
    code?: string;
    /**
     * @description 質問文
     * @example XXなものがあれば、ご開示ください
     */
    question_template?: string;
    /**
     * @description 選択肢の種類・内容
     * @example {"command":single_select,"はい": True, "いいえ": False}
     */
    interaction?: string;
    /**
     * @description answer_textによってアップデートされるproject.question_config_statusのkey
     * @example XXはYYしますか？
     */
    update_variable?: string;
    /**
     * @description 次に表示すべきQuestionConfigのコード
     * @example QC-AA-01
     */
    next_question_code?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_SerializedIssueTreeListEntity model */
  V2_SerializedIssueTreeListEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description セクション
     * @example organization
     */
    section: string;
    /**
     * @description 論点
     * @example 重要な会議体
     */
    title: string;
    /** @description is_interview */
    is_interview: boolean;
    /** @description disclosure_status */
    disclosure_status: string;
    /** @description disclosure_statusのラベル */
    disclosure_status_label: string;
    /** @description status */
    status: string;
    /** @description statusのラベル */
    status_label: string;
    /** @description index */
    index?: string;
    /**
     * Format: int32
     * @description issue_order
     */
    issue_order: number;
    /**
     * Format: int32
     * @description 親ノードのid
     */
    parent_tree_id?: number;
    /** @description index */
    children: definitions["V2_SerializedIssueTreeListEntity"][];
    /**
     * Format: int32
     * @description draft_sampleの数
     * @example 0
     */
    draft_samples_count?: number;
    /** @description checklists */
    checklists?: definitions["V2_SymplifiedChecklistEntity"][];
  };
  V2_SymplifiedChecklistEntity: {
    /**
     * Format: int32
     * @description checklistのID
     * @example 1
     */
    id: number;
    /** @description 表題 */
    title: string;
  };
  /** @description V2_IssueTreeEntity model */
  V2_IssueTreeEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description セクション
     * @example organization
     */
    section: string;
    /**
     * @description 論点
     * @example 重要な会議体
     */
    title: string;
    /** @description is_interview */
    is_interview: boolean;
    /** @description disclosure_status */
    disclosure_status: string;
    /** @description disclosure_statusのラベル */
    disclosure_status_label: string;
    /** @description status */
    status: string;
    /** @description statusのラベル */
    status_label: string;
    /** @description index */
    index?: string;
    /**
     * Format: int32
     * @description issue_order
     */
    issue_order: number;
    /**
     * Format: int32
     * @description 親ノードのid
     */
    parent_tree_id?: number;
    /** @description 結論 */
    conclusion?: string;
    /** @description index */
    children: definitions["V2_IssueTreeEntity"][];
    /** @description checklist */
    checklist: definitions["V2_ChecklistEntity"][];
    /** @description draft_sample */
    draft_sample: definitions["V2_DraftSampleEntity"][];
  };
  V2_ChecklistEntity: {
    /**
     * Format: int32
     * @description checklistのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @description issue_treeのID
     * @example 1
     */
    issue_tree_id: number;
    /** @description 表題 */
    title: string;
    /** @description 詳細テキスト */
    detail: string;
    /** @description ステータス */
    status: string;
  };
  V2_DraftSampleEntity: {
    /**
     * Format: int32
     * @description checklistのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @description issue_treeのID
     * @example 1
     */
    issue_tree_id: number;
    /** @description ドラフト・サンプル */
    text: string;
  };
  /** @description V2_QuestionEntity model */
  V2_QuestionEntity: {
    /**
     * Format: int32
     * @description id
     * @example 1
     */
    id?: number;
    /**
     * Format: int32
     * @description projectのid
     * @example 1
     */
    project_id?: number;
    /**
     * @description セクション名
     * @example na
     */
    section_type?: string;
    /**
     * @description インタビューするか否かで
     * @example true
     */
    is_interview?: boolean;
    /**
     * @description 質問文
     * @example ○○はなんですか？
     */
    question_text?: string;
    /**
     * @description 追加的な注釈
     * @example この質問は〇〇の為に使います
     */
    rendered_caption_message?: string;
    /**
     * @description 回答内容
     * @example xxです
     */
    answer_text?: string;
    /**
     * @description priority. low / middle / high
     * @example middle
     */
    rendered_priority?: string;
    /**
     * @description status. draft / under_review / reviewed / sent / replied / closed
     * @example draft
     */
    status?: string;
    /**
     * @description Questionを特定するためのコード
     * @example QC-AA-01
     */
    code?: string;
    /**
     * @description 表示の際ハイライトするか
     * @example true
     */
    rendered_should_highlight?: boolean;
    /**
     * @description questionの生成時刻
     * @example 2018-10-01 12:00:00
     */
    created_at: string;
    /**
     * @description questionの更新時刻
     * @example 2018-10-01 12:00:00
     */
    updated_at: string;
  };
  /** @description V2_DocumentEmailListWithStatsEntity model */
  V2_DocumentEmailListWithStatsEntity: {
    document_emails: definitions["V2_DocumentEmailEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_DocumentRerunEntity model */
  V2_DocumentRerunEntity: {
    /** Format: int32 */
    count?: number;
    message?: string;
  };
  /** @description V2_DocumentListWithStatsEntity model */
  V2_DocumentListWithStatsEntity: {
    documents: definitions["V2_DocumentMinimumEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_DocumentMinimumEntity model */
  V2_DocumentMinimumEntity: {
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトのID
     * @example 1
     */
    project_id: number;
    /**
     * @description ファイル名
     * @example 定款
     */
    title: string;
    /**
     * @description ファイルの種類(pdf, docx)
     * @example pdf
     */
    file_type: string;
    normalized_file_type?: string;
    /** @description document_treeにおけるpath */
    ancestor_paths?: { [key: string]: unknown }[];
    /**
     * @description ドキュメントの登録日時
     * @example 2018-10-01 00:00:00
     */
    created_at: string;
    /**
     * @description ドキュメントの更新日時
     * @example 2018-10-01 00:00:00
     */
    updated_at: string;
    /** @example 2018-10-01 12:00:00 */
    translate_finished_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_started_at?: string;
    /** @example 2018-10-01 12:00:00 */
    translate_timed_out_at?: string;
    /**
     * @description メモ
     * @example 第3条にXXあり。要注意 >YY参照のこと
     */
    note?: string;
    /**
     * @description HTMLエスケープ済みメモ
     * @example 第3条にXXあり。要注意 &gt;YY参照のこと
     */
    escaped_note?: string;
    /**
     * @description 巨大なファイルか？(xls or xlsx)
     * @example false
     */
    is_too_big_file?: boolean;
    /**
     * Format: int32
     * @description アップロードしたUserのId
     * @example 1
     */
    uploader_user_id?: number;
    /**
     * @description 非対応ファイルか？
     * @example false
     */
    is_unsupported_format?: boolean;
    /**
     * Format: int32
     * @description ページ数
     * @example 1
     */
    page_num?: number;
    /**
     * @description ファイルタイプ
     * @example word
     */
    file_format_for_search?: string;
    /**
     * @description ドキュメントの作成日
     * @example 2018-10-01 12:00:00
     */
    created_at_for_search?: string;
    /**
     * @description 締結版か否か
     * @example true
     */
    is_final_version?: boolean;
    /**
     * @description 外部参照情報。MNTSQ外の客先システムのIDなど。
     * @example ABC123
     */
    external_reference_info?: string;
    language?: string;
    file_name_label?: string;
    language_for_search?: string;
  };
  /** @description V2_LedgerInfoEntity model */
  V2_LedgerInfoEntity: {
    execution_date?: definitions["V2_LedgerInfoDetailEntity"];
    term?: definitions["V2_LedgerInfoDetailEntity"];
    renewal?: definitions["V2_LedgerInfoDetailEntity"];
    renewal_period?: definitions["V2_LedgerInfoDetailEntity"];
    renewal_notice?: definitions["V2_LedgerInfoDetailEntity"];
    transaction_amounts?: definitions["V2_LedgerInfoDetailEntity"][];
    effective_date?: definitions["V2_LedgerInfoDetailEntity"];
    expired?: definitions["V2_LedgerInfoDetailEntity"];
  };
  V2_LedgerInfoDetailEntity: {
    /** Format: int32 */
    annotation_id?: number;
    label?: string;
    metadata?: { [key: string]: unknown };
  };
  /** @description V2_DocumentPublicFavoriteItemListWithStatsEntity model */
  V2_DocumentPublicFavoriteItemListWithStatsEntity: {
    public_favorite_items: definitions["V2_PublicFavoriteItemEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_DocumentIsMntsqEnModuleTargetEntity model */
  V2_DocumentIsMntsqEnModuleTargetEntity: {
    /** @example true */
    is_mntsq_en_module_target: boolean;
  };
  /** @description V2_DocumentContentEntity model */
  V2_DocumentContentEntity: {
    content_body?: string;
  };
  /** @description V2_ClauseStructureListWithStatsEntity model */
  V2_ClauseStructureListWithStatsEntity: {
    clause_structures: definitions["V2_ClauseStructureEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_ClauseStructureEntity model */
  V2_ClauseStructureEntity: {
    /**
     * Format: int32
     * @description 設定ID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description ドキュメントID
     * @example 1
     */
    document_id?: number;
    /**
     * Format: int32
     * @description 行番号
     * @example 1
     */
    line_no?: number;
    /**
     * @description 階層レベル
     * @example first_level
     */
    hierarchy_level?: string;
    /**
     * @description 別ドキュメントの開始地点
     * @example false
     */
    is_new_document_begin?: boolean;
    /**
     * @description 別紙の開始地点
     * @example false
     */
    is_new_attachment_begin?: boolean;
    /**
     * @description 別条項の開始地点
     * @example false
     */
    is_newline_begin?: boolean;
    /**
     * @description 条項号などの表記
     * @example 第1条
     */
    identifier_description?: string;
  };
  /** @description V2_NotificationListWithStatsEntity model */
  V2_NotificationListWithStatsEntity: {
    notifications: definitions["V2_NotificationEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description 対象ドキュメントのディスカッション（コメント）を一括登録する */
  postV2DocumentDocumentIdDiscussions: {
    /**
     * @description 対象ソースファイルの種類、現状は"word"のみ
     * @enum {string}
     */
    data_source: "word";
    discussions: {
      /**
       * @description 解決済みかどうかのフラグ
       * @default false
       */
      resolved: boolean;
      /** @description ソースファイル内の選択範囲情報 */
      spans: {
        /**
         * Format: int32
         * @description ハイライト開始位置（ドキュメントの先頭からの文字数）
         */
        start_char_num: number;
        /**
         * Format: int32
         * @description ハイライト終了位置（ドキュメントの先頭からの文字数）
         */
        end_char_num: number;
        /** @description 選択範囲に含まれる文字列 */
        source_text?: string;
      }[];
      /** @description ディスカッション内のコメント */
      comments: {
        /**
         * Format: int32
         * @description ソースファイル上のコメントID
         */
        comment_id: number;
        /**
         * @description 親コメントかどうかのフラグ
         * @default false
         */
        is_parent: boolean;
        /** @description コメント投稿者 */
        author?: {
          /** @description コメント投稿者名 */
          name?: string;
        };
        /**
         * Format: date-time
         * @description コメント投稿日時
         */
        comment_time?: string;
        /**
         * @description コメント本文。改行コードはJSON仕様に従う
         * @default
         */
        comment_text: string;
      }[];
    }[];
  };
  /** @description V2_LedgerTagPermissionFreeReminderEntity model */
  V2_LedgerTagPermissionFreeReminderEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    document_id: number;
    /**
     * @description 通知基準日付の種別
     * @example expired_on
     */
    target_date_type: string;
    /**
     * @description 基準日から通知までのリードタイム
     * @example {
     *   "value": 5,
     *   "unit": "days"
     * }
     */
    lead_time: { [key: string]: unknown };
    /**
     * @description 通知メッセージの種別
     * @example renewal_deadline
     */
    notification_message_text_type: string;
    /**
     * Format: int32
     * @description メールカスタム文章特定用の台帳ID
     * @example 1
     */
    ledger_tag_id?: number;
    /** @example 2024-02-01 12:00:00 */
    created_at: string;
    /** @example 2024-02-01 12:00:00 */
    updated_at: string;
    /**
     * @description 通知送信予定日時
     * @example 2025-02-01 12:00:00
     */
    notification_will_send_at: string;
    /**
     * @description 通知対象者リスト
     * @example {
     *   "users": [
     *     {
     *       "id": 1,
     *       "name": "通知太郎"
     *     }
     *   ],
     *   "user_groups": [
     *     {
     *       "id": 1,
     *       "name": "A事業部"
     *     }
     *   ]
     * }
     */
    remindees: { [key: string]: unknown };
  };
  /** @description V2_ReminderEntity model */
  V2_ReminderEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    document_id: number;
    /**
     * @description 通知基準日付の種別
     * @example expired_on
     */
    target_date_type: string;
    /**
     * @description 基準日から通知までのリードタイム
     * @example {
     *   "value": 5,
     *   "unit": "days"
     * }
     */
    lead_time: { [key: string]: unknown };
    /**
     * @description 通知メッセージの種別
     * @example renewal_deadline
     */
    notification_message_text_type: string;
    /**
     * @description 通知メモ
     * @example renewal_deadline
     */
    notification_note: string;
    /**
     * Format: int32
     * @description メールカスタム文章特定用の台帳ID
     * @example 1
     */
    ledger_tag_id?: number;
    /** @example 2024-02-01 12:00:00 */
    created_at: string;
    /** @example 2024-02-01 12:00:00 */
    updated_at: string;
    /**
     * @description 通知送信予定日時
     * @example 2025-02-01 12:00:00
     */
    notification_will_send_at: string;
    /**
     * @description 通知対象者リスト
     * @example {
     *   "users": [
     *     {
     *       "id": 1,
     *       "name": "通知太郎"
     *     }
     *   ],
     *   "user_groups": [
     *     {
     *       "id": 1,
     *       "name": "A事業部"
     *     }
     *   ]
     * }
     */
    remindees: { [key: string]: unknown };
  };
  /** @description V2_AnalyzeJobLeftEntity model */
  V2_AnalyzeJobLeftEntity: {
    is_analyze_job_left: boolean;
  };
  /** @description V2_AnalyzeJobListWithStatsEntity model */
  V2_AnalyzeJobListWithStatsEntity: {
    analyze_jobs: definitions["V2_AnalyzeJobEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_AnalyzeJobLeftCountEntity model */
  V2_AnalyzeJobLeftCountEntity: {
    /**
     * Format: int32
     * @description プロジェクトのID
     */
    project_id?: number;
    /** @description all(default) / pre_ocr / ocr / post_ocr / annotate / post_annotate */
    type: string;
    /**
     * Format: int32
     * @description analyze_jobの残数
     */
    left_count: number;
  };
  /** @description V2_AnnotationTypeOptionGroupEntity model */
  V2_AnnotationTypeOptionGroupEntity: {
    label: string;
    group_identifier?: string;
    options?: definitions["V2_AnnotationTypeOptionGroupEntity"][];
    value?: string;
    type?: string;
    version?: string;
  };
  /** @description V2_AnnotationListWithStatsEntity model */
  V2_AnnotationListWithStatsEntity: {
    annotations: definitions["V2_AnnotationEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_AuthInfoCsvBatchLogEntity model */
  V2_AuthInfoCsvBatchLogEntity: {
    /** Format: int32 */
    id: number;
    /** @example 2018-10-01 12:00:00 */
    occurred_at: string;
    /**
     * @description Batchの種別
     * @example check, save
     */
    batch_type: string;
    /**
     * @description 結果
     * @example fatal_error
     */
    result_type: string;
    /** @description 取得したファイルの種類 */
    retrieved_file_types: string[];
    /**
     * @description エラーメッセージ
     * @example <エラー詳細のHash>
     */
    error_messages: { [key: string]: unknown };
  };
  /** @description V2_AuthInfoCsvBatchNotificationEmailEntity model */
  V2_AuthInfoCsvBatchNotificationEmailEntity: {
    /** Format: int32 */
    id: number;
    /**
     * Format: int32
     * @description 組織ID
     */
    organization_id: number;
    /**
     * @description 通知送信先 email
     * @example test@mntsq.com
     */
    email: string;
  };
  /** @description V2_AuthenticationTypeEntity model */
  V2_AuthenticationTypeEntity: {
    /**
     * @description 認証タイプ(normal, saml)
     * @example saml
     */
    authentication_type?: string;
    /**
     * @description SSOログインに使用したidp_key
     * @example AzureAD
     */
    idp_key?: string;
  };
  /** @description V2_ErrorEntity model */
  V2_ErrorEntity: {
    /**
     * @description message
     * @example bad request
     */
    error: string;
  };
  /** @description V2_AsyncJobLogEntity model */
  V2_AsyncJobLogEntity: {
    /**
     * Format: int32
     * @description 非同期ジョブのログID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description プロジェクトID
     * @example 10
     */
    project_id: number;
    /**
     * @description ジョブタイプ
     * @example decryption
     */
    job_type: string;
    /**
     * @description ステータス
     * @example requested
     */
    status: string;
    /**
     * @description エラーメッセージ
     * @example エラーが発生しました
     */
    error_message?: string;
    /**
     * @description 処理終了日時
     * @example 2019-05-17 16:00:00
     */
    finished_at?: string;
    /**
     * @description 作成日時
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 更新日時
     * @example 2019-05-17 16:00:00
     */
    updated_at: string;
    /** @description メタデータ */
    metadata?: { [key: string]: unknown };
  };
  /** @description V2_UserMeEntity model */
  V2_UserMeEntity: {
    /**
     * Format: int32
     * @description user id
     * @example 1
     */
    id: number;
    /**
     * @description user email
     * @example test@test.com
     */
    email: string;
    /**
     * @description user name
     * @example 板谷隆平
     */
    name: string;
    /**
     * @description status
     * @example live
     */
    status: string;
    /**
     * @description user type
     * @example member
     */
    user_type: string;
    /**
     * @description user role
     * @example lawyer
     */
    user_role: string;
    /**
     * @description user created_at
     * @example 2018-10-01 12:00:00
     */
    created_at: string;
    /**
     * @description user updated_at
     * @example 2018-11-03 11:20:33
     */
    updated_at: string;
    /** Format: int32 */
    organization_id: number;
    organization: definitions["V2_OrganizationEntity"];
    user_groups: definitions["V2_UserGroupFullEntity"][];
    /**
     * @description PW更新を求めるか
     * @example false
     */
    will_request_new_pw: boolean;
    /** @description ユーザーのフラグ管理 */
    details?: { [key: string]: unknown };
    /** @description SSO経由で登録した場合、どのIDPから登録したか */
    registered_idp_key?: string;
    /** @description SSO経由で登録し、仮の名称が割り振られている場合true */
    is_not_decided_name?: boolean;
    /**
     * @description ログインにはSSOを利用するか
     * @example false
     */
    is_sso_user: boolean;
    /**
     * @description MNTSQのテスターかどうか
     * @example false
     */
    is_tester: boolean;
    /**
     * @description 連携ロックをする場合true
     * @example false
     */
    ignore_auth_info_csv_batch: boolean;
    /**
     * @description 外部ユーザーID
     * @example user001
     */
    external_id?: string;
    /**
     * @description ユーザーの選択したロケール
     * @example ja-JP
     * @enum {string}
     */
    locale: "ja-JP" | "en-US";
    /**
     * @description ユーザーのタイムゾーン(frontendから渡されて引き継いだものであり、現時点ではbackend内でだけ使用する想定)
     * @example Aisa/Tokyo
     */
    timezone: string;
    /** @description 最新の規約に同意済みの場合true */
    is_latest_terms_agreed: boolean;
  };
  /** @description V2_UserListWithStatsEntity model */
  V2_UserListWithStatsEntity: {
    users: definitions["V2_UserEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_FavoriteItemListWithStatsEntity model */
  V2_FavoriteItemListWithStatsEntity: {
    favorite_items: definitions["V2_FavoriteItemEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_UserGroupRelationEntity model */
  V2_UserGroupRelationEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description ユーザーID
     * @example 1
     */
    user_id: number;
    /**
     * Format: int32
     * @description ユーザーグループID
     * @example 1
     */
    user_group_id?: number;
  };
  /** @description V2_DocumentTreeChildrenEntity model */
  V2_DocumentTreeChildrenEntity: {
    children: definitions["V2_DocumentFolderFileTreeDirectoryEntity"][];
    stats: definitions["V2_CollectionPager"];
    ancestor_paths: { [key: string]: unknown }[];
  };
  V2_DocumentFolderFileTreeDirectoryEntity: {
    /** Format: int32 */
    id: number;
    name: string;
    is_directory: boolean;
    created_at: string;
    updated_at: string;
    document?: definitions["V2_DocumentFolderFileTreeDocumentEntity"];
    gdrive_document_tree?: definitions["V2_GdriveDocumentTreeEntity"];
    box_document_tree?: definitions["V2_BoxDocumentTreeEntity"];
  };
  V2_DocumentFolderFileTreeDocumentEntity: {
    /** Format: int32 */
    id: number;
    analyze_job?: definitions["V2_AnalyzeJobEntity"];
    file_format_for_search?: string;
    created_at_for_search?: string;
    document_types?: string[];
    is_contract_template?: boolean;
    /**
     * @description どこの雛型か。not_contract_template, mntsq, outdated_mntsqなど
     * @example mntsq
     */
    contract_template_credit_title?: string;
    file_name_label?: string;
    /**
     * @description どこからdocumentが追加されたか
     * @example manual_upload
     */
    data_source?: string;
  };
  /** @description V2_DirectoryDocumentTreeEntity model */
  V2_DirectoryDocumentTreeEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id: number;
    /**
     * Format: int32
     * @example 1
     */
    parent_directory_id?: number;
    /** @example フォルダ */
    name: string;
    /** @example true */
    is_directory: boolean;
    /** Format: int32 */
    document_id?: number;
    created_at: string;
    updated_at: string;
    /** @example true */
    is_leaf: boolean;
  };
  /** @description V2_MessageEntity model */
  V2_MessageEntity: {
    message?: string;
  };
  /** @description V2_DocumentTreeFileCountEntity model */
  V2_DocumentTreeFileCountEntity: {
    /**
     * Format: int32
     * @description ファイル数
     */
    file_count?: number;
  };
  /** @description V2_ConnectmailEmailDispatchEntity model */
  V2_ConnectmailEmailDispatchEntity: {
    /** Format: int32 */
    id: number;
    email: string;
    /** Format: int32 */
    document_tree_id: number;
    is_enabled: boolean;
  };
  /** @description V2_DocusignSyncStatusEntity model */
  V2_DocusignSyncStatusEntity: {
    /** Format: int32 */
    id?: number;
    /**
     * @description 同期開始時刻
     * @example 2018-10-01 12:00:00
     */
    sync_started_at?: string;
    /**
     * @description 同期終了時刻
     * @example 2018-10-01 12:00:00
     */
    last_synced_at?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_DocusignUserEntity model */
  V2_DocusignUserEntity: {
    /**
     * @description DocuSignユーザーID
     * @example xxxxx-xxxxxxxxx-xxxxxxs
     */
    id: string;
    /**
     * @description 名前
     * @example テスト
     */
    name?: string;
    /**
     * @description メールアドレス
     * @example test@example.com
     */
    email?: string;
    /**
     * @description 連携当事者か否か
     * @example false
     */
    is_master: boolean;
    /**
     * @description 連携を停止するか否か
     * @example false
     */
    is_suspend: boolean;
  };
  /** @description V2_DocusignUserAuthenticatedEntity model */
  V2_DocusignUserAuthenticatedEntity: {
    authenticated: boolean;
    error?: string;
  };
  /** @description V2_DocusignAccountEntity model */
  V2_DocusignAccountEntity: {
    /**
     * Format: int32
     * @description 保存先ディレクトリID
     * @example 1
     */
    sync_target_directory_id?: number;
    /** @description 保存先フォルダパス情報 */
    sync_target_directory_path?: definitions["V2_PathComponentEntity"][];
    /**
     * @description DocuSignアカウントID
     * @example xxxxx-xxxxxxxxx-xxxxxxx
     */
    id: string;
    /**
     * @description DocuSign連携の有効、無効
     * @example false
     */
    is_active?: boolean;
    /**
     * @description アカウント名
     * @example テストアカウント
     */
    name?: string;
    /**
     * @description 使用しているDocuSignテナントがホスティングされているURI
     * @example example.docusign.com
     */
    base_uri?: string;
    docusign_sync_status?: definitions["V2_DocusignSyncStatusEntity"];
  };
  V2_PathComponentEntity: {
    /** Format: int32 */
    id?: number;
    name?: string;
  };
  /** @description V2_DocusignCustomFieldConditionEntity model */
  V2_DocusignCustomFieldConditionEntity: {
    /**
     * Format: int32
     * @description 保存先ディレクトリID
     * @example 1
     */
    sync_target_directory_id?: number;
    /** @description 保存先フォルダパス情報 */
    sync_target_directory_path?: definitions["V2_PathComponentEntity"][];
    /**
     * Format: int32
     * @description 条件ID
     * @example 1
     */
    id: number;
    /**
     * @description カスタムフィールド名
     * @example ユーザーグループ
     */
    name?: string;
    /**
     * @description カスタムフィールド値
     * @example 開発部
     */
    value?: string;
    /**
     * @description DocuSignアカウントID
     * @example xxxxx-xxxxxxx-xxx
     */
    docusign_account_id?: string;
    /**
     * @description DocuSignアカウント名
     * @example MNTSQ
     */
    docusign_account_name?: string;
  };
  /** @description V2_DocusignApiResultEntity model */
  V2_DocusignApiResultEntity: {
    res?: { [key: string]: unknown };
  };
  /** @description V2_DocusignRefetchResultEntity model */
  V2_DocusignRefetchResultEntity: {
    /** @description エンベロープが新たにDBに保存されたか否か */
    is_envelope_newly_saved?: boolean;
    /** @description パラメーターで指定されたエンベロープに紐づく、APIから返却されたDocuSign上のドキュメントのGUID一覧 */
    api_returned_docusign_document_guids?: string[];
    /** @description api_returned_docusign_document_guidsのうち、既にDBに存在しているもののGUID一覧 */
    already_db_exists_docusign_document_guids?: string[];
    /** @description api_returned_docusign_document_guidsのうち、DBに存在していなかったもののGUID一覧 */
    newly_saved_docusign_document_guids?: string[];
    /** @description api_returned_docusign_document_guidsのうち、ファイル実体がダウンロードされていないもののGUID一覧 */
    file_missing_docusign_document_guids?: string[];
    /** @description api_returned_docusign_document_guidsのうち、ファイル実体がダウンロードされてdocumentが紐づいたものの一覧 */
    newly_downloaded_docusign_documents?: { [key: string]: unknown }[];
    /** @description エラーが発生した場合のエラークラス名 */
    error_class?: string;
    /**
     * Format: int32
     * @description DocuSign APIから返ってきたエラーコード
     */
    error_code?: number;
    /** @description DocuSign APIから返ってきたエラー情報 */
    error_info?: { [key: string]: unknown };
    /** @description エラーが発生した場合のエラーメッセージ */
    error_message?: string;
    /** @description エラーが発生した場合のバックトレース */
    error_backtrace?: string[];
  };
  /** @description V2_DocusignWebhookEntity model */
  V2_DocusignWebhookEntity: {
    /**
     * Format: int32
     * @description Document保存先のフォルダid
     * @example 0
     */
    sync_target_directory_id: number;
    /** @description 保存先フォルダパス情報 */
    sync_target_directory_path?: definitions["V2_PathComponentEntity"][];
    /**
     * @description DocuSignWebhookID
     * @example xxxxx-xxxxxxxxx-xxxxxxx
     */
    id: string;
    /**
     * @description 有効か否か
     * @example false
     */
    is_active: boolean;
    /**
     * @description 名前
     * @example テスト
     */
    name: string;
    /**
     * @description DocuSignWebhookURI
     * @example https://xxx.xxx.xxx
     */
    url: string;
    /**
     * @description DocuSignAccountID
     * @example xxxxx-xxxxxxxxx-xxxxxx
     */
    docusign_account_id: string;
    /**
     * @description DocuSignAccountName
     * @example MNTSQ
     */
    docusign_account_name?: string;
    /**
     * @description DocuSignUserID
     * @example xxxxx-xxxxxxxxx-xxxxxx
     */
    docusign_user_id: string;
    /**
     * @description DocuSignUserName
     * @example MNTSQ
     */
    docusign_user_name?: string;
  };
  /** @description V2_GdriveSyncConfigEntity model */
  V2_GdriveSyncConfigEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description Googleドライブ上の連携対象フォルダID
     * @example faosjghfgsaldkj
     */
    gdrive_folder_id?: string;
    /**
     * Format: int32
     * @description 取り込み先MNTSQフォルダ
     * @example 2
     */
    document_tree_id: number;
    /** @description 取り込み先MNTSQフォルダpath */
    document_tree_path?: { [key: string]: unknown }[];
    /**
     * @description Googleドライブ上の連携対象フォルダ名
     * @example faosjghfgsaldkj
     */
    gdrive_folder_name?: string;
    /**
     * Format: int32
     * @description GoogleユーザーID
     * @example 3
     */
    gdrive_user_id: number;
    /**
     * Format: int32
     * @description Googleユーザー名
     * @example 田中太郎
     */
    gdrive_user_name: number;
    gdrive_sync_status?: definitions["V2_GdriveSyncStatusEntity"];
  };
  V2_GdriveSyncStatusEntity: {
    /** Format: int32 */
    id?: number;
    /**
     * @description 同期開始時刻
     * @example 2018-10-01 12:00:00
     */
    sync_started_at?: string;
    /**
     * @description 同期終了時刻
     * @example 2018-10-01 12:00:00
     */
    last_synced_at?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_GdriveUserEntity model */
  V2_GdriveUserEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description Googleユーザー名
     * @example faosjghfgsaldkj
     */
    name?: string;
    /**
     * @description メールアドレス
     * @example faosjghfgsaldkj
     */
    email?: string;
  };
  /** @description V2_AssignmentListWithStatsEntity model */
  V2_AssignmentListWithStatsEntity: {
    assignments: definitions["V2_AssignmentEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  V2_AssignmentEntity: {
    /**
     * Format: int32
     * @description assignment id
     * @example 1
     */
    id: number;
    user: string;
    /**
     * Format: int32
     * @description アサインされたプロジェクトのid
     * @example 1
     */
    project_id?: number;
    /**
     * @description created_at
     * @example 2018-10-01 12:00:00
     */
    created_at?: string;
    /**
     * @description updated_at
     * @example 2018-10-01 12:00:03
     */
    updated_at?: string;
  };
  /** @description V2_MaintenanceEntity model */
  V2_MaintenanceEntity: {
    /**
     * Format: int32
     * @description maintenance id
     */
    id?: number;
    /**
     * @description タイトル
     * @example お知らせ
     */
    label: string;
    /**
     * @description 説明
     * @example 本日10時からメンテナンスを開始します
     */
    description: string;
    /**
     * @description 非表示にするか否か
     * @example true
     */
    is_hidden: boolean;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_MaintenanceModeEntity model */
  V2_MaintenanceModeEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description メンテナンスモード中か否か
     * @example false
     */
    enabled: boolean;
    /** @description 許可ユーザーID */
    user_ids: number[];
    /**
     * @description 前回更新された日時
     * @example 2019-10-01 12:00:00
     */
    updated_at: string;
  };
  /** @description V2_ContractTypeOptionGroupEntity model */
  V2_ContractTypeOptionGroupEntity: {
    label: string;
    identifier?: string;
    options?: definitions["V2_ContractTypeOptionGroupEntity"][];
    value?: string;
  };
  /** @description V2_AnalyzeJobSuspendEntity model */
  V2_AnalyzeJobSuspendEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description ジョブのID
     * @example false
     */
    will_suspends: boolean;
    /**
     * @description 前回更新された日時
     * @example 2019-10-01 12:00:00
     */
    updated_at?: string;
  };
  /** @description V2_ClauseListWithStatsEntity model */
  V2_ClauseListWithStatsEntity: {
    clauses: definitions["V2_ClauseEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_ClauseUserTagEntity model */
  V2_ClauseUserTagEntity: {
    /**
     * Format: int32
     * @description ClauseUserTagのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description ClauseのID
     * @example 1
     */
    clause_id: number;
    /**
     * Format: int32
     * @description マスタのID
     * @example 1
     */
    clause_user_tag_master_id: number;
    /** @description メモ */
    description: string;
    /** @description 自動付与か否か */
    is_automatically_added: boolean;
  };
  /** @description V2_Suggest_UserGroupListEntity model */
  V2_Suggest_UserGroupListEntity: {
    suggested_user_groups: definitions["V2_UserGroupEntity"][];
  };
  V2_UserGroupEntity: {
    /**
     * Format: int32
     * @description ユーザーグループID
     * @example 1
     */
    id: number;
    /**
     * @description ユーザーグループ名
     * @example ほげ部
     */
    name: string;
    hierarchy_label: string;
    group_ancestors?: string[];
    ancestor_ids?: number[];
    /**
     * @description 備考
     * @example ほげ部とは、ほげ部のことです。
     */
    note?: string;
    is_department: boolean;
    /**
     * @description 識別子
     * @example A0001
     */
    identifier: string;
    /**
     * Format: int32
     * @description 親user_group.id
     */
    parent_user_group_id?: number;
    /** @description 通知や担当者に設定できるようにする */
    is_selectable: boolean;
    /**
     * @description 連携ロックをする場合true
     * @example false
     */
    ignore_auth_info_csv_batch: boolean;
  };
  /** @description V2_Suggest_UserListEntity model */
  V2_Suggest_UserListEntity: {
    suggested_users: definitions["V2_UserWithGroupEntity"][];
  };
  V2_UserWithGroupEntity: {
    /**
     * Format: int32
     * @description user id
     * @example 1
     */
    id: number;
    /**
     * @description user email
     * @example test@test.com
     */
    email: string;
    /**
     * @description user name
     * @example 板谷隆平
     */
    name: string;
    /**
     * @description status
     * @example live
     */
    status: string;
    /** Format: int32 */
    organization_id: number;
    /**
     * @description user type
     * @example member
     */
    user_type: string;
    /**
     * @description user role
     * @example lawyer
     */
    user_role: string;
    /**
     * @description user created_at
     * @example 2018-10-01 12:00:00
     */
    created_at: string;
    /**
     * @description user updated_at
     * @example 2018-11-03 11:20:33
     */
    updated_at: string;
    /**
     * @description PW更新を求めるか
     * @example false
     */
    will_request_new_pw: boolean;
    /** @description SSO経由で登録し、仮の名称が割り振られている場合true */
    is_not_decided_name?: boolean;
    /** @description SSO経由で登録した場合、どのIDPから登録したか */
    registered_idp_key?: string;
    /** @description ユーザーのフラグ管理 */
    details?: { [key: string]: unknown };
    /**
     * @description ユーザーの選択したロケール
     * @example ja-JP
     * @enum {string}
     */
    locale: "ja-JP" | "en-US";
    /**
     * @description ユーザーのタイムゾーン(frontendから渡されて引き継いだものであり、現時点ではbackend内でだけ使用する想定)
     * @example Aisa/Tokyo
     */
    timezone: string;
    user_groups?: definitions["V2_UserGroupEntity"][];
  };
  /** @description V2_Suggest_ClientMasterListEntity model */
  V2_Suggest_ClientMasterListEntity: {
    suggested_client_masters: definitions["V2_Suggest_ClientMasterEntity"][];
  };
  V2_Suggest_ClientMasterEntity: {
    /** @example MNTSQ株式会社 */
    latest_name?: string;
    /** @example MNTSQ */
    name?: string;
    /**
     * Format: int32
     * @example 1
     */
    client_master_id?: number;
    /** @example True */
    is_group_company?: boolean;
  };
  /** @description V2_Suggest_TagListEntity model */
  V2_Suggest_TagListEntity: {
    suggested_tags: definitions["V2_Suggest_TagEntity"][];
  };
  V2_Suggest_TagEntity: {
    /**
     * @description tagの種類
     * @example contract_type
     */
    type?: string;
    /**
     * @description tagの内部key
     * @example other_contract
     */
    value?: string;
    /**
     * @description tagの表示名
     * @example 未分類
     */
    label?: string;
  };
  /** @description V2_Search_MatterListWithStatsEntity model */
  V2_Search_MatterListWithStatsEntity: {
    /** @description 統計情報 */
    stats: definitions["V2_Search_ListStatsEntity"];
    matters: definitions["V2_MatterSearchEntity"][];
  };
  V2_MatterSearchEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_form_id: number;
    /** Format: int32 */
    matter_status_id: number;
    /**
     * Format: int32
     * @description 案件フォルダ(「共有フォルダ」と「案件回答部門限定フォルダ」を子にもつ)
     */
    target_document_tree_id?: number;
    /**
     * Format: int32
     * @description 共有フォルダ (案件が見える人全員が見える)
     */
    target_document_tree_public_id?: number;
    /**
     * Format: int32
     * @description 案件回答部門限定フォルダ (案件が見えて、かつ作成元フォームに回答部門権限(matter_form/admin)をもっている人だけが見える)
     */
    target_document_tree_for_agent_id?: number;
    /**
     * @description 案件番号 (yymmddxxxx形式で採番。xxxxは日別の通番4桁(0001,0002,...)。5桁以上もとりうる)
     * @example 2209260001
     */
    matter_number: string;
    /**
     * @description 案件タイトル
     * @example ロック株式会社との研究開発について
     */
    title: string;
    /**
     * @description 案件の内容
     * @example 先方から契約書のドラフトを受領したのでレビューをお願いします
     */
    description: string;
    /**
     * @description 案件メールアドレス
     * @example abcdef@bcdefg.mail.mntsq.com
     */
    matter_recipient_email_address: string;
    /**
     * Format: date
     * @description 期限
     */
    deadline_date?: string;
    /**
     * @description 依頼日
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 最終更新日時
     * @example 2019-05-17 16:00:00
     */
    last_actioned_at: string;
    /**
     * @description 最終更新者(ユーザー名) / MNTSQユーザー以外が更新した場合は、ここにのみ更新者が残る
     * @example 法務太郎
     */
    last_actioned_original_user_name?: string;
    /**
     * @description 最終更新者(メールアドレス) / MNTSQユーザー以外が更新した場合は、ここにのみ更新者が残る
     * @example houmu.tarou@example.com
     */
    last_actioned_original_user_email?: string;
    /**
     * Format: int32
     * @description 最終更新者 / MNTSQユーザーが更新した場合のuser_id
     */
    last_actioned_user_id?: number;
    /** @description お気に入りアイテム */
    favorite_item?: definitions["V2_FavoriteItemEntity"];
    /** @description 社内推奨 */
    public_favorite_item?: definitions["V2_PublicFavoriteItemEntity"];
    /** @description ステータス */
    matter_status?: definitions["V2_MatterStatusEntity"];
    /** @description 担当者(ユーザー) */
    responsible_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 担当者(グループ) */
    responsible_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 依頼者(ユーザー) */
    requester_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 依頼者(グループ) */
    requester_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 最終更新者 */
    last_actioned_user?: definitions["V2_UserWithGroupEntity"];
    /** @description 取引先 */
    client_masters?: definitions["V2_ClientMasterWithLatestNameEntity"][];
    /** @description ハイライト情報 */
    highlights: definitions["V2_Search_MatterHighlightEntity"];
  };
  /** @description V2_MatterStatusEntity model */
  V2_MatterStatusEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 種類 (Initial:未着手, InProgress:対応中, Completion:完了, Custom:ユーザー定義)
     * @enum {string}
     */
    type: "Initial" | "InProgress" | "Completion";
    /**
     * @description ステータス名
     * @example 法務対応中
     */
    label: string;
    /**
     * Format: int32
     * @description 並び順
     */
    order_num: number;
  };
  V2_ClientMasterWithLatestNameEntity: {
    /**
     * Format: int32
     * @description クライアントマスターID
     * @example 1
     */
    id: number;
    /**
     * @description 企業番号
     * @example abc
     */
    corporate_number?: string;
    /**
     * @description 種別
     * @example imported
     * @enum {string}
     */
    data_type?: "imported" | "external_resource_nta" | "generated";
    /**
     * Format: int32
     * @description 決算月
     * @example 12
     */
    closing_month?: number;
    /**
     * @description メモ
     * @example すごいメモ
     */
    note?: string;
    /**
     * @description グループ会社かどうか
     * @example false
     */
    is_group_company?: boolean;
    /**
     * @description client_masterの代表名
     * @example MNTSQ株式会社
     */
    latest_name: string;
  };
  V2_Search_MatterHighlightEntity: {
    /** @description タイトルへのハイライト情報配列 */
    title: string;
    /** @description タイトルへのハイライト情報配列 */
    title_en: string;
    /** @description 概要へのハイライト情報配列 */
    description: string;
    /** @description 概要へのハイライト情報配列 */
    description_en: string;
    /** @description 案件コメントへのハイライト情報配列 */
    matter_timeline_comments_public: string;
    /** @description 案件コメントへのハイライト情報配列 */
    matter_timeline_comments_public_en: string;
    /** @description 案件コメントへのハイライト情報配列(回答部門のみ) */
    matter_timeline_comments_for_agent: string;
    /** @description 案件コメントへのハイライト情報配列(回答部門のみ) */
    matter_timeline_comments_for_agent_en: string;
  };
  /** @description V2_Search_ClauseListWithStatsEntity model */
  V2_Search_ClauseListWithStatsEntity: {
    stats: definitions["V2_Search_ClauseListStatsEntity"];
    clauses?: definitions["V2_Search_ClauseEntity"][];
    /**
     * @description キーワードの補正候補
     * @example "mnstq": "mntsq"
     */
    spellcheck?: { [key: string]: unknown };
  };
  V2_Search_ClauseListStatsEntity: {
    /**
     * Format: int32
     * @description hitしたドキュメント数
     * @example 123
     */
    counts_all: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 12
     */
    counts_pages_all: number;
    /**
     * Format: int32
     * @description 重複を除去したおおよその数
     * @example 10
     */
    counts_removed_duplicates: number;
    /** @example false */
    prev_exists: boolean;
    /** @example true */
    next_exists: boolean;
    /**
     * Format: int32
     * @description ヒット件数
     * @example 12
     */
    hit_count: number;
    breakdowns?: definitions["V2_Search_StatsBreakdownEntity"][];
  };
  V2_Search_StatsBreakdownEntity: {
    /** @example contract_type */
    group_label?: string;
    items?: definitions["V2_Search_StatsBreakdownItemEntity"][];
  };
  V2_Search_StatsBreakdownItemEntity: {
    /**
     * Format: int32
     * @example 1
     */
    order_num?: number;
    /** @example na */
    label?: string;
    /** @example na */
    value?: string;
    /**
     * Format: int32
     * @example 8
     */
    counts?: number;
  };
  V2_Search_ClauseEntity: {
    /**
     * Format: int32
     * @example 10
     */
    id?: number;
    /**
     * Format: int32
     * @example 1
     */
    document_id?: number;
    clause_tags?: string[];
    clause_user_tags?: definitions["V2_Search_ClauseUserTagEntity"][];
    contract_types?: definitions["V2_Search_ContractTypeEntity"][];
    /** @example license.pdf */
    file_name_label?: string;
    ancestor_paths?: { [key: string]: unknown }[];
    parties?: definitions["V2_Search_PartyEntity"][];
    /** @example Word */
    file_format_for_search?: string;
    is_final_version?: boolean;
    highlighted_description?: string[];
    /** @example ABC123 */
    external_reference_info?: string;
    annotation_highlights?: string[];
    /** @example ja */
    language_for_search?: string;
    management_tags?: definitions["V2_Search_ManagementTagInDocumentEntity"][];
    ledger_tags?: definitions["V2_Search_LedgerTagInDocumentEntity"][];
    /** @example manual_upload */
    data_source?: string;
    /** @example mntsq */
    credit_title?: string;
    is_favored?: boolean;
    /** @example note */
    favorite_item_note?: string;
    is_public_favored?: boolean;
    /** @example note */
    public_favorite_item_note?: string;
    governing_law?: string[];
  };
  V2_Search_ClauseUserTagEntity: {
    /** Format: int32 */
    id: number;
    label: string;
  };
  V2_Search_ContractTypeEntity: {
    /**
     * Format: int32
     * @example 1
     */
    document_id?: number;
    /** @example na */
    contract_type?: string;
  };
  V2_Search_PartyEntity: {
    /**
     * Format: int32
     * @example 1
     */
    value?: number;
    /** @example MNTSQ株式会社 */
    label?: string;
    /** @example false */
    is_group_company?: boolean;
    /** @example false */
    is_counterparty?: boolean;
  };
  V2_Search_ManagementTagInDocumentEntity: {
    /** Format: int32 */
    id: number;
    label: string;
    hierarchy_label: string;
  };
  V2_Search_LedgerTagInDocumentEntity: {
    /** Format: int32 */
    id: number;
    label: string;
  };
  /** @description V2_Search_DocumentListWithStatsEntity model */
  V2_Search_DocumentListWithStatsEntity: {
    stats: definitions["V2_Search_DocumentListStatsEntity"];
    documents?: definitions["V2_Search_DocumentEntity"][];
    /**
     * @description キーワードの補正候補
     * @example "mnstq": "mntsq"
     */
    spellcheck?: { [key: string]: unknown };
  };
  V2_Search_DocumentListStatsEntity: {
    /**
     * Format: int32
     * @description hitしたドキュメント数
     * @example 123
     */
    counts_all: number;
    /**
     * Format: int32
     * @description 全ページ数
     * @example 12
     */
    counts_pages_all: number;
    /**
     * Format: int32
     * @description 重複を除去したおおよその数
     * @example 10
     */
    counts_removed_duplicates: number;
    /** @example false */
    prev_exists: boolean;
    /** @example true */
    next_exists: boolean;
    /**
     * Format: int32
     * @description ヒット件数
     * @example 12
     */
    hit_count: number;
    breakdowns?: definitions["V2_Search_StatsBreakdownEntity"][];
  };
  V2_Search_DocumentEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id?: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id?: number;
    /** @example license.pdf */
    title?: string;
    /** @example live */
    status?: string;
    contract_types?: definitions["V2_Search_ContractTypeEntity"][];
    clause_tags?: string[];
    clause_user_tags?: definitions["V2_Search_ClauseUserTagEntity"][];
    /** @example license.pdf */
    file_name_label?: string;
    ancestor_paths?: { [key: string]: unknown }[];
    /** @example 2001-11-22 */
    updated_at?: string;
    /** @example 2001-11-22 */
    created_at?: string;
    parties?: definitions["V2_Search_PartyEntity"][];
    /** @example abc */
    note?: string;
    /**
     * Format: int32
     * @example 1
     */
    transaction_amount?: number;
    /** @example jpy */
    transaction_amount_currency?: string;
    /** @example Word */
    file_format_for_search?: string;
    /** @example 2001-11-22 */
    created_at_for_search?: string;
    /** @example 2001 */
    created_at_for_search_year?: string;
    /** @example 2001-11-22 */
    effective_date?: string;
    is_non_fixed_contract_term?: boolean;
    /** @example 2001-11-22 */
    expired_on?: string;
    is_final_version?: boolean;
    file_name_label_highlights?: string[];
    note_highlights?: string[];
    text_highlights?: string[];
    commentary_highlights?: string[];
    document_types?: string[];
    execution_date?: string[];
    /** @example ABC123 */
    external_reference_info?: string;
    /** @example http://example.com/external/link */
    external_service_url?: string;
    /**
     * Format: int32
     * @example 3
     */
    page_num?: number;
    /** @example ja */
    language_for_search?: string;
    management_tags?: definitions["V2_Search_ManagementTagInDocumentEntity"][];
    ledger_tags?: definitions["V2_Search_LedgerTagInDocumentEntity"][];
    /** @example 23bfda403t3429bag */
    collapse_field?: string;
    notification_status?: string[];
    /** @example manual_upload */
    data_source?: string;
    is_automatic_renewal?: boolean;
    /**
     * Format: int32
     * @example 3
     */
    non_renewal_notice_deadline_value?: number;
    /**
     * Format: int32
     * @example 3
     */
    automatic_renewal_period_value?: number;
    /**
     * @description 自動更新年月日の単位（year・month・day）
     * @example month
     */
    automatic_renewal_period_date_unit?: string;
    /**
     * @description 自動更新しない旨の通知期限単位（year・month・day）
     * @example month
     */
    non_renewal_notice_deadline_date_unit?: string;
    responsible_users?: definitions["V2_Search_UserEntity"][];
    responsible_user_groups?: definitions["V2_Search_UserGroupEntity"][];
    /** @example mntsq */
    credit_title?: string;
    is_favored?: boolean;
    /** @example abc */
    favorite_item_note?: string;
    is_public_favored?: boolean;
    /** @example abc */
    public_favorite_item_note?: string;
    has_stickies?: boolean;
    has_related_agreement_candidates?: boolean;
    related_agreements?: definitions["V2_Search_RelatedAgreementEntity"][];
    stickies?: definitions["V2_Search_StickyEntity"][];
    has_public_stickies?: boolean;
    public_stickies?: definitions["V2_Search_StickyEntity"][];
    has_note?: boolean;
    governing_law?: string[];
    custom_columns?: { [key: string]: unknown };
    analyze_job?: definitions["V2_Search_AnalyzeJobEntity"];
    /**
     * @description 目的
     * @example AAAAの独占供給
     */
    purpose?: string;
    /** @description レビュー済みかどうか */
    reviewed?: boolean;
  };
  V2_Search_UserEntity: {
    /**
     * Format: int32
     * @example 1
     */
    value?: number;
    /** @example MNTSQ太郎 */
    label?: string;
  };
  V2_Search_UserGroupEntity: {
    /**
     * Format: int32
     * @example 1
     */
    value?: number;
    /** @example ほげ部 */
    name?: string;
  };
  V2_Search_RelatedAgreementEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id?: number;
    /** @example 契約だよ */
    title?: string;
    /** @example 契約ファイルだよ */
    file_name_label?: string;
    /** @example true */
    is_parent?: boolean;
  };
  V2_Search_StickyEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id?: number;
    /** @example aaa */
    note?: string;
  };
  V2_Search_AnalyzeJobEntity: {
    /** Format: int32 */
    id?: number;
    result_type?: string;
    finished_at?: string;
  };
  /** @description V2_SearchSynonymEntity model */
  V2_SearchSynonymEntity: {
    /** Format: int32 */
    id: number;
    definitions_array: string[];
    use_on_text_fields: boolean;
    use_on_purpose_field: boolean;
  };
  /** @description V2_DashboardEntity model */
  V2_DashboardEntity: {
    breakdowns?: definitions["V2_DashboardItemGroupEntity"][];
  };
  V2_DashboardItemGroupEntity: {
    /** @example contract_type */
    group_label?: string;
    items?: definitions["V2_DashboardItemEntity"][];
  };
  V2_DashboardItemEntity: {
    /**
     * Format: int32
     * @example 1
     */
    order_num?: number;
    /** @example lender */
    label?: string;
    /** @example lender */
    value?: string;
    /**
     * Format: int32
     * @example 123
     */
    counts?: number;
  };
  /** @description V2_UserGroupListWithStatsEntity model */
  V2_UserGroupListWithStatsEntity: {
    user_groups: definitions["V2_UserGroupFullEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_UserGroupDetailEntity model */
  V2_UserGroupDetailEntity: {
    /**
     * Format: int32
     * @description ユーザーグループID
     * @example 1
     */
    id: number;
    /**
     * @description ユーザーグループ名
     * @example ほげ部
     */
    name: string;
    hierarchy_label: string;
    group_ancestors?: string[];
    ancestor_ids?: number[];
    /**
     * @description 備考
     * @example ほげ部とは、ほげ部のことです。
     */
    note?: string;
    is_department: boolean;
    /**
     * @description 識別子
     * @example A0001
     */
    identifier: string;
    /**
     * Format: int32
     * @description 親user_group.id
     */
    parent_user_group_id?: number;
    /** @description 通知や担当者に設定できるようにする */
    is_selectable: boolean;
    /**
     * @description 連携ロックをする場合true
     * @example false
     */
    ignore_auth_info_csv_batch: boolean;
    /** @description 末尾の要素であるか */
    is_leaf: boolean;
  };
  /** @description V2_ProductConfigEntity model */
  V2_ProductConfigEntity: {
    /**
     * Format: int32
     * @description 設定ID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description 巨大ファイル判定ページ数
     * @example 1
     */
    page_num_threshold_for_too_big_file?: number;
    /**
     * Format: int32
     * @description 巨大ファイル判定文字数
     * @example 1
     */
    char_num_threshold_for_too_big_file?: number;
    /**
     * Format: int32
     * @description テキストファイルの巨大ファイル判定ファイルサイズKB
     * @example 1
     */
    file_size_kb_threshold_for_too_big_file_text?: number;
    /**
     * Format: int32
     * @description Excelファイルの巨大ファイル判定行数
     * @example 1
     */
    row_num_threshold_for_too_big_file_excel?: number;
    /**
     * Format: int32
     * @description Excelファイルの巨大ファイル判定列数
     * @example 1
     */
    column_num_threshold_for_too_big_file_excel?: number;
    /**
     * Format: int32
     * @description Excelファイルの巨大ファイル判定ファイルサイズKB
     * @example 1
     */
    file_size_kb_threshold_for_too_big_file_excel?: number;
    /**
     * Format: int32
     * @description analyze_job取得時のページ数ランダムレンジ上限
     * @example 1
     */
    analyze_job_pagination_page?: number;
    /**
     * Format: int32
     * @description analyze_job取得時の１ページあたりjob数
     * @example 60
     */
    analyze_job_pagination_per?: number;
    /**
     * Format: int32
     * @description DocumentDecryptionJobを分割するDocument数
     * @example 1000
     */
    decryption_documents_slice_unit?: number;
    /** @description AnalyzeJobの一覧APIでソートするか否か。導入プロジェクト向けの高速化オプション */
    analyze_job_without_sort?: boolean;
    /** @description AnalyzeJobの一覧APIで削除中を含むか否か。導入プロジェクト向けの高速化オプション */
    analyze_job_with_in_delete_queue?: boolean;
    /**
     * Format: float
     * @description タイムアウトの時間の倍率指定
     */
    analyze_processing_timeout_duration_multiple?: number;
    /**
     * Format: int32
     * @description ESのindexingを何並列でやるか (対象index: documents, clauses)
     */
    indexing_parallel_count?: number;
    /**
     * Format: int32
     * @description ESのindexingのbulk insert size(MB単位) (対象index: documents, clauses)
     */
    indexing_bulk_size_mb?: number;
  };
  /** @description V2_ClientMasterListWithStatsEntity model */
  V2_ClientMasterListWithStatsEntity: {
    client_masters: definitions["V2_ClientMasterFullEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_PartyIdentificationListWithStatsEntity model */
  V2_PartyIdentificationListWithStatsEntity: {
    party_identifications: definitions["V2_PartyIdentificationEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_ContractTemplateListEntity model */
  V2_ContractTemplateListEntity: {
    /**
     * @description 契約類型
     * @example aoi
     */
    contract_type: string;
    attributes: definitions["V2_ContractTemplateAttributeEntity"][];
    documents: definitions["V2_ContractTemplateDocumentCompactEntity"][];
  };
  V2_ContractTemplateAttributeEntity: {
    /** Format: int32 */
    id?: number;
    /**
     * @description 契約類型
     * @example aoi
     */
    contract_type: string;
    /** @example mntsq */
    credit_title: string;
    /**
     * @description 値
     * @example neutral
     */
    value?: string;
    /**
     * @description ラベル
     * @example 中立
     */
    label?: string;
    options: definitions["V2_ContractTemplateAttributeOptionEntity"][];
  };
  V2_ContractTemplateAttributeOptionEntity: {
    /** Format: int32 */
    id?: number;
    /**
     * @description 値
     * @example neutral
     */
    value?: string;
    /**
     * @description ラベル
     * @example 中立
     */
    label?: string;
  };
  V2_ContractTemplateDocumentCompactEntity: {
    /**
     * Format: int32
     * @description ドキュメントID
     * @example 1
     */
    document_id: number;
    /**
     * @description どこの雛型か。not_contract_template, mntsq, outdated_mntsqなど
     * @example mntsq
     */
    contract_template_credit_title?: string;
    /** @description 契約種別リスト */
    contract_types: string[];
    /** @description 雛型属性オプションIDリスト */
    contract_template_attribute_option_ids: number[];
  };
  /** @description V2_ExtractEntity model */
  V2_ExtractEntity: {
    /**
     * @description 抽出されるデータの種類
     * @example project_id
     */
    output_type: string;
    /**
     * @description 抽出されるデータの値
     * @example 1
     */
    output_value: string;
  };
  /** @description V2_AsyncJobLogListWithStatsEntity model */
  V2_AsyncJobLogListWithStatsEntity: {
    async_job_logs: definitions["V2_AsyncJobLogEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_StickyEntity model */
  V2_StickyEntity: {
    /** Format: int32 */
    id?: number;
    /**
     * Format: int32
     * @description ユーザーID
     * @example 1
     */
    user_id?: number;
    /**
     * Format: int32
     * @description ドキュメントID
     * @example 1
     */
    document_id?: number;
    /**
     * Format: int32
     * @description 付箋のY軸における位置(px)
     * @example 1
     */
    axis_y_in_px?: number;
    /**
     * @description 付箋の内容
     * @example 1
     */
    note?: string;
    /**
     * @description 公開フラグ
     * @example 1
     */
    is_public?: boolean;
    document?: {
      ancestor_paths?: { [key: string]: unknown }[];
      /**
       * @description ドキュメントID
       * @example 1
       */
      file_name_label?: string;
    };
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_StickyListWithStatsEntity model */
  V2_StickyListWithStatsEntity: {
    stickies: definitions["V2_StickyEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_HelloEntity model */
  V2_HelloEntity: {
    /**
     * @description Rails、DB、ESの時刻が取得できているか否か
     * @example OK
     */
    status?: string;
    /** @description Railsサーバの時刻 */
    server_time?: string;
    /** Format: int32 */
    active_job_left_count?: number;
    will_suspends?: boolean;
  };
  /** @description V2_ManagementTagListWithStatsEntity model */
  V2_ManagementTagListWithStatsEntity: {
    management_tags: definitions["V2_ManagementTagEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_LedgerTagListWithStatsEntity model */
  V2_LedgerTagListWithStatsEntity: {
    ledger_tags: definitions["V2_LedgerTagEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_LedgerTagReminderTemplateEntity model */
  V2_LedgerTagReminderTemplateEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    ledger_tag_id: number;
    /**
     * @description 名称
     * @example 契約更新通知
     */
    name: string;
    /**
     * @description 通知基準日付の種別
     * @example expired_on
     */
    target_date_type: string;
    /**
     * @description 基準日から通知までのリードタイム
     * @example {
     *   "value": 5,
     *   "unit": "days"
     * }
     */
    lead_time: { [key: string]: unknown };
    /**
     * @description 通知メッセージの種別
     * @example renewal_deadline
     */
    notification_message_text_type: string;
    /** @example 2024-02-01 12:00:00 */
    created_at: string;
    /** @example 2024-02-01 12:00:00 */
    updated_at: string;
    /**
     * @description 通知対象者リスト
     * @example {
     *   "users": [
     *     {
     *       "id": 1,
     *       "name": "通知太郎"
     *     }
     *   ],
     *   "user_groups": [
     *     {
     *       "id": 1,
     *       "name": "A事業部"
     *     }
     *   ]
     * }
     */
    remindees: { [key: string]: unknown };
  };
  /** @description V2_DocumentLedgerTagEntity model */
  V2_DocumentLedgerTagEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    document_id: number;
    /** Format: int32 */
    ledger_tag_id: number;
    ledger_tag?: definitions["V2_LedgerTagEntity"];
    ledger_document_review_log?: definitions["V2_LedgerDocumentReviewLogEntity"];
  };
  V2_LedgerDocumentReviewLogEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    reviewer_user_id: number;
    /**
     * @description レビュー登録日時
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
  };
  /** @description V2_CloudsignTeamEntity model */
  V2_CloudsignTeamEntity: {
    /** Format: int32 */
    id: number;
    client_id: string;
    /** Format: int32 */
    document_tree_id: number;
    /** Format: date-time */
    previous_executed_at?: string;
  };
  /** @description V2_CloudsignTeamListWithStatsEntity model */
  V2_CloudsignTeamListWithStatsEntity: {
    cloudsign_teams: definitions["V2_CloudsignTeamEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_ViewDocumentListWithStatsEntity model */
  V2_ViewDocumentListWithStatsEntity: {
    view_documents: definitions["V2_ViewDocumentEntity"][];
    stats: definitions["V2_Search_ListStatsEntity"];
  };
  V2_ViewDocumentEntity: {
    document?: {
      /**
       * Format: int32
       * @example 1
       */
      id?: number;
      ancestor_paths?: { [key: string]: unknown }[];
      /** @example 1 */
      file_name_label?: string;
    };
    /**
     * Format: int32
     * @example 1
     */
    user_id?: number;
    /** @example 2019-10-01 12:00:00 */
    timestamp?: string;
  };
  /** @description V2_CustomGroupEntity model */
  V2_CustomGroupEntity: {
    /** Format: int32 */
    management_tag_id: number;
    custom_reports?: definitions["V2_CustomReportEntity"][];
  };
  /** @description V2_CustomReportEntity model */
  V2_CustomReportEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    management_tag_id: number;
    report_type: string;
    section_annotation_type?: string;
    left_chart_type: string;
    left_chart_title?: string;
    right_chart_type: string;
    right_chart_title?: string;
    /** Format: int32 */
    document_id: number;
    /** Format: int32 */
    order_num?: number;
    custom_report_values?: definitions["V2_CustomReportValueEntity"][];
  };
  /** @description V2_CustomReportValueEntity model */
  V2_CustomReportValueEntity: {
    /** Format: int32 */
    id: number;
    chart_position: string;
    /** Format: int32 */
    counts: number;
    label?: string;
  };
  /** @description V2_DocumentRelatedDocumentEntity model */
  V2_DocumentRelatedDocumentEntity: {
    /**
     * Format: int32
     * @description 関連契約紐付けのID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description ドキュメントのID
     * @example 1
     */
    document_id: number;
    /**
     * Format: int32
     * @description  関連ドキュメントのID（ドキュメントのIDより大きい）
     * @example 1
     */
    related_document_id: number;
  };
  /** @description V2_DraftingModelEntity model */
  V2_DraftingModelEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /** @example code */
    code: string;
    /**
     * @description タイトル
     * @example title
     */
    title?: string;
    /**
     * @description 説明
     * @example description
     */
    description?: string;
    /**
     * @description メモ
     * @example memo
     */
    memo?: string;
    /**
     * @description SearchTargetProjectで使うかどうか
     * @example false
     */
    is_production: boolean;
    /**
     * @description 作成日時
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 更新日時
     * @example 2019-05-17 16:00:00
     */
    updated_at: string;
    drafting_model_phases?: definitions["V2_DraftingModelPhaseEntity"][];
    drafting_model_templates?: definitions["V2_DraftingModelTemplateEntity"][];
  };
  V2_DraftingModelPhaseEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /** @example 1 */
    label: string;
    /**
     * Format: int32
     * @description phase順序
     * @example 1
     */
    order_number: number;
  };
  V2_DraftingModelTemplateEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /** @example sample_template */
    name: string;
    /** @example sample_template.rb */
    template_file_name: string;
    /** @example sample_template.docx */
    download_file_name: string;
    /**
     * @description 作成日時
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 更新日時
     * @example 2019-05-17 16:00:00
     */
    updated_at: string;
  };
  /** @description V2_DraftingModelListWithStatsEntity model */
  V2_DraftingModelListWithStatsEntity: {
    drafting_models: definitions["V2_DraftingModelEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_DraftingTaskEntity model */
  V2_DraftingTaskEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    drafting_model_id: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id: number;
    user: definitions["V2_UserEntity"];
    /** @example 2021-01-23 NDA雛型 */
    name?: string;
    /** @example note */
    note?: string;
    /** @example 2019-05-17 16:00:00 */
    render_queued_at?: string;
    /** @example start */
    latest_history_status?: string;
  };
  /** @description V2_DraftingTaskListWithStatsEntity model */
  V2_DraftingTaskListWithStatsEntity: {
    drafting_tasks: definitions["V2_DraftingTaskEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_DraftingTaskRenderResultEntity model */
  V2_DraftingTaskRenderResultEntity: {
    /** @description job id */
    job_ids?: number[];
  };
  /** @description V2_RenderedDraftingTaskEntity model */
  V2_RenderedDraftingTaskEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    drafting_model_id: number;
    /**
     * Format: int32
     * @example 1
     */
    project_id: number;
    user: definitions["V2_UserEntity"];
    /** @example 2021-01-23 NDA雛型 */
    name?: string;
    /** @example note */
    note?: string;
    /** @example 2019-05-17 16:00:00 */
    render_queued_at?: string;
    /** @example start */
    latest_history_status?: string;
    /**
     * @description 最終回答日時
     * @example 2019-05-17 16:00:00
     */
    last_answered_at?: string;
    /**
     * @example {
     *   "a": 1,
     *   "b": "b"
     * }
     */
    variable_state?: { [key: string]: unknown };
    resolved_answers?: { [key: string]: unknown }[];
    drafting_question_groups?: definitions["V2_RenderedDraftingQuestionGroupEntity"][];
  };
  V2_RenderedDraftingQuestionGroupEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    drafting_model_phase_id: number;
    /**
     * Format: int32
     * @example 1
     */
    drafting_model_id: number;
    /** @example code */
    code: string;
    /** @example list_style */
    display_type: string;
    /**
     * @description 質問文
     * @example XXなものがあれば、ご開示ください
     */
    rendered_text?: string;
    drafting_question_rows?: definitions["V2_RenderedDraftingQuestionRowEntity"][];
  };
  V2_RenderedDraftingQuestionRowEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    drafting_question_group_id: number;
    /** @example code */
    code: string;
    /**
     * @description Rowの解説文
     * @example XXなものがあれば、ご開示ください
     */
    rendered_text?: string;
    drafting_questions?: definitions["V2_RenderedDraftingQuestionEntity"][];
  };
  V2_RenderedDraftingQuestionEntity: {
    /**
     * Format: int32
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @example 1
     */
    drafting_question_row_id: number;
    /** @example code */
    code: string;
    /**
     * @description 質問文
     * @example XXなものがあれば、ご開示ください
     */
    rendered_text?: string;
    /**
     * @description 選択肢の種類
     * @example single_select
     */
    interaction_type?: string;
    /**
     * @description 選択肢の内容
     * @example {"はい": True, "いいえ": False}
     */
    select_options?: string;
    /** @description 選択肢のデフォルト値 */
    default_value?: string;
    /**
     * @description 更新対象のキー
     * @example [
     *   "aaa"
     * ]
     */
    update_variable?: { [key: string]: unknown };
    validations?: { [key: string]: unknown };
    /**
     * @description フロントエンドで表示する付加情報
     * @example こちらは○○になります
     */
    question_info?: string;
  };
  /** @description V2_LedgerCustomColumnListWithStatsEntity model */
  V2_LedgerCustomColumnListWithStatsEntity: {
    ledger_custom_columns: definitions["V2_LedgerCustomColumnEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_NotificationDefaultMailContentEntity model */
  V2_NotificationDefaultMailContentEntity: {
    /** @example <p>更新期限に関する通知【MNTSQ】<data value=\"fileNameLabel\"></data></p> */
    subject: string;
    /** @example 契約更新の手続きを行なってください。<br>【URL】<data value=\"fileUrl\"> */
    body: string;
  };
  /** @description V2_DocumentDiscussionListEntity model */
  V2_DocumentDiscussionListEntity: {
    /** Format: int32 */
    document_id: number;
    discussions: definitions["V2_DocumentDiscussionEntity"][];
  };
  V2_DocumentDiscussionEntity: {
    /** Format: int32 */
    id: number;
    /** @example 2019-05-17 16:00:00 */
    start_time?: string;
    resolved: boolean;
    spans: definitions["V2_DocumentSpanEntity"][];
    comments: definitions["V2_DocumentDiscussionCommentEntity"][];
  };
  V2_DocumentSpanEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    start_char_num: number;
    /** Format: int32 */
    half_width_blank_num_to_start_char: number;
    /** Format: int32 */
    full_width_blank_num_to_start_char: number;
    /** Format: int32 */
    end_char_num: number;
    /** Format: int32 */
    half_width_blank_num_to_end_char: number;
    /** Format: int32 */
    full_width_blank_num_to_end_char: number;
    source_text?: string;
  };
  V2_DocumentDiscussionCommentEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    comment_id: number;
    is_parent?: boolean;
    /** @example 2019-05-17 16:00:00 */
    comment_time?: string;
    author?: definitions["V2_DocumentDiscussionCommentAuthorEntity"];
    comment_text: string;
  };
  V2_DocumentDiscussionCommentAuthorEntity: {
    name: string;
  };
  /** @description V2_ActiveJobLeftEntity model */
  V2_ActiveJobLeftEntity: {
    is_active_job_left: boolean;
  };
  /** @description V2_SsoConfigEntity model */
  V2_SsoConfigEntity: {
    /**
     * Format: int32
     * @description 設定ID
     * @example 1
     */
    id: number;
    /**
     * @description 複数のIDP設定がある時にIDPを区別するためのキー
     * @example AzureAD
     */
    idp_key: string;
    /**
     * @description IDP ログインurl
     * @example https://login.microsoftonline.com/xxx-xxxx-xxx/saml2
     */
    idp_sso_service_url?: string;
    /**
     * @description IDP 識別子
     * @example https://sts.windows.net/xxxx-xxxxxx-xxxxxx/
     */
    idp_entity_id?: string;
    /**
     * @description IDP ログアウトurl
     * @example https://login.microsoftonline.com/xxx-xxxx-xxx/saml2
     */
    idp_slo_service_url?: string;
    /**
     * @description MNTSQに未登録のユーザーがSSOログインで新規登録することを許す場合true
     * @example true
     */
    is_accepting_new_user?: boolean;
    /**
     * @description ユーザー名追加要求ができる場合のclaim名
     * @example http://schemas.xmlsoap.org/ws/2005/05/identity/claims/displayname
     */
    claim_name_of_display_name?: string;
    /**
     * @description ユーザー名追加要求ができる場合のキー
     * @example displayname
     */
    attribute_key_of_display_name?: string;
    /**
     * @description Email Address追加要求ができる場合のclaim名
     * @example http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
     */
    claim_name_of_email_address?: string;
    /**
     * @description Email Address追加要求ができる場合のキー
     * @example emailaddress
     */
    attribute_key_of_email_address?: string;
    /**
     * Format: int32
     * @description ユーザーを新規登録する際のOrganization
     * @example 1
     */
    organization_id?: number;
    /**
     * @description SP initiatedを有効にするかどうか。複数のsso_configがある場合にtrueにできるのは一つだけ。
     * @example false
     */
    is_sp_initiated_active?: boolean;
    /**
     * @description SP initiatedでのSLO(MNTSQをログアウトしたらIdPをログアウト)を有効にするかどうか
     * @example false
     */
    is_sp_initiated_slo_active?: boolean;
    /**
     * @description SPがリクエスト署名するか
     * @example false
     */
    is_sp_request_signature_active?: boolean;
  };
  /** @description V2_SsoPathEntity model */
  V2_SsoPathEntity: {
    /**
     * @description sso init path
     * @example /api/v2/authentication_saml/:idp_key/init
     */
    sso_path?: string;
  };
  /** @description V2_SsoConfigRequestSignatureEntity model */
  V2_SsoConfigRequestSignatureEntity: {
    /**
     * Format: int32
     * @description 設定ID
     * @example 1
     */
    id: number;
    /**
     * Format: int32
     * @description ユーザーを新規登録する際のSsoConfig
     * @example 1
     */
    sso_config_id?: number;
    /**
     * @description SPがリクエスト署名する場合のPrivateKeyが設定されているかどうか
     * @example true
     */
    sp_request_private_key_filled?: boolean;
    /**
     * @description SPがリクエスト署名する場合のCertificateが設定されているかどうか
     * @example true
     */
    sp_request_certificate_filled?: boolean;
    /**
     * @description 有効期限
     * @example 2019-05-17 16:00:00
     */
    expire_at: string;
  };
  /** @description V2_GoverningLawEntity model */
  V2_GoverningLawEntity: {
    /** @description 準拠法名 */
    name: string;
    /** @description 準拠法コード */
    code: string;
  };
  /** @description V2_PublicFavoriteItemListWithStatsEntity model */
  V2_PublicFavoriteItemListWithStatsEntity: {
    public_favorite_items: definitions["V2_PublicFavoriteItemEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_SharepointDocumentLibraryConfigEntity model */
  V2_SharepointDocumentLibraryConfigEntity: {
    /**
     * Format: int32
     * @description 設定ID
     * @example 1
     */
    id: number;
    /** Format: int32 */
    organization_id: number;
    /**
     * @description DocumentLibrary名
     * @example DocLib1
     */
    name: string;
    /**
     * @description このキーを使ってSharepointDocumentとConfigを照合する
     * @example test_document_lib_key
     */
    document_library_key: string;
    /**
     * Format: int32
     * @description 保存先ディレクトリID
     * @example 1
     */
    document_tree_id: number;
  };
  /** @description V2_AuthorizationDiagnosisEntity model */
  V2_AuthorizationDiagnosisEntity: {
    resource_identifier: string;
    is_allow: boolean;
    is_active: boolean;
    access_level: string;
    user_group?: definitions["V2_UserGroupFullEntity"];
  };
  /** @description V2_AuthorizationInfoEntity model */
  V2_AuthorizationInfoEntity: {
    config_key: string;
    resource_type: string;
    /** Format: int32 */
    resource_id?: number;
    access_levels: string[];
    resolved_resource_type: string;
  };
  /** @description V2_GroupPermissionMinimumEntity model */
  V2_GroupPermissionMinimumEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    user_group_id: number;
    user_group_name: string;
    is_allow: boolean;
    access_level: string;
    is_directly_granted: boolean;
  };
  /** @description V2_OrganizationConfigEntity model */
  V2_OrganizationConfigEntity: {
    /**
     * Format: int32
     * @description 設定ID
     * @example 1
     */
    id: number;
    /**
     * @description NO&T向けの表記を表示するか
     * @example false
     */
    is_noandt_writing?: boolean;
    /**
     * @description 法務DDの有効、無効
     * @example false
     */
    is_legal_dd_active?: boolean;
    /**
     * @description 資料請求・Q&Aの有効、無効
     * @example false
     */
    is_questions_active?: boolean;
    /**
     * @description 契約DBの有効、無効
     * @example false
     */
    is_contract_database_active?: boolean;
    /**
     * @description ドラフティングの有効、無効
     * @example false
     */
    is_drafting_active?: boolean;
    /**
     * Format: int32
     * @description 検索対象プロジェクトID
     * @example 1
     */
    search_target_project_id?: number;
    /** @description MNTSQ英文解析の有効、無効 */
    is_english_mntsq_module_active?: boolean;
    /**
     * @description Connectmail メール自動連携の有効、無効
     * @example false
     */
    is_connectmail_email_active?: boolean;
    connectmail_email_recipient_domain?: string;
    /**
     * @description DocuSign連携アカウントベースURI
     * @example account-d.docusign.com
     */
    docusign_base_uri?: string;
    /** @description DocuSign連携のインテグレーションキーが設定されているかどうか */
    is_docusign_app_integration_key_filled?: boolean;
    /**
     * @description Docusignの取得基準日時
     * @example 2018-10-01 12:00:00
     */
    docusign_sync_from?: string;
    /**
     * @description DocuSign連携の秘密鍵が設定されているかどうか
     * @example true
     */
    is_docusign_private_key_filled?: boolean;
    /** @description Docusignの受信物探索をAPIで行うかどうか。既定値はfalse */
    is_sync_docusign_receive_by_api?: boolean;
    /** @description Googleドライブ連携をMNTSQで行うかどうか。既定値はtrue */
    is_gdrive_active?: boolean;
    /**
     * @description Googleドライブ連携のクレデンシャルが設定されているかどうか
     * @example true
     */
    is_gdrive_credential_filled?: boolean;
    /**
     * @description Googleドライブ連携でクラウド側での削除を無視するかどうかのフラグ
     * @example false
     */
    gdrive_non_delete?: boolean;
    /**
     * @description Connectmail連携の有効、無効
     * @example false
     */
    is_connectmail_active?: boolean;
    /**
     * Format: int32
     * @description Connectmailから取得したファイルのupload先document_tree_id
     * @example 1
     */
    connectmail_document_tree_id?: number;
    /**
     * @description Connectmail連携のタイプ
     * @example standard
     */
    connectmail_type?: string;
    /**
     * Format: int32
     * @description 雛型の保存先フォルダ
     * @example 1
     */
    contract_template_target_document_tree_id?: number;
    /**
     * Format: int32
     * @description MNTSQ雛型の保存先フォルダ
     * @example 1
     */
    mntsq_contract_template_target_document_tree_id?: number;
    /**
     * Format: int32
     * @description MNTSQ雛型のアーカイブ先フォルダ
     * @example 1
     */
    outdated_mntsq_contract_template_document_tree_id?: number;
    /**
     * @description 締結版の保存先フォルダ。ここに変更したファイルは自動で締結版となる。（正規表現）
     * @example /SharePoint - 契約管理app/.*\/締結版/
     */
    final_version_file_path?: string;
    /**
     * @description クラウドサインの有効、無効
     * @example false
     */
    is_cloudsign_active?: boolean;
    /**
     * @description クラウドサインの本番環境か否か
     * @example false
     */
    is_cloudsign_production?: boolean;
    /** @description Workflowの有効、無効 */
    is_workflow_active?: boolean;
    /** @description ユーザーの手動ファイルアップロードを許可するかどうか。既定値はtrue(許可) */
    is_manual_upload_active?: boolean;
    /** @description Masterの契約の有無。既定値はfalse(無し) */
    is_master_active?: boolean;
    /** @description トライアル環境かどうか。既定値はfalse */
    is_trial_use?: boolean;
    /** @description データベース_CS問い合わせダイアログの有効、無効 */
    is_db_cs_help_active?: boolean;
    /** @description ユーザー情報連携を行うかどうか。既定値はfalse */
    is_auth_info_csv_batch_active: boolean;
    /** @description ユーザー情報連携のタイプ */
    auth_info_csv_batch_type: string;
    /** @description Box連携をMNTSQで行うかどうか。既定値はfalse */
    is_box_active?: boolean;
    /** @description BoxFetcherのタイプ */
    box_fetcher_type: string;
    /**
     * @description Box連携のclientID
     * @example xxxxx-xxxxxxxxx-xxxxxxx
     */
    box_client_id?: string;
    /**
     * @description Box連携のpublicKeyID
     * @example xxxxx-xxxxxxxxx-xxxxxxx
     */
    box_public_key_id?: string;
    /**
     * @description Box連携のenterpriseID
     * @example xxxxx-xxxxxxxxx-xxxxxxx
     */
    box_enterprise_id?: string;
    /**
     * @description BoxのAppUserId
     * @example 1111111111
     */
    box_user_id?: string;
    /**
     * @description organizationが使用しているBoxのドメイン
     * @example https://app.box.com
     */
    box_domain?: string;
    /** @description Boxのを詳細ログを有効にするかどうか */
    is_active_box_detail_log: boolean;
    /** @description GDriveのを詳細ログを有効にするかどうか */
    is_active_gdrive_detail_log: boolean;
    /**
     * @description Box連携のClientSecretが設定されているかどうか
     * @example true
     */
    is_box_client_secret_filled?: boolean;
    /**
     * @description Box連携のPrivateKeyが設定されているかどうか
     * @example true
     */
    is_box_private_key_filled?: boolean;
    /**
     * @description Box連携のPassPhraseが設定されているかどうか
     * @example true
     */
    is_box_passphrase_filled?: boolean;
    /**
     * @description noticeを送るSlackチャンネル
     * @example #dev-webhook-tests
     */
    slack_usage_ch?: string;
    /**
     * @description errorを送るSlackチャンネル
     * @example #dev-webhook-tests
     */
    slack_error_ch?: string;
    /**
     * @description 案件ごとに発行されるメールアドレスの共通ドメイン名
     * @example abcdef@bcdefg.mail.mntsq.com
     */
    matter_email_recipient_domain?: string;
    /** @description ログイン検知メールをユーザーが受け取るか。IP制限を利用しない場合は原則trueにする。既定値はfalse */
    is_login_email_on?: boolean;
    /** @description 外部ユーザーIDの入力を可能とするか。外部ユーザーIDを利用する場合はtrueにする。既定値はfalse */
    is_user_external_id_enable?: boolean;
    /** @description 案件管理の連携用のファイルを出力するか。利用する場合はtrueにする。既定値はfalse */
    is_matter_connect_file_creation_active?: boolean;
    /** @description [Feature Flag] 通知の自動設定、相対日時指定、本文カスタマイズなどの機能の有効・無効化を制御するために使用します。QAやローカル動作確認で true にします。本番環境では基本的に false の想定です */
    is_notification_improvement_active_experimentally?: boolean;
  };
  /** @description V2_TenantConfigEntity model */
  V2_TenantConfigEntity: {
    tenant_id?: string;
    matomo_host?: string;
    /** Format: int32 */
    matomo_site_id?: number;
    vue_env_name?: string;
    vue_org_name?: string;
    vue_show_env_name?: boolean;
  };
  /** @description V2_IndexingSuspendEntity model */
  V2_IndexingSuspendEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description documentのindexing処理が止められているか
     * @example true
     */
    documents: boolean;
    /**
     * @description keyword_suggestsのindexing処理が止められているか
     * @example true
     */
    keyword_suggests: boolean;
    /**
     * @description client_namesのindexing処理が止められているか
     * @example true
     */
    client_names: boolean;
    /**
     * @description 名寄せ処理が止められているか
     * @example true
     */
    aggregation: boolean;
  };
  /** @description V2_BoxSyncConfigEntity model */
  V2_BoxSyncConfigEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description 取り込み元BoxフォルダのID
     * @example 11111111
     */
    box_folder_id: string;
    /**
     * Format: int32
     * @description 取り込み先MNTSQフォルダ
     * @example 2
     */
    document_tree_id: number;
    /** @description 取り込み先MNTSQフォルダpath */
    ancestor_paths?: { [key: string]: unknown }[];
    box_sync_status?: definitions["V2_BoxSyncStatusEntity"];
  };
  V2_BoxSyncStatusEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 同期開始時刻
     * @example 2018-10-01 12:00:00
     */
    sync_started_at?: string;
    /**
     * @description 同期終了時刻
     * @example 2018-10-01 12:00:00
     */
    last_fetched_at?: string;
    /**
     * @description 最終エラー時刻
     * @example 2018-10-01 12:00:00
     */
    sync_errored_at?: string;
    /**
     * @description エラーかどうか
     * @example true
     */
    is_error?: boolean;
    /**
     * @description エラー内容
     * @example BoxのItemが見つかりません
     */
    error_message?: string;
    /** @example 2018-10-01 12:00:00 */
    created_at?: string;
    /** @example 2018-10-01 12:00:00 */
    updated_at?: string;
  };
  /** @description V2_MntsqEnModuleTargetDocumentTreeEntity model */
  V2_MntsqEnModuleTargetDocumentTreeEntity: {
    /** Format: int32 */
    id?: number;
    /** Format: int32 */
    organization_id?: number;
    /** Format: int32 */
    document_tree_id?: number;
  };
  /** @description V2_MatterFormDetailEntity model */
  V2_MatterFormDetailEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 案件フォーム名
     * @example 契約の相談
     */
    form_title: string;
    /**
     * @description フォームの説明
     * @example 業務委託契約、研究開発契約、NDAなど契約の相談に使用します。
     */
    form_description: string;
    /**
     * Format: int32
     * @description 格納先フォルダID (個別案件の案件フォルダの親となる)
     */
    target_document_tree_id: number;
    /** @description 案内文 */
    form_guidance: string;
    /** @description アーカイブ済みのフォームかどうか */
    is_archived: boolean;
    /** @description ステータス一覧(order_numの昇順になっている) */
    matter_statuses?: definitions["V2_MatterStatusEntity"][];
    /** @description 項目一覧 */
    matter_column_settings?: definitions["V2_MatterColumnSettingEntity"][];
    /** @description カスタム項目定義（order_numの昇順になっている） */
    matter_custom_columns?: definitions["V2_MatterCustomColumnFullEntity"][];
    /** @description 初期担当者(ユーザー) */
    default_responsible_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 初期担当者(グループ) */
    default_responsible_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 初期関係者(ユーザー) */
    default_related_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 初期関係者(グループ) */
    default_related_user_groups?: definitions["V2_UserGroupEntity"][];
  };
  V2_MatterColumnSettingEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_form_id: number;
    /**
     * @description カラムの種類。標準のカラムの場合はその種類が入る。カスタムカラムの場合はmatter_custom_columnとなる
     * @enum {string}
     */
    column_type:
      | "title"
      | "description"
      | "client_master"
      | "deadline_date"
      | "attachment"
      | "requester_entity"
      | "responsible_entity"
      | "related_entity"
      | "matter_custom_column";
    /**
     * Format: int32
     * @description column_type:matter_custom_column の場合、そのID (matter_custom_column.id)
     */
    matter_custom_column_id?: number;
    /**
     * Format: int32
     * @description カラムの並び順
     */
    order_num: number;
    /**
     * @description 注釈
     * @example 社内稟議システムが発行する番号です
     */
    caption_text?: string;
    /** @description 必須入力かどうか */
    is_required: boolean;
    /** @description 非表示かどうか */
    is_hidden: boolean;
  };
  /** @description V2_MatterCustomColumnFullEntity model */
  V2_MatterCustomColumnFullEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_form_id: number;
    /**
     * @description 項目名
     * @example 稟議番号
     */
    column_name: string;
    /**
     * @description 入力タイプ
     * @enum {string}
     */
    option_type:
      | "single_select"
      | "multi_select"
      | "boolean"
      | "free_text"
      | "date"
      | "client_master"
      | "string"
      | "number"
      | "date_range"
      | "list"
      | "list_single";
    /** @description 項目の選択肢（order_numの昇順になっている） */
    matter_custom_column_options?: definitions["V2_MatterCustomColumnOptionEntity"][];
  };
  V2_MatterCustomColumnOptionEntity: {
    /**
     * Format: int32
     * @description ID
     */
    id: number;
    /** @description 選択肢の値 */
    label: string;
    /** @description 初期値かどうか */
    is_default: boolean;
    /** @description 非表示かどうか */
    is_hidden: boolean;
    /**
     * Format: int32
     * @description 並び順
     */
    order_num: number;
  };
  /** @description V2_MatterFormListWithStatsEntity model */
  V2_MatterFormListWithStatsEntity: {
    matter_forms: definitions["V2_MatterFormDetailEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_MatterDetailEntity model */
  V2_MatterDetailEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_form_id: number;
    /** Format: int32 */
    matter_status_id: number;
    /**
     * Format: int32
     * @description 案件フォルダ(「共有フォルダ」と「案件回答部門限定フォルダ」を子にもつ)
     */
    target_document_tree_id?: number;
    /**
     * Format: int32
     * @description 共有フォルダ (案件が見える人全員が見える)
     */
    target_document_tree_public_id?: number;
    /**
     * Format: int32
     * @description 案件回答部門限定フォルダ (案件が見えて、かつ作成元フォームに回答部門権限(matter_form/admin)をもっている人だけが見える)
     */
    target_document_tree_for_agent_id?: number;
    /**
     * @description 案件番号 (yymmddxxxx形式で採番。xxxxは日別の通番4桁(0001,0002,...)。5桁以上もとりうる)
     * @example 2209260001
     */
    matter_number: string;
    /**
     * @description 案件タイトル
     * @example ロック株式会社との研究開発について
     */
    title: string;
    /**
     * @description 案件の内容
     * @example 先方から契約書のドラフトを受領したのでレビューをお願いします
     */
    description: string;
    /**
     * @description 案件メールアドレス
     * @example abcdef@bcdefg.mail.mntsq.com
     */
    matter_recipient_email_address: string;
    /**
     * Format: date
     * @description 期限
     */
    deadline_date?: string;
    /**
     * @description 依頼日
     * @example 2019-05-17 16:00:00
     */
    created_at: string;
    /**
     * @description 最終更新日時
     * @example 2019-05-17 16:00:00
     */
    last_actioned_at: string;
    /**
     * @description 最終更新者(ユーザー名) / MNTSQユーザー以外が更新した場合は、ここにのみ更新者が残る
     * @example 法務太郎
     */
    last_actioned_original_user_name?: string;
    /**
     * @description 最終更新者(メールアドレス) / MNTSQユーザー以外が更新した場合は、ここにのみ更新者が残る
     * @example houmu.tarou@example.com
     */
    last_actioned_original_user_email?: string;
    /**
     * Format: int32
     * @description 最終更新者 / MNTSQユーザーが更新した場合のuser_id
     */
    last_actioned_user_id?: number;
    /** @description お気に入りアイテム */
    favorite_item?: definitions["V2_FavoriteItemEntity"];
    /** @description 社内推奨 */
    public_favorite_item?: definitions["V2_PublicFavoriteItemEntity"];
    /** @description ステータス */
    matter_status?: definitions["V2_MatterStatusEntity"];
    /** @description 取引先 */
    client_masters?: definitions["V2_ClientMasterWithLatestNameEntity"][];
    /** @description 担当者(ユーザー) */
    responsible_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 担当者(グループ) */
    responsible_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 依頼者(ユーザー) */
    requester_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 依頼者(グループ) */
    requester_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 関係者(ユーザー) */
    related_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 関係者(グループ) */
    related_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 添付ファイル */
    matter_attachment_documents?: definitions["V2_MatterAttachmentDocumentFullEntity"][];
    /** @description カスタム項目の値 */
    matter_custom_column_values?: definitions["V2_MatterCustomColumnValueEntity"][];
    /** @description 紐づく締結版ドキュメント */
    final_version_documents?: definitions["V2_DocumentMinimumEntity"][];
    /** @description 最終更新者 */
    last_actioned_user?: definitions["V2_UserWithGroupEntity"];
    /** @description 案件作成者 */
    creator_user?: definitions["V2_UserWithGroupEntity"];
  };
  V2_MatterAttachmentDocumentFullEntity: {
    /** Format: int32 */
    id: number;
    /**
     * Format: int32
     * @description 添付対象matterのID
     */
    matter_id: number;
    /**
     * Format: int32
     * @description 添付対象matter_timeline(案件コメント)のID
     */
    matter_timeline_id?: number;
    /**
     * Format: int32
     * @description 添付されたdocumentのID
     */
    document_id: number;
    /**
     * @description 添付ファイルの状態(extracting:圧縮ファイル展開中、extraction_failure:展開エラー(パスワード付等)、uploaded:アップロード完了、deleted:削除された)
     * @enum {string}
     */
    status: "extracting" | "extraction_failure" | "uploaded" | "deleted";
    /** @description アップロード時のファイル名。添付ファイルが削除されていない場合のみ存在 */
    document_original_file_name?: string;
  };
  V2_MatterCustomColumnValueEntity: {
    /**
     * Format: int32
     * @description ID
     */
    id: number;
    /** Format: int32 */
    matter_id: number;
    /** Format: int32 */
    matter_custom_column_id: number;
    /** @description カスタムカラムの値。matter_custom_column.option_typeごとにフォーマットが異なる */
    value: string;
  };
  /** @description V2_MatterStatsEntity model */
  V2_MatterStatsEntity: {
    /** Format: int32 */
    id: number;
    name: string;
    /**
     * Format: int32
     * @description 回答部門未着手件数
     */
    initial_count: number;
    /**
     * Format: int32
     * @description 進行中件数
     */
    in_progress_count: number;
    /**
     * Format: int32
     * @description 完了件数
     */
    completion_count: number;
  };
  /** @description V2_MatterStatsSearchConditionEntity model */
  V2_MatterStatsSearchConditionEntity: {
    users: definitions["V2_UserWithGroupEntity"][];
    /**
     * Format: int32
     * @description 初期選択の担当者ユーザのid
     * @example 1
     */
    select_user_id?: number;
  };
  /** @description V2_MatterLastActionedAtEntity model */
  V2_MatterLastActionedAtEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 最終更新日時
     * @example 2019-05-17 16:00:00
     */
    last_actioned_at: string;
  };
  /** @description V2_MatterUserClassifiedByPermissionEntity model */
  V2_MatterUserClassifiedByPermissionEntity: {
    admin: definitions["V2_UserWithGroupEntity"][];
    requester: definitions["V2_UserWithGroupEntity"][];
    invalid: definitions["V2_UserWithGroupEntity"][];
  };
  /** @description V2_MatterTimelineCommentDraftActiveEntity model */
  V2_MatterTimelineCommentDraftActiveEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_id: number;
    /** Format: int32 */
    creator_user_id: number;
    /**
     * @description コメント下書き更新日時
     * @example 2018-10-01 12:00:00
     */
    drafted_at: string;
    /** @description コメント下書き詳細 */
    matter_timeline_comment_draft_detail?: definitions["V2_MatterTimelineCommentDraftDetailEntity"];
    /** @description 案件 */
    matter?: definitions["V2_MatterEntity"];
  };
  V2_MatterTimelineCommentDraftDetailEntity: {
    /** Format: int32 */
    id: number;
    /** @description コメント内容 */
    comment: string;
    /** @description コメント内容(HTMLタグ除去) */
    comment_text: string;
    /**
     * @description 表示範囲 (public:全体, for_agent:回答部門のみ)
     * @enum {string}
     */
    visible_scope: "public" | "for_agent";
    /** @description 添付ファイル */
    matter_timeline_comment_draft_attachment_documents?: definitions["V2_MatterTimelineCommentDraftAttachmentDocumentEntity"][];
  };
  /** @description V2_MatterTimelineCommentDraftAttachmentDocumentEntity model */
  V2_MatterTimelineCommentDraftAttachmentDocumentEntity: {
    /** Format: int32 */
    id: number;
    /** @description 添付対象のファイル名 */
    original_filename: string;
  };
  /** @description V2_MatterTimelineListWithStatsEntity model */
  V2_MatterTimelineListWithStatsEntity: {
    matter_timelines: definitions["V2_MatterTimelineDetailEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_MatterTimelineDetailEntity model */
  V2_MatterTimelineDetailEntity: {
    /** Format: int32 */
    id: number;
    /** Format: int32 */
    matter_id: number;
    /**
     * @description やりとりの種類
     * @enum {string}
     */
    type:
      | "PostComment"
      | "UpdateField"
      | "UpdateRequesterEntity"
      | "UpdateResponsibleEntity"
      | "UpdateRelatedEntity"
      | "UpdateFinalVersionDocument";
    /** Format: int32 */
    user_id?: number;
    original_user_name: string;
    original_user_email: string;
    /**
     * @description type:PostComment の場合に使用する、表示範囲 (public:全体, for_agent:回答部門のみ)
     * @enum {string}
     */
    visible_scope: "public" | "for_agent";
    /**
     * @description 発生日時
     * @example 2018-10-01 12:00:00
     */
    created_at?: string;
    /** @description お気に入りアイテム */
    favorite_item?: definitions["V2_FavoriteItemEntity"];
    /** @description 社内推奨 */
    public_favorite_item?: definitions["V2_PublicFavoriteItemEntity"];
    /** @description やり取りの詳細。typeごとに含まれる内容が異なる (詳細は https://docs.google.com/spreadsheets/d/1ujEwWMJmtr4NfN81BAmD5uOjf2Po2hWKKmPkHFVW_dg/edit#gid=1399519656 ) */
    timeline_units: definitions["V2_MatterTimelineUnitEntity"][];
    /** @description `やりとりの実施者。MNTSQユーザーでないメールアドレスからのメールコメントの場合はnullになる。その場合は original_user_(name|email)を参照すること。` */
    user?: definitions["V2_UserWithGroupEntity"];
    /** @description 添付ファイル */
    matter_attachment_documents?: definitions["V2_MatterAttachmentDocumentFullEntity"][];
  };
  V2_MatterTimelineUnitEntity: {
    /** @description 操作概要のテキスト */
    text: string;
    /** @description メンションされたユーザー */
    mentioned_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 取り込み元のメールに設定されたメールアドレス（from、to、cc） */
    email_addresses?: definitions["V2_Email_AddressEntity"][];
    /**
     * @description 操作種別
     * @enum {string}
     */
    action_type: "add" | "update" | "delete";
    /**
     * @description 操作対象となったリソース
     * @enum {string}
     */
    resource_type?:
      | "document"
      | "title"
      | "description"
      | "client_master"
      | "deadline_date"
      | "matter_status"
      | "matter_timeline_comment"
      | "requester_user"
      | "requester_user_group"
      | "responsible_user"
      | "responsible_user_group"
      | "related_user"
      | "related_user_group";
    /**
     * Format: int32
     * @description resource_typeで示されるリソースのID。(ex) resource_type:documentなら、document_id
     */
    resource_id?: number;
  };
  V2_Email_AddressEntity: {
    /** @example Alice */
    display_name: string;
    /** @example hoge@example.com */
    address: string;
    /** @example to */
    type: string;
  };
  /** @description V2_MatterTimelineCommentDraftActiveListWithStatsEntity model */
  V2_MatterTimelineCommentDraftActiveListWithStatsEntity: {
    matter_timeline_comment_drafts: definitions["V2_MatterTimelineCommentDraftActiveEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_MatterAttachmentDocumentEntity model */
  V2_MatterAttachmentDocumentEntity: {
    /** Format: int32 */
    id: number;
    /**
     * Format: int32
     * @description 添付対象matterのID
     */
    matter_id: number;
    /**
     * Format: int32
     * @description 添付対象matter_timeline(案件コメント)のID
     */
    matter_timeline_id?: number;
    /**
     * Format: int32
     * @description 添付されたdocumentのID
     */
    document_id: number;
    /**
     * @description 添付ファイルの状態(extracting:圧縮ファイル展開中、extraction_failure:展開エラー(パスワード付等)、uploaded:アップロード完了、deleted:削除された)
     * @enum {string}
     */
    status: "extracting" | "extraction_failure" | "uploaded" | "deleted";
  };
  /** @description V2_MatterDraftActiveEntity model */
  V2_MatterDraftActiveEntity: {
    /** Format: int32 */
    id: number;
    matter_form?: definitions["V2_MatterFormEntity"];
    /**
     * @description 下書き更新日時
     * @example 2018-10-01 12:00:00
     */
    drafted_at: string;
    /** @description 下書き詳細 */
    matter_draft_detail?: definitions["V2_MatterDraftDetailEntity"];
  };
  V2_MatterFormEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 案件フォーム名
     * @example 契約の相談
     */
    form_title: string;
    /**
     * @description フォームの説明
     * @example 業務委託契約、研究開発契約、NDAなど契約の相談に使用します。
     */
    form_description: string;
    /**
     * Format: int32
     * @description 格納先フォルダID (個別案件の案件フォルダの親となる)
     */
    target_document_tree_id: number;
    /** @description 案内文 */
    form_guidance: string;
    /** @description アーカイブ済みのフォームかどうか */
    is_archived: boolean;
  };
  V2_MatterDraftDetailEntity: {
    /** Format: int32 */
    id: number;
    /**
     * @description 案件タイトル
     * @example ロック株式会社との研究開発について
     */
    title?: string;
    /**
     * @description 案件の内容
     * @example 先方から契約書のドラフトを受領したのでレビューをお願いします
     */
    description?: string;
    /**
     * Format: date
     * @description 期限
     */
    deadline_date?: string;
    /** @description 取引先 */
    client_masters?: definitions["V2_ClientMasterWithLatestNameEntity"][];
    /** @description カスタム項目の値 */
    matter_draft_custom_column_values?: definitions["V2_MatterDraftCustomColumnValueEntity"][];
    /** @description 依頼者(ユーザー) */
    draft_requester_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 依頼者(グループ) */
    draft_requester_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 担当者(ユーザー) */
    draft_responsible_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 担当者(グループ) */
    draft_responsible_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 関係者(ユーザー) */
    draft_related_users?: definitions["V2_UserWithGroupEntity"][];
    /** @description 関係者(グループ) */
    draft_related_user_groups?: definitions["V2_UserGroupEntity"][];
    /** @description 添付ファイル */
    matter_draft_attachment_documents?: definitions["V2_MatterDraftAttachmentDocumentEntity"][];
  };
  V2_MatterDraftCustomColumnValueEntity: {
    /**
     * Format: int32
     * @description ID
     */
    id: number;
    /** Format: int32 */
    matter_draft_detail_id: number;
    /** Format: int32 */
    matter_custom_column_id: number;
    /** @description カスタムカラムの値。matter_custom_column.option_typeごとにフォーマットが異なる */
    value: string;
  };
  /** @description V2_MatterDraftAttachmentDocumentEntity model */
  V2_MatterDraftAttachmentDocumentEntity: {
    /** Format: int32 */
    id: number;
    /** @description 添付対象のファイル名 */
    original_filename: string;
  };
  /** @description V2_MatterDraftActiveListWithStatsEntity model */
  V2_MatterDraftActiveListWithStatsEntity: {
    matter_drafts: definitions["V2_MatterDraftActiveEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_ContractRelationEntity model */
  V2_ContractRelationEntity: {
    /**
     * Format: int32
     * @description id
     * @example 1
     */
    id?: number;
    /**
     * Format: int32
     * @description 関連元のドキュメントID
     * @example 1
     */
    parent_document_id?: number;
    /**
     * Format: int32
     * @description 関連先のドキュメントID
     * @example 2
     */
    child_document_id?: number;
    /** @description 関連のタイプ */
    relation_type?: string;
    /** @description 自動判別されたものか */
    is_auto_detected?: boolean;
  };
  /** @description V2_SuccessiveClientEntity model */
  V2_SuccessiveClientEntity: {
    /** Format: int32 */
    id?: number;
    /** Format: int32 */
    client_master_id?: number;
    /** Format: int32 */
    representative_client_name_id?: number;
    is_active?: boolean;
    is_group_company?: boolean;
    data_type: string;
    client_names?: definitions["V2_ClientNameEntity"][];
  };
  /** @description V2_ClientNameEntity model */
  V2_ClientNameEntity: {
    /** Format: int32 */
    id?: number;
    /** Format: int32 */
    successive_client_id?: number;
    name: string;
    use_for_suggest?: boolean;
    use_for_name_aggregation?: boolean;
  };
  /** @description V2_SuccessiveClientListWithStatsEntity model */
  V2_SuccessiveClientListWithStatsEntity: {
    successive_clients: definitions["V2_SuccessiveClientEntity"][];
    stats: definitions["V2_CollectionPager"];
  };
  /** @description V2_EmailFilterModeEntity model */
  V2_EmailFilterModeEntity: {
    /**
     * @description メール連携でのセキュアでないemailのデータの扱い
     * @example pass
     */
    mode?: string;
  };
  /** @description V2_WhitelistedConnectmailDomainEntity model */
  V2_WhitelistedConnectmailDomainEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description connectmailでの連携を許可するドメイン
     * @example mntsq.com
     */
    domain: string;
  };
  /** @description V2_LocalizationConfigEntity model */
  V2_LocalizationConfigEntity: {
    /**
     * @description 既定のロケール
     * @example ja-JP
     * @enum {string}
     */
    default_locale: "ja-JP" | "en-US";
    /**
     * @description タイムゾーンを固定で使用する場合、その値。nullの場合はブラウザ依存となる。
     * @example Asia/Tokyo
     */
    forced_timezone?: string;
    /** @description user.localeとして使用可能なロケールの配列 */
    available_locales: definitions["V2_AvailableLocaleEntity"][];
  };
  V2_AvailableLocaleEntity: {
    /**
     * Format: int32
     * @description ID
     * @example 1
     */
    id: number;
    /**
     * @description ロケール名
     * @example ja-JP
     * @enum {string}
     */
    locale: "ja-JP" | "en-US";
    /**
     * @description ロケールの表示名
     * @example 日本語 (日本)
     */
    display_name: string;
    /** Format: int32 */
    localization_config_id: number;
  };
  /** @description V2_DocumentAnalysisRerunEntity model */
  V2_DocumentAnalysisRerunEntity: {
    /** Format: int32 */
    total_count?: number;
    /** Format: int32 */
    processed_count?: number;
    skipped_ids?: number[];
  };
  /** @description V2_NotificationCustomMailContentEntity model */
  V2_NotificationCustomMailContentEntity: {
    /**
     * Format: int32
     * @description id
     * @example 1
     */
    id: number;
    /**
     * @description 名前
     * @example 更新通知
     */
    name: string;
    /**
     * @description 概要
     * @example 更新通知マニュアルリンク付き
     */
    description?: string;
    /**
     * @description 通知種別
     * @example renewal_deadline
     */
    notification_type: string;
    /**
     * @description メールの件名
     * @example <p>更新時期到来のお知らせ<data value="fileNameLabel"></data></p>
     */
    subject: string;
    /**
     * @description メールの本文
     * @example <p>下記の契約について、更新時期が近づきました。マニュアルに従って手続きを行ってください。<data value="fileUrl"></data></p><br><p>http://example.com</p>
     */
    body: string;
    /** @description 割り当てられた台帳のIDと台帳名 */
    ledger_tags: { [key: string]: unknown }[];
  };
  /** @description V2_OfficeConnectorUploadTargetMatterEntity model */
  V2_OfficeConnectorUploadTargetMatterEntity: {
    /** Format: int32 */
    matter_id?: number;
    title?: string;
  };
}

export interface operations {
  /** return project list with stats */
  getV2Project: {
    parameters: {
      query: {
        /** アサインを検索するuser_id */
        user_id?: number;
        /** プロジェクトのステータス, (default)live" */
        status?: "all" | "live" | "archived";
        /** ml_usage_typeの絞り込み, (default)all */
        ml_usage_type?: "all" | "out_of_scope" | "train" | "validation";
        /** user_type==supplierの時のみis_annotation_project=trueを表示可, nullの場合絞り込みなし example: "true / false / null" */
        is_annotation_project?: boolean;
        /** project.nameをlike検索 */
        q?: string;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** return project list with stats */
      200: {
        schema: definitions["V2_ProjectListWithStatsEntity"];
      };
    };
  };
  /** create project */
  postV2Project: {
    parameters: {
      formData: {
        /** プロジェクトの名前 */
        name: string;
        /** プロジェクトがアノテーション付与用のプロジェクトであるか否か */
        is_annotation_project: boolean;
        /** プロジェクトの開始日, example: "2018-01-01" */
        start_on?: string;
        /** プロジェクトの終了日, example: "2018-04-01" */
        end_on?: string;
        /** プロジェクトのステータス */
        status?: "live" | "archived";
        /** DDのタイプ, (default) full_scope */
        dd_type?: "full_scope" | "limited_scope";
      };
    };
    responses: {
      /** create project */
      201: {
        schema: definitions["V2_ProjectEntity"];
      };
    };
  };
  getV2ProjectProjectIdDocumentIds: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentIdListEntity"];
      };
    };
  };
  /** 次のquestion configを返す */
  getV2ProjectProjectIdQuestionConfigNext: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** 次のquestion configを返す */
      200: {
        schema: definitions["V2_QuestionConfigAnswerEntity"];
      };
    };
  };
  /** update project scheme */
  postV2ProjectProjectIdSetScheme: {
    parameters: {
      formData: {
        /** 株式譲渡スキームか？ */
        is_share_transfer: boolean;
        /** 出資スキームか？ */
        is_share_contribution: boolean;
        /** 合併スキームか？ */
        is_corporate_merger: boolean;
        /** 会社分割スキームか？ */
        is_corporate_division: boolean;
        /** 代表者の変更スキームか？ */
        is_change_of_representative: boolean;
        /** 商号の変更スキームか？ */
        is_change_of_tradename: boolean;
        /** 事業譲渡スキームか？ */
        is_business_transfer: boolean;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** update project scheme */
      201: unknown;
    };
  };
  /** return project */
  getV2ProjectProjectId: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** return project */
      200: {
        schema: definitions["V2_ProjectDetailEntity"];
      };
    };
  };
  /** update project */
  putV2ProjectProjectId: {
    parameters: {
      formData: {
        /** プロジェクトの名前 */
        name?: string;
        /** プロジェクトの開始日 */
        start_on?: string;
        /** プロジェクトの終了日 */
        end_on?: string;
        /** プロジェクトがアノテーション付与用のプロジェクトであるか否か */
        is_annotation_project?: boolean;
        /** プロジェクトのステータス */
        status?: string;
        /** DDのタイプ(full_scope(default) / limited_scope) */
        dd_type?: string;
        /** プロジェクトの用途(out_of_scope(default) / train / validation) */
        ml_usage_type?: string;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** update project */
      200: unknown;
    };
  };
  /** index admin_email_notifications */
  getV2ProjectProjectIdAdminEmailNotification: {
    parameters: {
      query: {
        /** お知らせ通知メールのタイプ */
        notification_type?: "danger_annotation_detected";
        /** お知らせ通知メールの状態 */
        state?:
          | "manual_sent"
          | "auto_sent"
          | "suspended"
          | "wait_for_send"
          | "wont_send";
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** index admin_email_notifications */
      200: {
        schema: definitions["V2_AdminEmailNotificationEntity"][];
      };
    };
  };
  /** suspend admin_email_notification */
  postV2ProjectProjectIdAdminEmailNotificationAdminEmailNotificationIdSuspend: {
    parameters: {
      path: {
        /** お知らせ通知メールID */
        admin_email_notification_id: number;
        project_id: number;
      };
    };
    responses: {
      /** suspend admin_email_notification */
      201: {
        schema: definitions["V2_AdminEmailNotificationEntity"];
      };
    };
  };
  /** send admin_email_notification */
  postV2ProjectProjectIdAdminEmailNotificationAdminEmailNotificationIdSend: {
    parameters: {
      path: {
        /** お知らせ通知メールID */
        admin_email_notification_id: number;
        project_id: number;
      };
    };
    responses: {
      /** send admin_email_notification */
      201: {
        schema: definitions["V2_AdminEmailNotificationEntity"];
      };
    };
  };
  /** cannot_openなドキュメントの一括復号化を試みる */
  postV2ProjectProjectIdDocumentDecrypt: {
    parameters: {
      formData: {
        password: string;
        document_tree_id?: number;
        /** 孫以降を含めるか */
        include_sub_dirs?: boolean;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** cannot_openなドキュメントの一括復号化を試みる */
      201: unknown;
    };
  };
  getV2ProjectProjectIdDocument: {
    parameters: {
      query: {
        /** 取得したいdocumentのid。複数指定の場合はカンマ区切りで指定する */
        document_ids?: string;
        /** 取得したいサブツリーの起点。nilならroot(project)が起点となる */
        target_document_tree_id?: number;
        /** documentsをフィルタするセクション名。カンマ(,)区切りで複数指定可 */
        section_type?: string;
        /** documentsをフィルタする契約類型 / identifierのstringを受ける。カンマ(,)区切りで複数指定可 */
        contract_type?: string;
        /** documentsをフィルタする追加日の期間指定（from）。 yyyy-mm-dd */
        created_at_from?: string;
        /** documentsをフィルタする追加日の期間指定（to)。 yyyy-mm-dd */
        created_at_to?: string;
        /** analyze_job.result_typeから選んでカンマ区切りで指定する */
        analyze_result_types?: string;
        /** post-OCRの解析状況で絞り込み. all(default), todo, doneの3つが指定可能 */
        post_ocr_status?: "all" | "todo" | "done";
        /** テキスト抽出/PDF・html化のジョブが完了しているかで絞り込み. all(default), todo, doneの3つが指定可能 */
        translate_status?: "all" | "todo" | "done";
        /** 締結版か否か */
        is_final_version?: boolean;
        /** 解析状態での絞り込み */
        filter?:
          | "all"
          | "normal"
          | "unreadable"
          | "failure"
          | "normal_or_unreadable";
        /** レスポンスの種類 */
        response_type?: "full" | "minimum";
        /** response_type が minimum の時のみ有効な選択肢。パス情報を取得するか。response_type が full のときは、入力に依らずに取得する */
        with_ancestor_paths?: boolean;
        /** 並び替えの方式 tree, created_at */
        sort_by?: "tree" | "created_at";
        /** 昇順or降順指定 */
        sort_option?: "desc" | "asc";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** プロジェクトのドキュメント件数情報を一緒に出力するか否か */
        with_counts?: boolean;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentListWithExtendedStatsEntity"];
      };
    };
  };
  deleteV2ProjectProjectIdDocument: {
    parameters: {
      query: {
        /** comma separated ids */
        ids: string;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DeletedItemListEntity"];
      };
    };
  };
  getV2ProjectProjectIdDocumentDocumentId: {
    parameters: {
      query: {
        /** 用途 */
        usage_type?: "normal" | "annotation";
        /** レスポンスの種類 */
        response_type?: "full" | "minimum";
      };
      path: {
        project_id: number;
        document_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentDetailForMaEntity"];
      };
    };
  };
  /** Update document */
  putV2ProjectProjectIdDocumentDocumentId: {
    parameters: {
      path: {
        /** projectのid */
        project_id: number;
        /** documentのid */
        document_id: number;
      };
      formData: {
        /** （supplier only）documentsのtitle */
        title?: string;
        /** documentsの終期定めなし */
        is_non_fixed_contract_term?: boolean;
        /** textの中身 */
        content_body?: string;
        /** メモ */
        note?: string;
        /** （supplier only）ページ数 */
        page_num?: string;
        /** 締結版か否か */
        is_final_version?: boolean;
        /** 外部参照情報。MNTSQ外の客先システムのIDなど。 */
        external_reference_info?: string;
        /** 外部参照リンク */
        external_service_url?: string;
        /** （supplier only）OCRの精度が低い場合true */
        is_ocr_poor_quality?: boolean;
        /** （supplier only）言語 */
        language?: string;
        /** ファイル名 */
        file_name_label?: string;
        /** 言語 */
        language_for_search?: "ja" | "en" | "zh" | "other";
        transaction_amount_annotation_id?: number;
        /** ステータス */
        status?: "available" | "unavailable";
        /** 目的 */
        purpose?: string;
        /** （supplier only）ドキュメント作成日時(例: 2023-12-21 10:00:00) */
        created_at_for_search?: string;
      };
    };
    responses: {
      /** Update document */
      200: {
        schema: definitions["V2_DocumentDetailEntity"];
      };
    };
  };
  /** Delete document */
  deleteV2ProjectProjectIdDocumentDocumentId: {
    parameters: {
      path: {
        project_id: number;
        document_id: number;
      };
    };
    responses: {
      /** Delete document */
      204: never;
    };
  };
  getV2ProjectProjectIdDocumentCount: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_CountStatsEntity"];
      };
    };
  };
  getV2ProjectProjectIdExecutionDateInfo: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentExecutionDateRateEntity"];
      };
    };
  };
  postV2ProjectProjectIdSetCreatedAtForSearchWithTika: {
    parameters: {
      formData: {
        /** 対象とするディレクトリのid */
        document_tree_id?: number;
        /** 処理バッチの分割サイズ */
        batch_size?: number;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_DocumentTikaEntity"];
      };
    };
  };
  postV2ProjectProjectIdTryDecryptDocumentsByPasswords: {
    parameters: {
      formData: {
        /** パスワードの改行区切りのファイル。フォーマットは fixtures/pass-doc_tree.tsv 参照 */
        tsv_file?: unknown;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_DocumentTikaEntity"];
      };
    };
  };
  getV2ProjectProjectIdAnnotation: {
    parameters: {
      path: {
        /** projectのid */
        project_id: number;
      };
      query: {
        /** documentのidでフィルタ */
        document_id?: number;
        /** 所属しているドキュメントのsectionでフィルタ。カンマ(,)区切りで複数指定可 */
        section_type?: string;
        /** 所属しているドキュメントの契約類型でフィルタ。カンマ(,)区切りで複数指定可 */
        contract_type?: string;
        /** 所属しているドキュメントのアノテーション類型でフィルタ。カンマ(,)区切りで複数指定可 */
        annotation_type?: string;
        /** 危険条項のみ, 基本情報のみを取得するためのフィルタ。all/basic/danger(default) で指定する */
        filter?: string;
        /** アノテーションの深刻さ。指定レベル以上のものを返す。低いものから info -> alert(default) */
        severity_level?: string;
        /** 自動アノテーションかそうではないか */
        auto_detect?: boolean;
        /** 検索クエリ。検索対象はfulltext, document_comment */
        q?: string;
        /** created_at, annotation_type, treeのソート順指定 */
        sort_by?: "created_at" | "annotation_type" | "tree";
        /** 昇順or降順指定。defaultはdesc */
        sort_option?: "desc" | "asc";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** お知らせ通知メールID */
        admin_email_notification_id?: number;
        /** 用途 */
        usage_type?: "normal" | "annotation" | "analyze";
        /** is_hiddenによる絞り込み。全件(all) / 通常(visible, default) / 非表示のみ(hidden) */
        visibility_status?: "all" | "visible" | "hidden";
      };
    };
    responses: {
      200: {
        schema: definitions["V2_AnnotationListEntity"];
      };
    };
  };
  /** get document annotations */
  getV2ProjectProjectIdDocumentDocumentIdAnnotation: {
    parameters: {
      query: {
        /** 危険条項のみ, 基本情報のみを取得するためのフィルタ。all/basic/danger(default) で指定する */
        filter?: "all" | "basic" | "danger";
        /** 用途 */
        usage_type?: "normal" | "annotation" | "analyze";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
      path: {
        project_id: number;
        document_id: number;
      };
    };
    responses: {
      /** get document annotations */
      200: {
        schema: definitions["V2_AnnotationListEntity"];
      };
    };
  };
  /** get subtree */
  getV2ProjectProjectIdDocumentTree: {
    parameters: {
      query: {
        /** ほしいサブツリーの起点. nilならrootを返す */
        target_document_tree_id?: number;
        /** analyze_job.result_typeから選んでカンマ区切りで指定する */
        analyze_result_types?: string;
        /** documentsをフィルタするセクション名。カンマ区切りで複数指定可能 */
        section_type?: string;
        /** documentsをフィルタする契約類型 / identifierのstringを受ける。カンマ区切りで複数指定可能 */
        contract_type?: string;
        /** post-OCRの解析状況で絞り込み. all(default), todo, doneの3つが指定可能 */
        post_ocr_status?: "all" | "todo" | "done";
        /** テキスト抽出/PDF・html化のジョブが完了しているかで絞り込み. all(default), todo, doneの3つが指定可能 */
        translate_status?: "all" | "todo" | "done";
        /** 並び替えの方式 tree, created_at */
        sort_by?: "tree" | "created_at";
        /** 並び順の指定. desc, asc */
        sort_option?: "desc" | "asc";
        /** documentsをフィルタする追加日の期間指定（from）。 yyyy-mm-dd */
        created_at_from?: string;
        /** documentsをフィルタする追加日の期間指定（to)。 yyyy-mm-dd */
        created_at_to?: string;
        /** 解析状態での絞り込み */
        filter?: "all" | "normal" | "unreadable" | "failure";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** プロジェクトのドキュメント件数情報を一緒に出力するか否か (forMAでのみtrueにすることがある。CLMではtrueにすることはない) */
        with_counts?: boolean;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** get subtree */
      200: {
        schema: definitions["V2_DocumentTreeWithStatsEntity"];
      };
    };
  };
  /** create document tree */
  postV2ProjectProjectIdDocumentTree: {
    parameters: {
      formData: {
        /** 新規作成するフォルダーの名前 */
        directory_name: string;
        /** 親ディレクトリ。nilならroot */
        parent_directory_id?: number;
        /** 重複した場合の解決オプション */
        resolve_conflict?: "ignore" | "rename";
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** create document tree */
      201: {
        schema: definitions["V2_DocumentTreeMinimumEntity"];
      };
    };
  };
  /** get directory_tree */
  getV2ProjectProjectIdDocumentTreeDocumentTreeId: {
    parameters: {
      query: {
        /** 権限情報を付与するか */
        with_permission_info?: boolean;
      };
      path: {
        project_id: number;
        document_tree_id: number;
      };
    };
    responses: {
      /** get directory_tree */
      200: {
        schema: definitions["V2_DocumentTreeWithPathEntity"];
      };
    };
  };
  /** update directory_tree */
  putV2ProjectProjectIdDocumentTreeDocumentTreeId: {
    parameters: {
      formData: {
        /** renameの名称 */
        name: string;
      };
      path: {
        project_id: number;
        document_tree_id: number;
      };
    };
    responses: {
      /** update directory_tree */
      200: unknown;
    };
  };
  /** delete document_tree */
  deleteV2ProjectProjectIdDocumentTreeDocumentTreeId: {
    parameters: {
      path: {
        project_id: number;
        document_tree_id: number;
      };
    };
    responses: {
      /** delete document_tree */
      204: never;
    };
  };
  /** move directory_tree */
  postV2ProjectProjectIdDocumentTreeDocumentTreeIdMove: {
    parameters: {
      formData: {
        /** 親ディレクトリのdocument_tree_id / "null" */
        parent_directory_id: string;
        /** 重複した場合の解決オプション */
        resolve_conflict?: "ignore" | "rename";
      };
      path: {
        project_id: number;
        document_tree_id: number;
      };
    };
    responses: {
      /** move directory_tree */
      201: unknown;
    };
  };
  /** check before update directory_tree */
  getV2ProjectProjectIdDocumentTreeDocumentTreeIdIsMatterDir: {
    parameters: {
      path: {
        project_id: number;
        document_tree_id: number;
      };
    };
    responses: {
      /** check before update directory_tree */
      200: {
        schema: definitions["V2_DocumentTreeIsMatterDirEntity"];
      };
    };
  };
  /** list directory map (forMAのみで有効。同等のことをしたい場合は GET /api/v2/document_tree/directory_children を利用してください) */
  getV2ProjectProjectIdDocumentTreeMap: {
    parameters: {
      query: {
        /** ほしいサブツリーの起点. nilならrootを返す */
        target_document_tree_id?: number;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** list directory map (forMAのみで有効。同等のことをしたい場合は GET /api/v2/document_tree/directory_children を利用してください) */
      200: {
        schema: definitions["V2_DocumentTreeDirectoryMapEntity"][];
      };
    };
  };
  /** reset question_configs answer */
  postV2ProjectProjectIdQuestionConfigReset: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** reset question_configs answer */
      204: never;
    };
  };
  /** bulk create questions from question_configs */
  postV2ProjectProjectIdQuestionConfigRender: {
    parameters: {
      path: {
        project_id: number;
      };
    };
    responses: {
      /** bulk create questions from question_configs */
      201: unknown;
    };
  };
  /** answer question config */
  postV2ProjectProjectIdQuestionConfigAnswer: {
    parameters: {
      formData: {
        /** QuestionConfigのId */
        question_config_id: number;
        /** 回答テキスト */
        answer?: string;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** answer question config */
      201: {
        schema: definitions["V2_QuestionConfigEntity"];
      };
    };
  };
  /** create target_company */
  postV2ProjectProjectIdTargetCompany: {
    parameters: {
      path: {
        /** projectのID */
        project_id: number;
      };
      formData: {
        /** 資本関係 */
        capital_relationship?: string;
        /** 会社種別 */
        company_type: string;
        /** 完全保有か否か */
        is_wholly_owned?: boolean;
        /** 上場会社か否か */
        is_listed_company?: boolean;
        /** 公開会社か否か */
        is_public_company?: boolean;
        /** 取締役会設置会社か否か */
        with_board_of_directors?: boolean;
        /** 監査役会設置会社か否か */
        with_board_of_auditors?: boolean;
        /** 管理対象会社名称の配列 */
        "company_names[]"?: string[];
      };
    };
    responses: {
      /** create target_company */
      201: {
        schema: definitions["V2_TargetCompanyEntity"];
      };
    };
  };
  /** update target_company */
  putV2ProjectProjectIdTargetCompanyTargetCompanyId: {
    parameters: {
      path: {
        /** projectのID */
        project_id: number;
        /** 会社種別の管理ID */
        target_company_id: number;
      };
      formData: {
        /** 資本関係 */
        capital_relationship?: string;
        /** 会社種別 */
        company_type?: string;
        /** 完全保有か否か */
        is_wholly_owned?: boolean;
        /** 上場会社か否か */
        is_listed_company?: boolean;
        /** 公開会社か否か */
        is_public_company?: boolean;
        /** 取締役会設置会社か否か */
        with_board_of_directors?: boolean;
        /** 監査役会設置会社か否か */
        with_board_of_auditors?: boolean;
        /** 管理対象会社名称の配列 */
        "company_names[]"?: string[];
      };
    };
    responses: {
      /** update target_company */
      200: {
        schema: definitions["V2_TargetCompanyEntity"];
      };
    };
  };
  /** delete target_company */
  deleteV2ProjectProjectIdTargetCompanyTargetCompanyId: {
    parameters: {
      path: {
        project_id: number;
        target_company_id: number;
      };
    };
    responses: {
      /** delete target_company */
      204: never;
    };
  };
  /** Return issue_tree list */
  getV2ProjectProjectIdIssueTree: {
    parameters: {
      query: {
        /** issue_treeをフィルタするセクション名。複数指定不可 */
        section:
          | "organization"
          | "shareholder"
          | "intergroup"
          | "standalone"
          | "ma"
          | "assets"
          | "ip"
          | "business"
          | "finance"
          | "humanresource"
          | "litigation"
          | "compliance"
          | "na";
        /** checklistsとdraft_samples_countを含むか */
        is_reference_mode?: boolean;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** Return issue_tree list */
      200: {
        schema: definitions["V2_SerializedIssueTreeListEntity"][];
      };
    };
  };
  /** bulk update for ordering issue_tree */
  putV2ProjectProjectIdIssueTree: {
    parameters: {
      formData: {
        /** issue_treeをフィルタするセクション名。複数指定不可 */
        section:
          | "organization"
          | "shareholder"
          | "intergroup"
          | "standalone"
          | "ma"
          | "assets"
          | "ip"
          | "business"
          | "finance"
          | "humanresource"
          | "litigation"
          | "compliance"
          | "na";
        /** issue_treeのid */
        "issue_trees[][id]": number[];
        /** issue_treeのchildren */
        "issue_trees[][children][]": string[];
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** bulk update for ordering issue_tree */
      200: {
        schema: definitions["V2_SerializedIssueTreeListEntity"][];
      };
    };
  };
  /** Search issue_tree list */
  getV2ProjectProjectIdIssueTreeSearch: {
    parameters: {
      query: {
        /** 検索文字列 (スペース区切りでAND検索) */
        q: string;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** Search issue_tree list */
      200: {
        schema: definitions["V2_SerializedIssueTreeListEntity"][];
      };
    };
  };
  /** Import issue_tree */
  postV2ProjectProjectIdIssueTreeImport: {
    parameters: {
      path: {
        /** projectのid */
        project_id: number;
      };
    };
    responses: {
      /** Import issue_tree */
      201: unknown;
    };
  };
  /** Get issue_tree */
  getV2ProjectProjectIdIssueTreeIssueTreeId: {
    parameters: {
      path: {
        /** projectのid */
        project_id: number;
        /** issue_treeのid */
        issue_tree_id: number;
      };
    };
    responses: {
      /** Get issue_tree */
      200: {
        schema: definitions["V2_IssueTreeEntity"];
      };
    };
  };
  /** question list */
  getV2ProjectProjectIdQuestion: {
    parameters: {
      query: {
        /** インタビューするか否かで絞り込み */
        is_interview?: boolean;
        /** question_textとanswer_textから検索 */
        keyword?: string;
        /** priorityで絞り込み. low / middle / high */
        rendered_priority?: string;
        /** statusで絞り込み. draft / under_review / reviewed / sent / replied / closed */
        status?: string;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** question list */
      200: {
        schema: definitions["V2_QuestionEntity"][];
      };
    };
  };
  /** create question */
  postV2ProjectProjectIdQuestion: {
    parameters: {
      formData: {
        /** インタビューするか否か. (default)false */
        is_interview?: boolean;
        /** セクション名 */
        section_type?: string;
        /** 質問文 */
        question_text: string;
        /** 説明文 */
        caption_message?: string;
        /** rendered_priority. low / middle(default) / high */
        rendered_priority?: string;
        /** status. draft(default) / under_review / reviewed / sent / replied / closed */
        status?: string;
      };
      path: {
        project_id: number;
      };
    };
    responses: {
      /** create question */
      201: {
        schema: definitions["V2_QuestionEntity"];
      };
    };
  };
  /** update question */
  putV2ProjectProjectIdQuestionQuestionId: {
    parameters: {
      formData: {
        /** インタビューするか否か. (default)false */
        is_interview?: boolean;
        /** セクション名 */
        section_type?: string;
        /** 質問文 */
        question_text?: string;
        /** 説明文 */
        caption_message?: string;
        /** 回答内容 */
        answer_text?: string;
        /** rendered_priority. low / middle(default) / high */
        rendered_priority?: string;
        /** status. draft(default) / under_review / reviewed / sent / replied / closed */
        status?: string;
      };
      path: {
        project_id: number;
        question_id: number;
      };
    };
    responses: {
      /** update question */
      200: {
        schema: definitions["V2_QuestionEntity"];
      };
    };
  };
  /** return document_emails under document_tree(directory only) */
  getV2ProjectProjectIdDocumentTreeDocumentTreeIdDocumentEmail: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** EメールID。指定時、対象Eメールが含まれるページを返す。 */
        document_email_id?: number;
      };
      path: {
        project_id: number;
        document_tree_id: number;
      };
    };
    responses: {
      /** return document_emails under document_tree(directory only) */
      200: {
        schema: definitions["V2_DocumentEmailListWithStatsEntity"];
      };
    };
  };
  /** (supplier only)documentの権限キャッシュクリア・再indexing */
  postV2DocumentRefreshCacheAndIndex: {
    parameters: {
      formData: {
        /** キャッシュクリア・再indexingするドキュメントID(複数指定可) */
        "document_ids[]": number[];
      };
    };
    responses: {
      /** (supplier only)documentの権限キャッシュクリア・再indexing */
      204: never;
    };
  };
  postV2DocumentSetFinalVersionForTrial: {
    parameters: {
      formData: {
        project_id: number;
        /** 対象フォルダ */
        document_tree_id?: number;
        /** document_id直接指定。カンマ区切り */
        document_ids?: string;
      };
    };
    responses: {
      /** created SetFinalVersionForTrial */
      201: unknown;
    };
  };
  postV2DocumentSetCreatedAtForSearchForTrial: {
    parameters: {
      formData: {
        project_id: number;
        /** 対象フォルダ */
        document_tree_id?: number;
        /** document_id直接指定。カンマ区切り */
        document_ids?: string;
      };
    };
    responses: {
      /** created SetCreatedAtForSearchForTrial */
      201: unknown;
    };
  };
  postV2DocumentCancelDecryptDocumentsByPasswords: {
    responses: {
      204: never;
    };
  };
  /** 旧Job環境で「よしなに」rerun してくれる API、新Job環境では利用できない */
  postV2DocumentYoshinaRerun: {
    parameters: {
      formData: {
        /** 本当に実行しますか */
        force_execute: boolean;
        document_tree_id?: number;
      };
    };
    responses: {
      /** 旧Job環境で「よしなに」rerun してくれる API、新Job環境では利用できない */
      204: never;
    };
  };
  /** 旧Job環境における rerun API、新Job環境では利用できない */
  postV2DocumentRerun: {
    parameters: {
      formData: {
        /** rerunするプロセスタイプフェーズ */
        process_type:
          | "translate"
          | "pre_ocr"
          | "ocr"
          | "post_ocr"
          | "annotate"
          | "post_annotate";
        /** pj id */
        project_id?: string;
        /** カンマ区切り */
        document_ids?: string;
        /** カンマ区切り */
        contract_types?: string;
        /** 件数警告を無視してrerunするか？ */
        force_rerun?: boolean;
      };
    };
    responses: {
      /** 旧Job環境における rerun API、新Job環境では利用できない */
      201: {
        schema: definitions["V2_DocumentRerunEntity"];
      };
    };
  };
  postV2DocumentSetFinalVersion: {
    parameters: {
      formData: {
        /** 最終版に指定するdocumentのid。スペース区切り */
        document_ids: string;
      };
    };
    responses: {
      201: unknown;
    };
  };
  /** 既にアップロードしてあるドキュメントの自社雛型への登録・解除。雛型にすると共有メモが編集できなくなる点にご注意ください */
  putV2DocumentUpdateCreditTitle: {
    parameters: {
      formData: {
        /** 対象ドキュメントのIDの配列 */
        "document_ids[]": number[];
        /** ドキュメントタイプの更新先 */
        credit_title:
          | "not_contract_template"
          | "user_defined"
          | "outdated_user_defined";
      };
    };
    responses: {
      /** 既にアップロードしてあるドキュメントの自社雛型への登録・解除。雛型にすると共有メモが編集できなくなる点にご注意ください */
      200: unknown;
    };
  };
  getV2Document: {
    parameters: {
      formData: {
        /** 取得したいdocumentのid */
        "document_ids[]"?: number[];
      };
      query: {
        /** 取得したいサブツリー */
        target_document_tree_id?: number;
        /** パス情報を取得するか。response_type が full のときは、入力に依らずに取得する */
        with_ancestor_paths?: boolean;
        /** 並び替えの方式 tree, created_at */
        sort_by?: "tree" | "created_at";
        /** 昇順or降順指定 */
        sort_option?: "desc" | "asc";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentListWithStatsEntity"];
      };
    };
  };
  /** 初期の行データを生成 */
  postV2DocumentDocumentIdGenerateClauseStructure: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** 初期の行データを生成 */
      204: never;
    };
  };
  getV2DocumentDocumentIdLedgerInfo: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_LedgerInfoEntity"];
      };
    };
  };
  putV2DocumentDocumentIdLedgerCustomColumnValue: {
    parameters: {
      formData: {
        "ledger_custom_columns[][id]": number[];
        "ledger_custom_columns[][value]"?: string[];
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      200: unknown;
    };
  };
  getV2DocumentDocumentIdPublicFavoriteItems: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentPublicFavoriteItemListWithStatsEntity"];
      };
    };
  };
  getV2DocumentDocumentIdIsMntsqEnModuleTarget: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentIsMntsqEnModuleTargetEntity"];
      };
    };
  };
  /** document_content */
  getV2DocumentDocumentIdDocumentContent: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** document_content */
      200: {
        schema: definitions["V2_DocumentContentEntity"];
      };
    };
  };
  getV2DocumentDocumentId: {
    parameters: {
      query: {
        /** 用途 */
        usage_type?: "normal" | "annotation" | "analyze" | "auto_suggestion";
        /** レスポンスの種類 */
        response_type?: "full" | "minimum";
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_DocumentDetailEntity"];
      };
    };
  };
  postV2DocumentDocumentIdReviewLog: {
    parameters: {
      formData: {
        /** レビュー対象となる、台帳タグのID */
        ledger_tag_id: number;
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  /** edit analyze job */
  putV2DocumentDocumentIdAnalyzeJobAnalyzeJobId: {
    parameters: {
      path: {
        /** documentのid */
        document_id: number;
        /** analyze_jobのid */
        analyze_job_id: number;
      };
      formData: {
        /** pre_ocrが開始した日時 */
        pre_ocr_started_at?: string;
        /** pre_ocrが終わった時刻 */
        pre_ocr_finished_at?: string;
        /** pre_ocrを行ったjobのUUID */
        pre_ocr_process_id?: string;
        /** pre_ocrジョブプロセスの結果 */
        pre_ocr_result_message?: string;
        /** ocrが開始した日時 */
        ocr_started_at?: string;
        /** ocrが終わった時刻 */
        ocr_finished_at?: string;
        /** ocrを行ったjobのUUID */
        ocr_process_id?: string;
        /** ocrジョブプロセスの結果 */
        ocr_result_message?: string;
        /** post_ocrが開始した日時 */
        post_ocr_started_at?: string;
        /** post_ocrが終わった時刻 */
        post_ocr_finished_at?: string;
        /** post_ocrを行ったjobのUUID */
        post_ocr_process_id?: string;
        /** post_ocrジョブプロセスの結果 */
        post_ocr_result_message?: string;
        /** annotateが開始した日時 */
        annotate_started_at?: string;
        /** annotateが終わった時刻 */
        annotate_finished_at?: string;
        /** annotateを行ったjobのUUID */
        annotate_process_id?: string;
        /** annotateジョブプロセスの結果 */
        annotate_result_message?: string;
        /** post_annotateが開始した日時 */
        post_annotate_started_at?: string;
        /** post_annotateが終わった時刻 */
        post_annotate_finished_at?: string;
        /** post_annotateを行ったjobのUUID */
        post_annotate_process_id?: string;
        /** post_annotateジョブプロセスの結果 */
        post_annotate_result_message?: string;
        /** 結果のタイプ */
        result_type?: string;
        /** OCR処理をskipしたか？ */
        is_ocr_skipped?: boolean;
      };
    };
    responses: {
      /** edit analyze job */
      200: unknown;
    };
  };
  /** create annotation */
  postV2DocumentDocumentIdAnnotation: {
    parameters: {
      path: {
        document_id: number;
      };
      formData: {
        annotation_type: string;
        existence_type: string;
        user_id?: string;
        details?: string;
        auto_detect: boolean;
        "source_texts_attributes[][description]": string[];
        "source_texts_attributes[][source_text]"?: string[];
        "party_identification_attributes[client_master_id]": number;
        "party_identification_attributes[is_counterparty]": boolean;
        /** annotationの由来, mntsq(default) */
        data_source?:
          | "mntsq"
          | "operation_service"
          | "docusign"
          | "connectmail"
          | "cloudsign"
          | "gdrive";
        /** source_textを自動生成するかどうか automatic_renewal_period/notice_requirement_to_refuse_renewal のみ対応 */
        generate_source_text?: boolean;
      };
    };
    responses: {
      /** create annotation */
      201: unknown;
    };
  };
  /** 指定したannotationを全て削除する */
  deleteV2DocumentDocumentIdAnnotation: {
    parameters: {
      formData: {
        /** 削除するアノテーションID */
        "ids[]": number[];
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      /** 指定したannotationを全て削除する */
      204: never;
    };
  };
  /** Update annotation */
  putV2DocumentDocumentIdAnnotationAnnotationId: {
    parameters: {
      path: {
        document_id: number;
        annotation_id: number;
      };
      formData: {
        annotation_type?: string;
        existence_type?: string;
        severity?: string;
        user_id?: string;
        details?: string;
        auto_detect?: boolean;
        is_hidden?: boolean;
        /** annotationの由来, mntsq(default) */
        data_source?:
          | "mntsq"
          | "operation_service"
          | "docusign"
          | "connectmail"
          | "cloudsign"
          | "gdrive";
      };
    };
    responses: {
      /** Update annotation */
      200: unknown;
    };
  };
  /** Delete annotation */
  deleteV2DocumentDocumentIdAnnotationAnnotationId: {
    parameters: {
      path: {
        document_id: number;
        annotation_id: number;
      };
    };
    responses: {
      /** Delete annotation */
      204: never;
    };
  };
  /** return clause_tag hierarchy tree */
  getV2DocumentDocumentIdClauseTag: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** return clause_tag hierarchy tree */
      200: {
        schema: definitions["V2_ClauseTagEntity"][];
      };
    };
  };
  /** clause_structure */
  getV2DocumentDocumentIdClauseStructure: {
    parameters: {
      query: {
        /** paginationのper */
        per?: number;
        /** paginationのpage */
        page?: number;
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      /** clause_structure */
      200: {
        schema: definitions["V2_ClauseStructureListWithStatsEntity"];
      };
    };
  };
  /** update clause_structure */
  putV2DocumentDocumentIdClauseStructureClauseStructureId: {
    parameters: {
      formData: {
        /** 階層レベル. */
        hierarchy_level:
          | "keep"
          | "toc"
          | "title"
          | "foreword"
          | "zero"
          | "first_level"
          | "second_level"
          | "third_level"
          | "first_and_second_level"
          | "second_and_third_level"
          | "first_and_second_third_level"
          | "closing"
          | "signature";
        /** 別ドキュメントの開始地点. (default)false */
        is_new_document_begin?: boolean;
        /** 別紙の開始地点. (default)false */
        is_new_attachment_begin?: boolean;
        /** 別条項の開始地点. (default)false */
        is_newline_begin?: boolean;
        /** 条項号などの表記 */
        identifier_description?: string;
      };
      path: {
        document_id: number;
        clause_structure_id: number;
      };
    };
    responses: {
      /** update clause_structure */
      200: {
        schema: definitions["V2_ClauseStructureEntity"];
      };
    };
  };
  /** Delete document_related_document */
  deleteV2DocumentDocumentIdRelatedDocumentRelatedDocumentId: {
    parameters: {
      path: {
        document_id: number;
        related_document_id: number;
      };
    };
    responses: {
      /** Delete document_related_document */
      204: never;
    };
  };
  /** Get document notifications */
  getV2DocumentDocumentIdNotifications: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      /** Get document notifications */
      200: {
        schema: definitions["V2_NotificationListWithStatsEntity"];
      };
    };
  };
  postV2DocumentDocumentIdGoverningLawUpsert: {
    parameters: {
      formData: {
        /** 準拠法コード */
        "upsert_document_governing_laws[][governing_law_code]"?: string[];
        /** 準拠法コード */
        "delete_document_governing_laws[][governing_law_code]"?: string[];
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_DocumentGoverningLawEntity"][];
      };
    };
  };
  /** post document governing_law */
  postV2DocumentDocumentIdGoverningLaw: {
    parameters: {
      formData: {
        /** 準拠法コード */
        governing_law_code: string;
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      /** post document governing_law */
      201: {
        schema: definitions["V2_DocumentGoverningLawEntity"];
      };
    };
  };
  deleteV2DocumentDocumentIdGoverningLawGoverningLawCode: {
    parameters: {
      path: {
        document_id: number;
        governing_law_code: number;
      };
    };
    responses: {
      204: never;
    };
  };
  /** 対象ドキュメントのディスカッション（コメント）を一括登録する */
  postV2DocumentDocumentIdDiscussions: {
    parameters: {
      path: {
        document_id: number;
      };
      body: {
        post_body: definitions["postV2DocumentDocumentIdDiscussions"];
      };
    };
    responses: {
      /** 対象ドキュメントのディスカッション（コメント）を一括登録する */
      204: never;
    };
  };
  /** 書類の自動通知設定の取得 */
  getV2DocumentDocumentIdReminder: {
    parameters: {
      path: {
        document_id: number;
      };
    };
    responses: {
      /** 書類の自動通知設定の取得 */
      200: {
        schema: definitions["V2_LedgerTagPermissionFreeReminderEntity"][];
      };
    };
  };
  /** 書類への自動通知設定の追加 */
  postV2DocumentDocumentIdReminder: {
    parameters: {
      formData: {
        /** 通知基準日付の種別 */
        target_date_type: "expire_date" | "non_renewal_notice_deadline_date";
        /** 通知のリードタイムの値 */
        "lead_time[value]": number;
        /** 通知のリードタイムの単位 */
        "lead_time[unit]": "days" | "months" | "years";
        /** 通知メッセージの種別 */
        notification_message_text_type:
          | "renewal_deadline"
          | "disposal"
          | "other";
        /** 通知メモ */
        notification_note?: string;
        /** メールカスタム文章特定用の台帳ID */
        ledger_tag_id?: number;
        /** 通知の宛先ユーザーID */
        "remindee_ids[user_ids][]"?: number[];
        /** 通知の宛先ユーザーグループID */
        "remindee_ids[user_group_ids][]"?: number[];
      };
      path: {
        document_id: number;
      };
    };
    responses: {
      /** 書類への自動通知設定の追加 */
      201: {
        schema: definitions["V2_ReminderEntity"];
      };
    };
  };
  /** create section */
  postV2Section: {
    parameters: {
      formData: {
        document_id: number;
        /** セクション名 */
        section_type: string;
        /** ジョブによるものか？ */
        auto_detect?: boolean;
      };
    };
    responses: {
      /** create section */
      201: unknown;
    };
  };
  /** Delete section */
  deleteV2Section: {
    parameters: {
      query: {
        /** document id */
        document_id: string;
        /** セクション名 */
        section_type: string;
      };
    };
    responses: {
      /** Delete section */
      204: never;
    };
  };
  /** return if analyze_job remain or not */
  getV2AnalyzeJobLeft: {
    responses: {
      /** return if analyze_job remain or not */
      200: {
        schema: definitions["V2_AnalyzeJobLeftEntity"];
      };
    };
  };
  /** return analyze_job list */
  getV2AnalyzeJob: {
    parameters: {
      query: {
        /** projectのid */
        project_id?: number;
        /** documentのid */
        document_id?: number;
        /** プロセスタイプ。カンマ区切りで複数指定可 */
        process_type?: string;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** analyze_jobのソート順指定。defaultはupdated_at。 */
        sort_by?:
          | "id"
          | "document_id"
          | "pre_ocr_started_at"
          | "pre_ocr_finished_at"
          | "ocr_started_at"
          | "ocr_finished_at"
          | "post_ocr_started_at"
          | "post_ocr_finished_at"
          | "annotate_started_at"
          | "annotate_finished_at"
          | "post_annotate_started_at"
          | "post_annotate_finished_at"
          | "created_at"
          | "updated_at"
          | "pre_ocr_result_message"
          | "ocr_result_message"
          | "post_ocr_result_message"
          | "annotate_result_message"
          | "post_annotate_result_message"
          | "result_type";
        /** 昇順or降順指定。defaultはasc */
        sort_option?: "asc" | "desc";
        /** stats有無 */
        without_stats?: boolean;
        /** ソート指定有無 */
        without_sort?: boolean;
        /** 削除対象も含めるか */
        with_in_delete_queue?: boolean;
      };
    };
    responses: {
      /** return analyze_job list */
      200: {
        schema: definitions["V2_AnalyzeJobListWithStatsEntity"];
      };
    };
  };
  /** get analyze_job */
  getV2AnalyzeJobAnalyzeJobId: {
    parameters: {
      path: {
        analyze_job_id: number;
      };
    };
    responses: {
      /** get analyze_job */
      200: {
        schema: definitions["V2_AnalyzeJobEntity"];
      };
    };
  };
  /** return analyze_job left_count */
  getV2AnalyzeJobLeftCount: {
    parameters: {
      query: {
        /** projectのid */
        project_id: number;
        type?:
          | "all"
          | "pre_ocr"
          | "ocr"
          | "post_ocr"
          | "annotate"
          | "post_annotate";
      };
    };
    responses: {
      /** return analyze_job left_count */
      200: {
        schema: definitions["V2_AnalyzeJobLeftCountEntity"];
      };
    };
  };
  getV2AnnotationOptionGroup: {
    responses: {
      200: {
        schema: definitions["V2_AnnotationTypeOptionGroupEntity"][];
      };
    };
  };
  /** return annotation list with stats */
  getV2Annotation: {
    parameters: {
      query: {
        /**
         * auto_detectによる絞り込み。全件(all,default) / \
         *             trueのみ(machine) / falseのみ(user)
         */
        auto_detect_status?: "all" | "machine" | "user";
        /**
         * is_hiddenによる絞り込み。全件(all) / 通常(visible, default) / \
         *             非表示のみ(hidden)
         */
        visibility_status?: "all" | "visible" | "hidden";
        /** paginationのper */
        per?: number;
        /** paginationのpage */
        page?: number;
        /** projectのid */
        project_id?: number;
      };
    };
    responses: {
      /** return annotation list with stats */
      200: {
        schema: definitions["V2_AnnotationListWithStatsEntity"];
      };
    };
  };
  getV2AnnotationAnnotationId: {
    parameters: {
      query: {
        /** 用途 */
        usage_type?: "normal" | "annotation";
      };
      path: {
        annotation_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_AnnotationEntity"];
      };
    };
  };
  /** update source_text */
  putV2AnnotationAnnotationIdSourceTextSourceTextId: {
    parameters: {
      path: {
        annotation_id: number;
        source_text_id: number;
      };
      formData: {
        description: string;
        source_text?: string;
      };
    };
    responses: {
      /** update source_text */
      200: unknown;
    };
  };
  /** delete source_text */
  deleteV2AnnotationAnnotationIdSourceTextSourceTextId: {
    parameters: {
      path: {
        annotation_id: number;
        source_text_id: number;
      };
    };
    responses: {
      /** delete source_text */
      204: never;
    };
  };
  /** update inner_review_status */
  putV2AnnotationAnnotationIdInnerReviewStatusInnerReviewStatusId: {
    parameters: {
      formData: {
        should_be_excluded_from_training?: boolean;
        should_be_excluded_from_validation?: boolean;
        review_for_clause_extraction?:
          | "to_be_reviewed"
          | "correct"
          | "wrong"
          | "undecidable";
        review_for_annotation_type?:
          | "to_be_reviewed"
          | "correct"
          | "wrong"
          | "undecidable";
        review_for_coc_trigger?:
          | "to_be_reviewed"
          | "correct"
          | "wrong"
          | "undecidable";
        review_for_coc_effect?:
          | "to_be_reviewed"
          | "correct"
          | "wrong"
          | "undecidable";
        review_for_details?:
          | "to_be_reviewed"
          | "correct"
          | "wrong"
          | "undecidable";
        review_for_other?:
          | "to_be_reviewed"
          | "correct"
          | "wrong"
          | "undecidable";
      };
      path: {
        annotation_id: number;
        inner_review_status_id: number;
      };
    };
    responses: {
      /** update inner_review_status */
      200: {
        schema: definitions["V2_InnerReviewStatusEntity"];
      };
    };
  };
  /** auth_info_csv_jobを実行する */
  postV2AuthInfoCsvBatchLogExecuteJob: {
    parameters: {
      formData: {
        /** 実行内容を選択 */
        execute_type: "check" | "check_and_save";
      };
    };
    responses: {
      /** auth_info_csv_jobを実行する */
      201: unknown;
    };
  };
  /** return auth_info_csv_batch_log list */
  getV2AuthInfoCsvBatchLog: {
    responses: {
      /** return auth_info_csv_batch_log list */
      200: {
        schema: definitions["V2_AuthInfoCsvBatchLogEntity"][];
      };
    };
  };
  /** return auth_info_csv_batch_notification_email list */
  getV2AuthInfoCsvBatchNotificationEmail: {
    responses: {
      /** return auth_info_csv_batch_notification_email list */
      200: {
        schema: definitions["V2_AuthInfoCsvBatchNotificationEmailEntity"][];
      };
    };
  };
  /** auth_info_csv_batch_notification_emailを追加する */
  postV2AuthInfoCsvBatchNotificationEmail: {
    parameters: {
      formData: {
        /** 通知送信先 email */
        email: string;
      };
    };
    responses: {
      /** auth_info_csv_batch_notification_emailを追加する */
      201: unknown;
    };
  };
  /** auth_info_csv_batch_notification_emailを削除する */
  deleteV2AuthInfoCsvBatchNotificationEmailId: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** auth_info_csv_batch_notification_emailを削除する */
      204: never;
    };
  };
  /** judge authentication type */
  getV2AuthenticationAuthenticationType: {
    responses: {
      /** judge authentication type */
      200: {
        schema: definitions["V2_AuthenticationTypeEntity"];
      };
    };
  };
  /** authenticate user and return user info */
  postV2Authentication: {
    parameters: {
      formData: {
        /** user email */
        email: string;
        /** user password */
        password: string;
      };
    };
    responses: {
      /** authenticate user and return user info */
      201: unknown;
      /** ログインに失敗しました */
      401: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** ログアウトAPI */
  deleteV2Authentication: {
    responses: {
      /** 正常に破棄された */
      204: never;
      /** セッションがない */
      401: unknown;
    };
  };
  /** logout処理 */
  getV2AuthenticationSamlIdpKeyProcessSignOut: {
    parameters: {
      path: {
        idp_key: number;
      };
    };
    responses: {
      /** logout処理 */
      200: unknown;
    };
  };
  /** MNTSQ内からのサインアウトリクエスト */
  getV2AuthenticationSamlIdpKeySignOut: {
    parameters: {
      path: {
        idp_key: number;
      };
    };
    responses: {
      /** MNTSQ内からのサインアウトリクエスト */
      200: unknown;
    };
  };
  /** IDPからのmetadata問い合わせ */
  getV2AuthenticationSamlIdpKeyMetadata: {
    parameters: {
      path: {
        idp_key: number;
      };
    };
    responses: {
      /** IDPからのmetadata問い合わせ */
      200: unknown;
    };
  };
  /** IDPからのログイン時コールバック受付 */
  postV2AuthenticationSamlIdpKeyConsume: {
    parameters: {
      path: {
        idp_key: number;
      };
    };
    responses: {
      /** IDPからのログイン時コールバック受付 */
      201: unknown;
    };
  };
  /** IDPの認証画面に遷移 */
  getV2AuthenticationSamlIdpKeyInit: {
    parameters: {
      query: {
        /** ログイン後のリダイレクト先 */
        redirect?: string;
        /** Trueの場合は認証画面のURLを返し、リダイレクトは行わない */
        noredirect?: boolean;
      };
      path: {
        idp_key: number;
      };
    };
    responses: {
      /** IDPの認証画面に遷移 */
      200: unknown;
    };
  };
  postV2UserExportList: {
    responses: {
      201: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  /** get user info */
  getV2UserMe: {
    responses: {
      /** get user info */
      200: {
        schema: definitions["V2_UserMeEntity"];
      };
      /** ログイン情報がありません。再度ログインをお試しください */
      401: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** Update session user */
  putV2UserMe: {
    parameters: {
      formData: {
        /** userのpassword(半角英数記号から2種8-24字) */
        password?: string;
        /** ユーザーのフラグ管理(JSON) */
        details?: string;
        /** ユーザーのロケール */
        locale?: "ja-JP" | "en-US";
        /** 最新の規約に同意するかどうか(true: 同意する / false: 同意を取り消す[テスト用途]) */
        is_latest_terms_agreed?: boolean;
      };
    };
    responses: {
      /** Update session user */
      200: {
        schema: definitions["V2_UserMeEntity"];
      };
      400: {
        schema: definitions["V2_ErrorEntity"];
      };
      422: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  putV2UserInitializeMyName: {
    parameters: {
      formData: {
        /** userの名前 */
        name?: string;
      };
    };
    responses: {
      /** updated InitializeMyName */
      200: unknown;
    };
  };
  /** tsvファイルをもとにユーザーを一括登録する。https://docs.google.com/spreadsheets/d/1g4s2BKL4fqw53HCQN2mxLTIk8AJ0kJYkYIWUBs6F14s/edit#gid=0 を参考にconfidentialドライブでシートを作成し、そのtsvファイルを使う */
  postV2UserBulkInsert: {
    parameters: {
      formData: {
        tsv_file: unknown;
        /** 導入プロジェクトにアサインするか否か */
        assign_to_search_target_project?: boolean;
      };
    };
    responses: {
      /** tsvファイルをもとにユーザーを一括登録する。https://docs.google.com/spreadsheets/d/1g4s2BKL4fqw53HCQN2mxLTIk8AJ0kJYkYIWUBs6F14s/edit#gid=0 を参考にconfidentialドライブでシートを作成し、そのtsvファイルを使う */
      201: unknown;
    };
  };
  /** reset password */
  postV2UserResetPassword: {
    parameters: {
      formData: {
        /** userのemail */
        email: string;
      };
    };
    responses: {
      /** reset password */
      201: unknown;
    };
  };
  /** list users <br /> (※paginationが不要で高速に候補データを取得したい場合は、 GET api/v2/suggest/user を使用してください) */
  getV2User: {
    parameters: {
      query: {
        /** 検索クエリ。検索対象はemail/name */
        q?: string;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** 取得したいユーザーID一式 */
        "user_ids[]"?: number[];
        /** userの職種(member, admin, supplier) */
        user_type?: "member" | "admin" | "supplier";
        /** archive済みユーザーを含めるか */
        include_archived?: boolean;
        user_group_id?: number;
        exclude_user_group_id?: number;
      };
    };
    responses: {
      /** list users <br /> (※paginationが不要で高速に候補データを取得したい場合は、 GET api/v2/suggest/user を使用してください) */
      200: {
        schema: definitions["V2_UserListWithStatsEntity"];
      };
    };
  };
  /** create user */
  postV2User: {
    parameters: {
      formData: {
        /** userのemail */
        email: string;
        /** userのpassword(半角英数記号から2種8-24字) */
        password?: string;
        /** userの名前 */
        name: string;
        /** userの種類 */
        user_type?: "member" | "admin" | "supplier";
        /** userの職種(lawyer, paralegal, secretary, other) */
        user_role?: "lawyer" | "paralegal" | "secretary" | "other";
        /** PW更新を求めるか */
        will_request_new_pw?: boolean;
        /** ログインにSSOを利用するか */
        is_sso_user?: boolean;
        /** ユーザーのフラグ管理(JSON) */
        details?: string;
        /** SSO経由で登録した場合、どのIDPから登録したか */
        registered_idp_key?: string;
        /** 連携ロックをする場合true */
        ignore_auth_info_csv_batch?: boolean;
        /** 外部ユーザーID */
        external_id?: string;
      };
    };
    responses: {
      /** create user */
      201: {
        schema: definitions["V2_UserEntity"];
      };
    };
  };
  /** unlock user account */
  postV2UserUserIdUnlock: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** unlock user account */
      201: unknown;
    };
  };
  getV2UserUserId: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_UserEntity"];
      };
    };
  };
  /** update user */
  putV2UserUserId: {
    parameters: {
      formData: {
        /** userのemail */
        email?: string;
        /** userのpassword(半角英数記号から2種8-24字) */
        password?: string;
        /** userの名前 */
        name?: string;
        /**
         * userの状態(live, suspend(ログインできない), \
         *                               archive(ログインできずアサイン候補者およびユーザーリストに表示されない)
         */
        status?: string;
        /** userの種類 */
        user_type?: "member" | "admin" | "supplier";
        /** userの職種(lawyer, paralegal, secretary, other) */
        user_role?: "lawyer" | "paralegal" | "secretary" | "other";
        /** PW更新を求めるか */
        will_request_new_pw?: boolean;
        /** ログインにSSOを利用するか */
        is_sso_user?: boolean;
        /** ユーザーのフラグ管理(JSON) */
        details?: string;
        /** SSO経由で登録した場合、どのIDPから登録したか */
        registered_idp_key?: string;
        /** 連携ロックをする場合true */
        ignore_auth_info_csv_batch?: boolean;
        /** 外部ユーザーID */
        external_id?: string;
        /** ユーザーのロケール */
        locale?: "ja-JP" | "en-US";
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** update user */
      200: {
        schema: definitions["V2_UserEntity"];
      };
    };
  };
  /** get favorite_items */
  getV2UserUserIdFavoriteItem: {
    parameters: {
      query: {
        /** 社内推奨の種類 */
        item_type?:
          | "document"
          | "clause"
          | "document_tree"
          | "matter"
          | "matter_timeline";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** get favorite_items */
      200: {
        schema: definitions["V2_FavoriteItemListWithStatsEntity"];
      };
    };
  };
  /** create favorite_item */
  postV2UserUserIdFavoriteItem: {
    parameters: {
      formData: {
        /** お気に入りの種類 */
        item_type:
          | "document"
          | "clause"
          | "document_tree"
          | "matter"
          | "matter_timeline";
        /** お気に入り対象の元名称 */
        name: string;
        /** お気に入り対象の識別値。item_typeに応じて変化。document→Document.id、clause→Clause.id、query→URL文字列、matter→Matter.id、matter_timeline→MatterTimeline.id */
        value: string;
        /** お気に入り登録時のタイトル */
        note: string;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** create favorite_item */
      201: {
        schema: definitions["V2_FavoriteItemEntity"];
      };
    };
  };
  /** Update favorite_item */
  putV2UserUserIdFavoriteItemFavoriteItemId: {
    parameters: {
      formData: {
        /** お気に入り登録時のタイトル */
        note: string;
      };
      path: {
        user_id: number;
        favorite_item_id: number;
      };
    };
    responses: {
      /** Update favorite_item */
      200: unknown;
    };
  };
  /** Delete favorite_item */
  deleteV2UserUserIdFavoriteItemFavoriteItemId: {
    parameters: {
      path: {
        user_id: number;
        favorite_item_id: number;
      };
    };
    responses: {
      /** Delete favorite_item */
      204: never;
    };
  };
  /** create user_group_relation */
  postV2UserUserIdUserGroup: {
    parameters: {
      formData: {
        /** ユーザーグループID */
        user_group_id: number;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** create user_group_relation */
      201: {
        schema: definitions["V2_UserGroupRelationEntity"];
      };
    };
  };
  /** Delete user_group_relations */
  deleteV2UserUserIdUserGroupUserGroupId: {
    parameters: {
      path: {
        user_id: number;
        user_group_id: number;
      };
    };
    responses: {
      /** Delete user_group_relations */
      204: never;
    };
  };
  /** 指定フォルダ直下のファイル・フォルダ情報を返す */
  getV2DocumentTreeChildren: {
    parameters: {
      query: {
        /** 親ディレクトリのdocument_tree_id */
        parent_id?: number;
        /** 並び替えの方式 tree(default), created_at */
        sort_by?: "tree" | "created_at";
        /** 並び順の指定. desc(default), asc */
        sort_option?: "desc" | "asc";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** 指定フォルダ直下のファイル・フォルダ情報を返す */
      200: {
        schema: definitions["V2_DocumentTreeChildrenEntity"];
      };
    };
  };
  /** 指定フォルダ直下のフォルダ情報を返す */
  getV2DocumentTreeDirectoryChildren: {
    parameters: {
      query: {
        /** 親ディレクトリのdocument_tree_id */
        parent_id?: number;
      };
    };
    responses: {
      /** 指定フォルダ直下のフォルダ情報を返す */
      200: {
        schema: definitions["V2_DirectoryDocumentTreeEntity"][];
      };
    };
  };
  /** bulk_moveのAPIが途中で失敗したときに現状復旧するために利用するAPIです。DO_NOT_USE と名前の付いたフォルダが移動元の親フォルダにあるときに利用してください */
  postV2DocumentTreeBulkMoveRecover: {
    parameters: {
      formData: {
        /** DO_NOT_USE と名前が付いたフォルダのID */
        temporary_directory_id: string;
      };
    };
    responses: {
      /** bulk_moveのAPIが途中で失敗したときに現状復旧するために利用するAPIです。DO_NOT_USE と名前の付いたフォルダが移動元の親フォルダにあるときに利用してください */
      201: {
        schema: definitions["V2_MessageEntity"];
      };
    };
  };
  /** このAPIはわりと雑に巨大なフォルダを移動するためのAPIです。途中でエラーが起きると移動途中の状況で処理が停止することがあります。できるだけ移動対象のフォルダへの操作が無い状況でこのAPIを利用してください。 */
  postV2DocumentTreeBulkMove: {
    parameters: {
      formData: {
        /** 親ディレクトリのdocument_tree_id */
        parent_directory_id: string;
        /** カンマ区切り */
        document_tree_ids: string;
      };
    };
    responses: {
      /** このAPIはわりと雑に巨大なフォルダを移動するためのAPIです。途中でエラーが起きると移動途中の状況で処理が停止することがあります。できるだけ移動対象のフォルダへの操作が無い状況でこのAPIを利用してください。 */
      201: {
        schema: definitions["V2_MessageEntity"];
      };
    };
  };
  /** 指定フォルダ配下の閲覧可能なファイル数を取得する */
  getV2DocumentTreeDocumentTreeIdFileCount: {
    parameters: {
      path: {
        document_tree_id: number;
      };
    };
    responses: {
      /** 指定フォルダ配下の閲覧可能なファイル数を取得する */
      200: {
        schema: definitions["V2_DocumentTreeFileCountEntity"];
      };
    };
  };
  /** get connectmail email dispatch */
  getV2DocumentTreeDocumentTreeIdConnectmailEmailDispatch: {
    parameters: {
      path: {
        document_tree_id: number;
      };
    };
    responses: {
      /** get connectmail email dispatch */
      200: {
        schema: definitions["V2_ConnectmailEmailDispatchEntity"];
      };
      404: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** update connectmail email dispatch */
  putV2DocumentTreeDocumentTreeIdConnectmailEmailDispatch: {
    parameters: {
      formData: {
        /** メールアドレスのローカル部、@の手前 */
        email_local?: string;
        is_enabled?: boolean;
      };
      path: {
        document_tree_id: number;
      };
    };
    responses: {
      /** update connectmail email dispatch */
      200: unknown;
    };
  };
  /** create connectmail email dispatch */
  postV2DocumentTreeDocumentTreeIdConnectmailEmailDispatch: {
    parameters: {
      path: {
        document_tree_id: number;
      };
    };
    responses: {
      /** create connectmail email dispatch */
      201: {
        schema: definitions["V2_ConnectmailEmailDispatchEntity"];
      };
    };
  };
  /** list docusign_sync_status */
  getV2DocusignSyncStatus: {
    responses: {
      /** list docusign_sync_status */
      200: {
        schema: definitions["V2_DocusignSyncStatusEntity"][];
      };
    };
  };
  /** return docusign_sync_status */
  putV2DocusignSyncStatusDocusignSyncStatusId: {
    parameters: {
      formData: {
        /** 同期開始時刻 */
        sync_started_at?: string;
        /** 同期終了時刻 */
        last_synced_at?: string;
      };
      path: {
        docusign_sync_status_id: number;
      };
    };
    responses: {
      /** return docusign_sync_status */
      200: {
        schema: definitions["V2_DocusignSyncStatusEntity"];
      };
    };
  };
  /** Delete docusign_sync_status */
  deleteV2DocusignSyncStatusDocusignSyncStatusId: {
    parameters: {
      path: {
        docusign_sync_status_id: number;
      };
    };
    responses: {
      /** Delete docusign_sync_status */
      204: never;
    };
  };
  /** list docusign_user */
  getV2DocusignUser: {
    parameters: {
      query: {
        /** is_master以外も表示する */
        show_all?: boolean;
      };
    };
    responses: {
      /** list docusign_user */
      200: {
        schema: definitions["V2_DocusignUserEntity"][];
      };
    };
  };
  /** create docusign_user */
  postV2DocusignUser: {
    parameters: {
      formData: {
        /** DocuSignのユーザーID */
        id: string;
      };
    };
    responses: {
      /** create docusign_user */
      201: {
        schema: definitions["V2_DocusignUserEntity"];
      };
    };
  };
  /** check docusign_user authentication */
  getV2DocusignUserDocusignUserIdCheckAuthentication: {
    parameters: {
      path: {
        docusign_user_id: number;
      };
    };
    responses: {
      /** check docusign_user authentication */
      200: {
        schema: definitions["V2_DocusignUserAuthenticatedEntity"];
      };
    };
  };
  /** update docusign_user */
  putV2DocusignUserDocusignUserId: {
    parameters: {
      formData: {
        /** 連携当事者か否か */
        is_master?: boolean;
        /** 連携を停止するか否か */
        is_suspend?: boolean;
      };
      path: {
        docusign_user_id: number;
      };
    };
    responses: {
      /** update docusign_user */
      200: {
        schema: definitions["V2_DocusignUserEntity"];
      };
    };
  };
  /** delete docusign_user */
  deleteV2DocusignUserDocusignUserId: {
    parameters: {
      path: {
        docusign_user_id: number;
      };
    };
    responses: {
      /** delete docusign_user */
      204: never;
    };
  };
  /** issue consent obtain url */
  getV2DocusignUserDocusignUserIdConsentObtainUrl: {
    parameters: {
      query: {
        /** コンセントタイプの指定 */
        is_individual?: boolean;
      };
      path: {
        docusign_user_id: number;
      };
    };
    responses: {
      /** issue consent obtain url */
      200: {
        schema: definitions["V2_MessageEntity"];
      };
    };
  };
  /** list docusign_account */
  getV2DocusignAccount: {
    responses: {
      /** list docusign_account */
      200: {
        schema: definitions["V2_DocusignAccountEntity"][];
      };
    };
  };
  /** update docusign_account */
  putV2DocusignAccountDocusignAccountId: {
    parameters: {
      formData: {
        /** 自動連携が有効か。他の項目が充足していないと有効化できない */
        is_active?: boolean;
        sync_target_directory_id?: number;
      };
      path: {
        docusign_account_id: number;
      };
    };
    responses: {
      /** update docusign_account */
      200: unknown;
    };
  };
  /** delete docusign_account */
  deleteV2DocusignAccountDocusignAccountId: {
    parameters: {
      path: {
        docusign_account_id: number;
      };
    };
    responses: {
      /** delete docusign_account */
      204: never;
    };
  };
  /** list docusign_custom_field_condition */
  getV2DocusignCustomFieldCondition: {
    responses: {
      /** list docusign_custom_field_condition */
      200: {
        schema: definitions["V2_DocusignCustomFieldConditionEntity"][];
      };
    };
  };
  /** create docusign_custom_field_condition */
  postV2DocusignCustomFieldCondition: {
    parameters: {
      formData: {
        name: string;
        value: string;
        docusign_account_id: string;
        sync_target_directory_id: number;
      };
    };
    responses: {
      /** create docusign_custom_field_condition */
      201: {
        schema: definitions["V2_DocusignCustomFieldConditionEntity"];
      };
    };
  };
  /** update docusign_custom_field_condition */
  putV2DocusignCustomFieldConditionDocusignCustomFieldConditionId: {
    parameters: {
      formData: {
        name?: string;
        value?: string;
        docusign_account_id?: string;
        sync_target_directory_id?: number;
      };
      path: {
        docusign_custom_field_condition_id: number;
      };
    };
    responses: {
      /** update docusign_custom_field_condition */
      200: unknown;
    };
  };
  /** delete docusign_custom_field_condition */
  deleteV2DocusignCustomFieldConditionDocusignCustomFieldConditionId: {
    parameters: {
      path: {
        docusign_custom_field_condition_id: number;
      };
    };
    responses: {
      /** delete docusign_custom_field_condition */
      204: never;
    };
  };
  /** survey missing envelopes on db */
  getV2DocusignTestSurveyMissingEnvelopesOnDb: {
    parameters: {
      query: {
        docusign_account_id: string;
        docusign_user_id: string;
        /** このパラメータ以降のstatus changedを取得する */
        survey_from?: string;
      };
    };
    responses: {
      /** survey missing envelopes on db */
      200: {
        schema: definitions["V2_DocusignApiResultEntity"];
      };
    };
  };
  /** refetch docusign_envelope */
  getV2DocusignTestRefetchEnvelope: {
    parameters: {
      query: {
        docusign_account_id: string;
        docusign_user_id: string;
        docusign_envelope_id: string;
        /** 指定すると、そのwebhookに合わせたフォルダに振り分けを行う */
        docusign_webhook_id?: string;
      };
    };
    responses: {
      /** refetch docusign_envelope */
      200: {
        schema: definitions["V2_DocusignRefetchResultEntity"];
      };
    };
  };
  /** list docusign_envelope statues */
  getV2DocusignTestListStatus: {
    parameters: {
      query: {
        docusign_account_id: string;
        docusign_user_id: string;
        /** ページネーション取得時のstart_position */
        start_position: number;
        /** envelopeのstatusを指定。MNTSQではcompleted以外は見ないので変更しなくてよい */
        status: string;
        /** このパラメータ以降のstatus changedを取得する */
        date_from?: string;
        /** inboxを取得する場合はtrueにする */
        inbox?: boolean;
      };
    };
    responses: {
      /** list docusign_envelope statues */
      200: {
        schema: definitions["V2_DocusignApiResultEntity"];
      };
    };
  };
  /** list docusign_documents */
  getV2DocusignTestListDocuments: {
    parameters: {
      query: {
        docusign_account_id: string;
        docusign_user_id: string;
        docusign_envelope_id: string;
      };
    };
    responses: {
      /** list docusign_documents */
      200: {
        schema: definitions["V2_DocusignApiResultEntity"];
      };
    };
  };
  /** get docusign_envelope */
  getV2DocusignTestGetEnvelope: {
    parameters: {
      query: {
        docusign_account_id: string;
        docusign_user_id: string;
        docusign_envelope_id: string;
      };
    };
    responses: {
      /** get docusign_envelope */
      200: {
        schema: definitions["V2_DocusignApiResultEntity"];
      };
    };
  };
  /** sync proof file on s3 */
  putV2DocusignWebhookSyncProofFileOnS3: {
    responses: {
      /** sync proof file on s3 */
      200: unknown;
    };
  };
  /** list docusign_webhook */
  getV2DocusignWebhook: {
    responses: {
      /** list docusign_webhook */
      200: {
        schema: definitions["V2_DocusignWebhookEntity"][];
      };
    };
  };
  /** create docusign_webhook */
  postV2DocusignWebhook: {
    parameters: {
      formData: {
        /** DocusignWebhookの名前 */
        name: string;
        /** 有効か否か */
        is_active?: boolean;
        /** Document保存先のフォルダid */
        sync_target_directory_id?: number;
        /** DocuSignAccountID */
        docusign_account_id: string;
        /** DocuSignUserID */
        docusign_user_id: string;
      };
    };
    responses: {
      /** create docusign_webhook */
      201: {
        schema: definitions["V2_DocusignWebhookEntity"];
      };
    };
  };
  /** update docusign_webhook */
  putV2DocusignWebhookDocusignWebhookId: {
    parameters: {
      formData: {
        /** 有効か否か */
        is_active?: boolean;
        /** DocusignWebhookの名前 */
        name?: string;
        /** Document保存先のフォルダid */
        sync_target_directory_id?: number;
        /** DocuSignAccountID */
        docusign_account_id?: string;
        /** DocuSignUserID */
        docusign_user_id?: string;
      };
      path: {
        docusign_webhook_id: number;
      };
    };
    responses: {
      /** update docusign_webhook */
      200: {
        schema: definitions["V2_DocusignWebhookEntity"];
      };
    };
  };
  /** delete docusign_webhook */
  deleteV2DocusignWebhookDocusignWebhookId: {
    parameters: {
      path: {
        docusign_webhook_id: number;
      };
    };
    responses: {
      /** delete docusign_webhook */
      204: never;
    };
  };
  /** list gdrive_sync_config */
  getV2GdriveSyncConfig: {
    responses: {
      /** list gdrive_sync_config */
      200: {
        schema: definitions["V2_GdriveSyncConfigEntity"][];
      };
    };
  };
  postV2GdriveSyncConfig: {
    parameters: {
      formData: {
        gdrive_user_id: number;
        gdrive_folder_id: string;
        document_tree_id: number;
      };
    };
    responses: {
      /** created GdriveSyncConfig */
      201: unknown;
    };
  };
  /** delete gdrive_sync_config */
  deleteV2GdriveSyncConfigId: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** delete gdrive_sync_config */
      204: never;
    };
  };
  /** issue consent obtain url */
  getV2GdriveUserConsentObtainUrl: {
    responses: {
      /** issue consent obtain url */
      200: {
        schema: definitions["V2_MessageEntity"];
      };
    };
  };
  /** list gdrive_user */
  getV2GdriveUser: {
    responses: {
      /** list gdrive_user */
      200: {
        schema: definitions["V2_GdriveUserEntity"][];
      };
    };
  };
  /** delete gdrive_user */
  deleteV2GdriveUserId: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** delete gdrive_user */
      204: never;
    };
  };
  /** return assignment list */
  getV2Assignment: {
    parameters: {
      query: {
        /** projectのid */
        project_id: number;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** return assignment list */
      200: {
        schema: definitions["V2_AssignmentListWithStatsEntity"];
      };
    };
  };
  /** create assignment */
  postV2Assignment: {
    parameters: {
      formData: {
        /** projectのid */
        project_id: number;
        /** userのid */
        user_id: number;
      };
    };
    responses: {
      /** create assignment */
      201: unknown;
      /** 既にアサイン済みです */
      409: unknown;
    };
  };
  /** Delete assignment */
  deleteV2AssignmentAssignmentId: {
    parameters: {
      path: {
        assignment_id: number;
      };
    };
    responses: {
      /** Delete assignment */
      204: never;
    };
  };
  /** assign section */
  postV2AssignmentAssignmentIdSectionType: {
    parameters: {
      formData: {
        /** section type */
        section_type: string;
        /** ジョブによるものか？ */
        auto_detect?: boolean;
      };
      path: {
        assignment_id: number;
      };
    };
    responses: {
      /** assign section */
      201: unknown;
    };
  };
  /** remove assignment of section_type */
  deleteV2AssignmentAssignmentIdSectionType: {
    parameters: {
      query: {
        /** section type */
        section_type: string;
      };
      path: {
        assignment_id: number;
      };
    };
    responses: {
      /** remove assignment of section_type */
      204: never;
    };
  };
  /** return project list with stats */
  getV2Maintenance: {
    responses: {
      /** return project list with stats */
      200: {
        schema: definitions["V2_MaintenanceEntity"][];
      };
    };
  };
  /** update maintenance */
  putV2MaintenanceMaintenanceId: {
    parameters: {
      formData: {
        /** タイトル */
        label?: string;
        /** 説明 */
        description?: string;
        /** 非表示にするか否か */
        is_hidden?: boolean;
      };
      path: {
        maintenance_id: number;
      };
    };
    responses: {
      /** update maintenance */
      200: {
        schema: definitions["V2_MaintenanceEntity"];
      };
    };
  };
  /** get maintenance_mode */
  getV2MaintenanceMode: {
    responses: {
      /** get maintenance_mode */
      200: {
        schema: definitions["V2_MaintenanceModeEntity"];
      };
    };
  };
  /** update maintenance_mode */
  putV2MaintenanceMode: {
    parameters: {
      formData: {
        /** メンテナンスモードを有効にするか否か */
        enabled: boolean;
      };
    };
    responses: {
      /** update maintenance_mode */
      200: {
        schema: definitions["V2_MaintenanceModeEntity"];
      };
    };
  };
  /** update maintenance_not_applicable_user */
  putV2MaintenanceNotApplicableUser: {
    parameters: {
      formData: {
        /** メンテナンスモード中の操作を許可するユーザーIDの配列。許可ユーザーを0人にしたい場合は何も入力しないでください */
        "user_ids[]"?: number[];
      };
    };
    responses: {
      /** update maintenance_not_applicable_user */
      200: {
        schema: definitions["V2_MaintenanceModeEntity"];
      };
    };
  };
  getV2ContractTypeOptionGroup: {
    responses: {
      200: {
        schema: definitions["V2_ContractTypeOptionGroupEntity"][];
      };
    };
  };
  postV2ContractType: {
    parameters: {
      formData: {
        document_id: number;
        /** 契約類型 */
        contract_type:
          | "agreement_management"
          | "agreement_limiting_liability"
          | "letter_of_intent"
          | "agreement_investment"
          | "agreement_merger"
          | "agreement_split"
          | "agreement_business_transfer"
          | "agreement_share_transfer"
          | "agreement_share_kabushikiiten"
          | "agreement_share_exchange"
          | "agreement_shareholders"
          | "agreement_option"
          | "agreement_transfer_real_property"
          | "agreement_transfer_personal_property"
          | "agreement_lease_real_property"
          | "agreement_real_property"
          | "agreement_lease_personal_property"
          | "agreement_joint_research"
          | "agreement_license"
          | "agreement_license_patent"
          | "agreement_license_trademark"
          | "agreement_license_system"
          | "agreement_license_other"
          | "agreement_basic_bank"
          | "agreement_insurance"
          | "agreement_loan"
          | "agreement_nda"
          | "master_agreement"
          | "master_agreement_sales"
          | "agreement_purchase_order"
          | "agreement_service"
          | "agreement_service_development"
          | "agreement_service_other"
          | "agreement_system"
          | "agreement_distribution"
          | "agreement_alliance"
          | "agreement_employment"
          | "agreement_secondment"
          | "agreement_dispatch"
          | "agreement_collective_36"
          | "agreement_collective_discretionary_working_hour"
          | "agreement_collective_flextime_working_hour"
          | "agreement_collective_defacto_working_hour_for_outside"
          | "agreement_collective_other"
          | "rule_stock_ownership_association"
          | "privacy_policy"
          | "agreement_settlement"
          | "agreement_syndicated_loan"
          | "syndicate_agreement_loan_assignment"
          | "collateral_agreement"
          | "agreement_franchise"
          | "agreement_factoring"
          | "agreement_industrial_waste_disposal"
          | "agreement_standard_form"
          | "agreement_ma"
          | "clauses_package"
          | "agreement_assignment"
          | "agreement_termination"
          | "agreement_change"
          | "agreement_personal_data"
          | "amendment_agreement"
          | "agreement_terms_of_service"
          | "agreement_data_use"
          | "agreement_joint_liability"
          | "duplicated_for_ml"
          | "free_item_1"
          | "free_item_2"
          | "free_item_3"
          | "free_item_4"
          | "free_item_5"
          | "free_item_6"
          | "free_item_7"
          | "free_item_8"
          | "free_item_9"
          | "free_item_10"
          | "other_contract"
          | "aoi"
          | "internal_rules_board"
          | "internal_rules_share"
          | "internal_rules_working"
          | "internal_rules_salary"
          | "internal_rules_invention"
          | "internal_rules_other"
          | "disclosure_statement"
          | "agreement_38_document"
          | "other_lease_related_document"
          | "corporate_registration"
          | "real_property_registration"
          | "shareholders_meeting_notice"
          | "minutes_shareholders"
          | "minutes_board"
          | "minutes_other"
          | "list_of_shareholders"
          | "business_report"
          | "financial_statements"
          | "tax_return"
          | "annual_security_report"
          | "instruction_from_labor_standard_office"
          | "disputes_litigation_or_mitigation"
          | "disputes_litigation_labor_tribunal"
          | "disputes_other"
          | "approval_documents"
          | "other_not_contract"
          | "na"
          | "important_not_legal_document"
          | "other_not_legal_document"
          | "contract_template";
        /** ジョブによるものか？ */
        auto_detect?: boolean;
        /** 信頼度 */
        confidence?: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  deleteV2ContractType: {
    parameters: {
      query: {
        /** document id */
        document_id: string;
        /** 契約類型 */
        contract_type:
          | "agreement_management"
          | "agreement_limiting_liability"
          | "letter_of_intent"
          | "agreement_investment"
          | "agreement_merger"
          | "agreement_split"
          | "agreement_business_transfer"
          | "agreement_share_transfer"
          | "agreement_share_kabushikiiten"
          | "agreement_share_exchange"
          | "agreement_shareholders"
          | "agreement_option"
          | "agreement_transfer_real_property"
          | "agreement_transfer_personal_property"
          | "agreement_lease_real_property"
          | "agreement_real_property"
          | "agreement_lease_personal_property"
          | "agreement_joint_research"
          | "agreement_license"
          | "agreement_license_patent"
          | "agreement_license_trademark"
          | "agreement_license_system"
          | "agreement_license_other"
          | "agreement_basic_bank"
          | "agreement_insurance"
          | "agreement_loan"
          | "agreement_nda"
          | "master_agreement"
          | "master_agreement_sales"
          | "agreement_purchase_order"
          | "agreement_service"
          | "agreement_service_development"
          | "agreement_service_other"
          | "agreement_system"
          | "agreement_distribution"
          | "agreement_alliance"
          | "agreement_employment"
          | "agreement_secondment"
          | "agreement_dispatch"
          | "agreement_collective_36"
          | "agreement_collective_discretionary_working_hour"
          | "agreement_collective_flextime_working_hour"
          | "agreement_collective_defacto_working_hour_for_outside"
          | "agreement_collective_other"
          | "rule_stock_ownership_association"
          | "privacy_policy"
          | "agreement_settlement"
          | "agreement_syndicated_loan"
          | "syndicate_agreement_loan_assignment"
          | "collateral_agreement"
          | "agreement_franchise"
          | "agreement_factoring"
          | "agreement_industrial_waste_disposal"
          | "agreement_standard_form"
          | "agreement_ma"
          | "clauses_package"
          | "agreement_assignment"
          | "agreement_termination"
          | "agreement_change"
          | "agreement_personal_data"
          | "amendment_agreement"
          | "agreement_terms_of_service"
          | "agreement_data_use"
          | "agreement_joint_liability"
          | "duplicated_for_ml"
          | "free_item_1"
          | "free_item_2"
          | "free_item_3"
          | "free_item_4"
          | "free_item_5"
          | "free_item_6"
          | "free_item_7"
          | "free_item_8"
          | "free_item_9"
          | "free_item_10"
          | "other_contract"
          | "aoi"
          | "internal_rules_board"
          | "internal_rules_share"
          | "internal_rules_working"
          | "internal_rules_salary"
          | "internal_rules_invention"
          | "internal_rules_other"
          | "disclosure_statement"
          | "agreement_38_document"
          | "other_lease_related_document"
          | "corporate_registration"
          | "real_property_registration"
          | "shareholders_meeting_notice"
          | "minutes_shareholders"
          | "minutes_board"
          | "minutes_other"
          | "list_of_shareholders"
          | "business_report"
          | "financial_statements"
          | "tax_return"
          | "annual_security_report"
          | "instruction_from_labor_standard_office"
          | "disputes_litigation_or_mitigation"
          | "disputes_litigation_labor_tribunal"
          | "disputes_other"
          | "approval_documents"
          | "other_not_contract"
          | "na"
          | "important_not_legal_document"
          | "other_not_legal_document"
          | "contract_template";
      };
    };
    responses: {
      204: never;
    };
  };
  /** get analyze_job_suspend */
  getV2AnalyzeJobSuspend: {
    responses: {
      /** get analyze_job_suspend */
      200: {
        schema: definitions["V2_AnalyzeJobSuspendEntity"];
      };
    };
  };
  /** updates analyze_job_suspend */
  putV2AnalyzeJobSuspend: {
    parameters: {
      formData: {
        /** jobを停止するか */
        will_suspends: boolean;
      };
    };
    responses: {
      /** updates analyze_job_suspend */
      200: {
        schema: definitions["V2_AnalyzeJobSuspendEntity"];
      };
    };
  };
  /** create clause in bulk */
  postV2ClauseBulkSave: {
    parameters: {
      formData: {
        /** documentのid */
        "items[][document_id]": number[];
        /** 階層レベル */
        "items[][hierarchy_level]": (
          | "keep"
          | "toc"
          | "title"
          | "foreword"
          | "zero"
          | "first_level"
          | "second_level"
          | "third_level"
          | "first_and_second_level"
          | "second_and_third_level"
          | "first_and_second_third_level"
          | "closing"
          | "signature"
        )[];
        /** ソーステキスト */
        "items[][source_text]": string[];
        /** 説明文 */
        "items[][description]": string[];
        /** 信用度が低いフラグ */
        "items[][is_unreliable]"?: boolean[];
        /** ページ数 */
        "items[][page_num]"?: number[];
        /** 詳細 */
        "items[][details]"?: string[];
      };
    };
    responses: {
      /** create clause in bulk */
      201: unknown;
    };
  };
  /** return clause list */
  getV2Clause: {
    parameters: {
      query: {
        /** documentのid */
        document_id: number;
        /** 取得したいclausetのid。複数指定の場合はカンマ区切りで指定する */
        clause_ids?: string;
        /** projectのid */
        project_id?: number;
        /** 階層レベル */
        hierarchy_level?:
          | "keep"
          | "toc"
          | "title"
          | "foreword"
          | "zero"
          | "first_level"
          | "second_level"
          | "third_level"
          | "first_and_second_level"
          | "second_and_third_level"
          | "first_and_second_third_level"
          | "closing"
          | "signature";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** return clause list */
      200: {
        schema: definitions["V2_ClauseListWithStatsEntity"];
      };
    };
  };
  /** create clause */
  postV2Clause: {
    parameters: {
      formData: {
        /** documentのid */
        document_id: number;
        /** 階層レベル */
        hierarchy_level:
          | "keep"
          | "toc"
          | "title"
          | "foreword"
          | "zero"
          | "first_level"
          | "second_level"
          | "third_level"
          | "first_and_second_level"
          | "second_and_third_level"
          | "first_and_second_third_level"
          | "closing"
          | "signature";
        /** ソーステキスト */
        source_text: string;
        /** 説明文 */
        description: string;
        /** 信用度が低いフラグ */
        is_unreliable?: boolean;
        /** ページ数 */
        page_num?: number;
        /** 詳細 */
        details?: string;
      };
    };
    responses: {
      /** create clause */
      201: {
        schema: definitions["V2_ClauseEntity"];
      };
    };
  };
  /** return clause */
  getV2ClauseClauseId: {
    parameters: {
      query: {
        /** childrenの要否フラグ */
        with_children?: boolean;
      };
      path: {
        clause_id: number;
      };
    };
    responses: {
      /** return clause */
      200: {
        schema: definitions["V2_ClauseEntity"];
      };
    };
  };
  /** update clause */
  putV2ClauseClauseId: {
    parameters: {
      formData: {
        /** documentのid */
        document_id: number;
        /** 階層レベル */
        hierarchy_level?:
          | "keep"
          | "toc"
          | "title"
          | "foreword"
          | "zero"
          | "first_level"
          | "second_level"
          | "third_level"
          | "first_and_second_level"
          | "second_and_third_level"
          | "first_and_second_third_level"
          | "closing"
          | "signature";
        /** ソーステキスト */
        source_text?: string;
        /** 説明文 */
        description?: string;
        /** 信用度が低いフラグ */
        is_unreliable?: boolean;
        /** ページ数 */
        page_num?: number;
        /** 詳細 */
        details?: string;
      };
      path: {
        clause_id: number;
      };
    };
    responses: {
      /** update clause */
      200: {
        schema: definitions["V2_ClauseEntity"];
      };
    };
  };
  /** create clause tag */
  postV2ClauseClauseIdClauseTag: {
    parameters: {
      path: {
        /** clauseのid */
        clause_id: number;
      };
      formData: {
        /** アノテーション類型 */
        annotation_type:
          | "other"
          | "contract_title"
          | "related_agreement_title"
          | "party"
          | "related_agreement_party"
          | "execution_date"
          | "effective_date"
          | "related_agreement_execution_date"
          | "related_agreement_effective_date"
          | "expired"
          | "contract_term"
          | "automatic_renewal"
          | "automatic_renewal_period"
          | "notice_requirement_to_refuse_renewal"
          | "personal_data"
          | "termination_of_agreement"
          | "anti_social_forces"
          | "ip"
          | "limitation_of_liability"
          | "negligence"
          | "nature_of_damage"
          | "liquidated_damages"
          | "maximum_amount"
          | "period"
          | "governing_law"
          | "amendment_of_agreement"
          | "restriction_on_transfer"
          | "confidentiality"
          | "dispute_resolution"
          | "contract_term_provision"
          | "non_conformity"
          | "ip_ownership"
          | "ip_authorization"
          | "representation_and_warranty"
          | "material_adverse_effect"
          | "financial_covenants"
          | "reporting_covenants"
          | "negative_pledge"
          | "definition_of_confidential_information"
          | "reproduction_of_confidential_information"
          | "template_commentary"
          | "transaction_amount"
          | "governing_law_country"
          | "agreement_system_clause_basic_nature"
          | "agreement_system_purpose"
          | "agreement_system_confidentiality_obligation"
          | "agreement_system_restriction_on_transfer"
          | "agreement_system_clause_invididual_agreements"
          | "agreement_system_entire_agreement"
          | "agreement_system_anti_social_forces"
          | "agreement_system_dispute_resolution"
          | "agreement_system_consultation_in_good_faith"
          | "agreement_system_clause_person_in_charge"
          | "agreement_system_clause_working_place"
          | "agreement_system_clause_rental_items"
          | "agreement_system_clause_labor_management"
          | "agreement_system_clause_subcontractor"
          | "agreement_system_clause_project_meeting"
          | "agreement_system_clause_project_management"
          | "agreement_system_clause_audit"
          | "agreement_system_clause_inspection"
          | "agreement_system_clause_assumption_of_risk"
          | "agreement_system_non_conformity"
          | "agreement_system_clause_service_fee"
          | "agreement_system_clause_transfer_of_copyright"
          | "agreement_system_clause_moral_right"
          | "agreement_system_clause_infringement_of_ip_to_third_party"
          | "agreement_system_clause_period"
          | "agreement_system_clause_termination_right"
          | "agreement_system_clause_termination"
          | "agreement_system_clause_damages"
          | "agreement_share_purchase_clause_knowledge_qualifier"
          | "agreement_share_purchase_clause_purchase_price_adjustment"
          | "agreement_share_purchase_clause_condition_precedent_of_seller"
          | "agreement_share_purchase_clause_condition_precedent_of_buyer"
          | "agreement_share_purchase_clause_mac"
          | "agreement_share_purchase_clause_representation_and_warranty"
          | "agreement_share_purchase_clause_representation_incorporation"
          | "agreement_share_purchase_clause_representation_hr"
          | "agreement_share_purchase_clause_sandbagging"
          | "agreement_share_purchase_clause_non_competition"
          | "agreement_share_purchase_clause_continuation_of_employment"
          | "agreement_share_purchase_clause_indemnification"
          | "agreement_share_purchase_clause_limitation_of_indemnification"
          | "agreement_share_purchase_definition"
          | "agreement_share_purchase_transfer_agreement"
          | "agreement_share_purchase_price"
          | "agreement_share_purchase_closing"
          | "agreement_share_purchase_precondition_of_seller"
          | "agreement_share_purchase_precondition_of_buyer"
          | "agreement_share_purchase_rep_and_warranty_of_seller"
          | "agreement_share_purchase_rep_and_warranty_of_buyer"
          | "agreement_share_purchase_effect_of_dd"
          | "agreement_share_purchase_pre_covenants_procedure"
          | "agreement_share_purchase_pre_covenants_effort"
          | "agreement_share_purchase_pre_covenants_management"
          | "agreement_share_purchase_pre_covenants_access_to_information"
          | "agreement_share_purchase_pre_covenants_notice"
          | "agreement_share_purchase_post_covenants_non_compete"
          | "agreement_share_purchase_post_covenants_service"
          | "agreement_share_purchase_post_covenants_employment"
          | "agreement_share_purchase_post_covenants_waiver"
          | "agreement_share_purchase_compensation"
          | "agreement_share_purchase_compensation_process"
          | "agreement_share_purchase_compensation_limit"
          | "agreement_share_purchase_compensation_exclusive_remedy"
          | "agreement_share_purchase_termination"
          | "agreement_share_purchase_confidential_obligation"
          | "agreement_share_purchase_publication"
          | "agreement_share_purchase_expense"
          | "agreement_share_purchase_entire_agreement"
          | "agreement_share_purchase_notice"
          | "agreement_share_purchase_amendment_of_agreement"
          | "agreement_share_purchase_restriction_on_transfer"
          | "agreement_share_purchase_governing_law"
          | "agreement_share_purchase_dispute_resolution"
          | "agreement_share_purchase_counterpart"
          | "agreement_share_purchase_consultation_in_good_faith"
          | "agreement_nda_purpose"
          | "agreement_nda_confidential_infomation"
          | "agreement_nda_obligation"
          | "agreement_nda_management_of_confidential_information_neutral"
          | "agreement_nda_management_of_confidential_information_strict"
          | "agreement_nda_destruction_of_confidential_information_neutral"
          | "agreement_nda_destruction_of_confidential_information_strict"
          | "agreement_nda_accuracy_of_confidential_information"
          | "agreement_nda_right_of_confidential_information"
          | "agreement_nda_management_of_damages"
          | "agreement_nda_injunction"
          | "agreement_nda_contract_term"
          | "agreement_nda_controlling_language"
          | "agreement_nda_restriction_on_transfer"
          | "agreement_nda_dispute_resolution"
          | "agreement_nda_consultation_in_good_faith"
          | "agreement_service_delegation"
          | "agreement_service_job_description"
          | "agreement_service_commission_fee"
          | "agreement_service_payment"
          | "agreement_service_title_and_risk"
          | "agreement_service_confirmation_of_completion"
          | "agreement_service_ownership_and_risk"
          | "agreement_service_subcontracting"
          | "agreement_service_report"
          | "agreement_service_right_of_command"
          | "agreement_service_product_liability"
          | "agreement_service_non_conformity"
          | "agreement_service_ip"
          | "agreement_service_infringement_of_ip_to_third_party"
          | "agreement_service_contract_term"
          | "agreement_service_termination"
          | "agreement_service_force_majeure"
          | "agreement_service_commission_fee_terminated_without_cause"
          | "agreement_service_confidentiality_obligation"
          | "agreement_service_damages"
          | "agreement_service_of_survival_clause"
          | "agreement_service_restriction_on_transfer"
          | "agreement_service_dispute_resolution"
          | "agreement_service_consultation_in_good_faith"
          | "agreement_service_controlling_language"
          | "agreement_service_quasi_mandate_performing"
          | "agreement_license_patent_purpose"
          | "agreement_license_patent_ip_licensing"
          | "agreement_license_patent_maintainance_of_patent"
          | "agreement_license_patent_license_fee"
          | "agreement_license_patent_report_and_payment"
          | "agreement_license_patent_accounting_and_inspection"
          | "agreement_license_patent_disclaimer_of_warranty"
          | "agreement_license_patent_infringement_of_ip_from_third_party"
          | "agreement_license_patent_no_contest"
          | "agreement_license_patent_improvement"
          | "agreement_license_patent_confidentiality_obligation"
          | "agreement_license_patent_contract_term"
          | "agreement_license_patent_termination"
          | "agreement_license_patent_effect_of_termination"
          | "agreement_license_patent_restriction_on_transfer"
          | "agreement_license_patent_dispute_resolution"
          | "agreement_license_patent_consultation_in_good_faith"
          | "master_agreement_basic_agreement"
          | "master_agreement_individual_agreements"
          | "master_agreement_inspeciton"
          | "master_agreement_export_control"
          | "master_agreement_damages"
          | "master_agreement_termination"
          | "master_agreement_delivery_date"
          | "master_agreement_rejection_of_receipt"
          | "master_agreement_title_and_risk"
          | "master_agreement_payment"
          | "master_agreement_non_conformity"
          | "master_agreement_product_liability"
          | "master_agreement_manufacturing_process_control"
          | "master_agreement_discountinuation_of_production"
          | "master_agreement_notice"
          | "master_agreement_supplied_or_rental_items"
          | "master_agreement_duty_of_care"
          | "master_agreement_confidentiality_obligation"
          | "master_agreement_ip_ownership"
          | "master_agreement_copyright"
          | "master_agreement_infringement_of_ip_to_third_party"
          | "master_agreement_anti_social_forces"
          | "master_agreement_subcontracting"
          | "master_agreement_restriction_on_transfer"
          | "master_agreement_audit"
          | "master_agreement_termination_by_buyer"
          | "master_agreement_dispute_resolution"
          | "master_agreement_consultation_in_good_faith"
          | "master_agreement_contract_term"
          | "clauses_package_confidential_obligation"
          | "clauses_package_damages"
          | "clauses_package_force_majeure"
          | "clauses_package_anti_social_forces"
          | "clauses_package_publication"
          | "clauses_package_expense"
          | "clauses_package_amendment_of_agreement"
          | "clauses_package_entire_agreement"
          | "clauses_package_restriction_on_transfer"
          | "clauses_package_notice"
          | "clauses_package_severability"
          | "clauses_package_controlling_language"
          | "clauses_package_headline"
          | "clauses_package_governing_law"
          | "clauses_package_dispute_resolution"
          | "clauses_package_counterpart"
          | "clauses_package_consultation_in_good_faith"
          | "agreement_joint_research_joint_research"
          | "agreement_joint_research_period"
          | "agreement_joint_research_division_of_roles"
          | "agreement_joint_research_division_of_cost"
          | "agreement_joint_research_payment_of_cost"
          | "agreement_joint_research_location"
          | "agreement_joint_research_lending_facility"
          | "agreement_joint_research_worker"
          | "agreement_joint_research_meeting"
          | "agreement_joint_research_providing_information"
          | "agreement_joint_research_copyright"
          | "agreement_joint_research_shared_copyright"
          | "agreement_joint_research_private_copyright"
          | "agreement_joint_research_existing_copyright"
          | "agreement_joint_research_confidential_obligation"
          | "agreement_joint_research_publishment"
          | "agreement_joint_research_restriction_research_with_third_party"
          | "agreement_joint_research_absence_of_duty"
          | "agreement_joint_research_improvement"
          | "agreement_joint_research_no_subcontracting"
          | "agreement_joint_research_claim_from_third_party"
          | "agreement_joint_research_disclaimer_of_warranty"
          | "agreement_joint_research_damages"
          | "agreement_joint_research_restriction_on_transfer"
          | "agreement_joint_research_termination"
          | "agreement_joint_research_anti_social_forces"
          | "agreement_joint_research_contract_term"
          | "agreement_joint_research_governing_law"
          | "agreement_joint_research_dispute_resolution"
          | "agreement_joint_research_consultation_in_good_faith"
          | "agreement_service_subcontracting_personal_data"
          | "agreement_service_anti_social_forces"
          | "agreement_service_governing_law"
          | "agreement_license_patent_language"
          | "agreement_license_patent_governing_law"
          | "free_item_1"
          | "free_item_2"
          | "ma_analysis_party"
          | "ma_analysis_execution_date"
          | "definitions"
          | "ma_intergroup_reorganization"
          | "purchase_price"
          | "purchase_price_adjustment"
          | "earn_out"
          | "escrow"
          | "conditions_precedent_mac"
          | "accuracy_of_representations_and_warranties"
          | "financing_out"
          | "litigation_out"
          | "clearance_of_regulation"
          | "body_of_representations_and_warranties"
          | "reps_and_warranties_mac"
          | "potential_liabilities"
          | "full_disclosure_rep"
          | "sandbagging"
          | "anti_sandbagging"
          | "knowledge_qualifier"
          | "keyman_lock"
          | "notice_obligation_for_breach_of_reps_or_covenants"
          | "obligation_to_continue_employment"
          | "ma_analysis_non_compete"
          | "non_solicitation"
          | "limitation_of_liabilities"
          | "fundamental_representations"
          | "materiality_scrape"
          | "third_party_claim"
          | "damages_exclusion_of_tax_and_insurance_benefits"
          | "exclusive_remedy"
          | "special_indemnity"
          | "deemed_amount_of_damages"
          | "sha_party"
          | "sha_shareholding_ratio"
          | "right_to_appoint_officers"
          | "veto_right"
          | "obligation_of_prenotice"
          | "obligation_of_postnotice"
          | "deadlock"
          | "preemptive_right"
          | "right_of_first_refusal"
          | "right_of_first_offer"
          | "put_option"
          | "call_option"
          | "tag_along_rignt"
          | "drag_along_right"
          | "calculation_of_fair_value"
          | "exception_of_restriction_on_transfer"
          | "process_of_share_under_breach"
          | "termination_right"
          | "exclusivity"
          | "non_compete"
          | "minimum_purchase"
          | "most_favored_condition"
          | "share_transfer_then_prenotice"
          | "share_transfer_then_postnotice"
          | "share_transfer_then_termination"
          | "share_transfer_then_penalty_payment"
          | "share_transfer_then_other"
          | "share_contribution_then_prenotice"
          | "share_contribution_then_postnotice"
          | "share_contribution_then_termination"
          | "share_contribution_then_penalty_payment"
          | "share_contribution_then_other"
          | "corporate_merger_then_prenotice"
          | "corporate_merger_then_postnotice"
          | "corporate_merger_then_termination"
          | "corporate_merger_then_penalty_payment"
          | "corporate_merger_then_other"
          | "corporate_division_then_prenotice"
          | "corporate_division_then_postnotice"
          | "corporate_division_then_termination"
          | "corporate_division_then_penalty_payment"
          | "corporate_division_then_other"
          | "change_of_representative_then_prenotice"
          | "change_of_representative_then_postnotice"
          | "change_of_representative_then_termination"
          | "change_of_representative_then_penalty_payment"
          | "change_of_representative_then_other"
          | "change_of_tradename_then_prenotice"
          | "change_of_tradename_then_postnotice"
          | "change_of_tradename_then_termination"
          | "change_of_tradename_then_penalty_payment"
          | "change_of_tradename_then_other"
          | "business_transfer_then_prenotice"
          | "business_transfer_then_postnotice"
          | "business_transfer_then_termination"
          | "business_transfer_then_penalty_payment"
          | "business_transfer_then_other";
        /** tagの付与範囲 */
        scope: "only_target" | "with_children";
      };
    };
    responses: {
      /** create clause tag */
      201: {
        schema: definitions["V2_ClauseTagEntity"];
      };
    };
  };
  /** delete clause tag */
  deleteV2ClauseClauseIdClauseTagClauseTagId: {
    parameters: {
      path: {
        clause_id: number;
        clause_tag_id: number;
      };
    };
    responses: {
      /** delete clause tag */
      204: never;
    };
  };
  postV2ClauseClauseIdClauseUserTag: {
    parameters: {
      formData: {
        /** 付与する条項管理タグのマスタID */
        clause_user_tag_master_id: number;
        /** 自動付与か否か */
        is_automatically_added?: boolean;
        /** メモ */
        description?: string;
      };
      path: {
        clause_id: number;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_ClauseUserTagEntity"];
      };
    };
  };
  getV2ClauseTagOptionGroup: {
    responses: {
      200: {
        schema: definitions["V2_AnnotationTypeOptionGroupEntity"][];
      };
    };
  };
  postV2ClauseTagBulkSave: {
    parameters: {
      formData: {
        /** clauseのid */
        "items[][clause_id]": number[];
        /** アノテーション類型 */
        "items[][annotation_type]": (
          | "other"
          | "contract_title"
          | "related_agreement_title"
          | "party"
          | "related_agreement_party"
          | "execution_date"
          | "effective_date"
          | "related_agreement_execution_date"
          | "related_agreement_effective_date"
          | "expired"
          | "contract_term"
          | "automatic_renewal"
          | "automatic_renewal_period"
          | "notice_requirement_to_refuse_renewal"
          | "personal_data"
          | "termination_of_agreement"
          | "anti_social_forces"
          | "ip"
          | "limitation_of_liability"
          | "negligence"
          | "nature_of_damage"
          | "liquidated_damages"
          | "maximum_amount"
          | "period"
          | "governing_law"
          | "amendment_of_agreement"
          | "restriction_on_transfer"
          | "confidentiality"
          | "dispute_resolution"
          | "contract_term_provision"
          | "non_conformity"
          | "ip_ownership"
          | "ip_authorization"
          | "representation_and_warranty"
          | "material_adverse_effect"
          | "financial_covenants"
          | "reporting_covenants"
          | "negative_pledge"
          | "definition_of_confidential_information"
          | "reproduction_of_confidential_information"
          | "template_commentary"
          | "transaction_amount"
          | "governing_law_country"
          | "agreement_system_clause_basic_nature"
          | "agreement_system_purpose"
          | "agreement_system_confidentiality_obligation"
          | "agreement_system_restriction_on_transfer"
          | "agreement_system_clause_invididual_agreements"
          | "agreement_system_entire_agreement"
          | "agreement_system_anti_social_forces"
          | "agreement_system_dispute_resolution"
          | "agreement_system_consultation_in_good_faith"
          | "agreement_system_clause_person_in_charge"
          | "agreement_system_clause_working_place"
          | "agreement_system_clause_rental_items"
          | "agreement_system_clause_labor_management"
          | "agreement_system_clause_subcontractor"
          | "agreement_system_clause_project_meeting"
          | "agreement_system_clause_project_management"
          | "agreement_system_clause_audit"
          | "agreement_system_clause_inspection"
          | "agreement_system_clause_assumption_of_risk"
          | "agreement_system_non_conformity"
          | "agreement_system_clause_service_fee"
          | "agreement_system_clause_transfer_of_copyright"
          | "agreement_system_clause_moral_right"
          | "agreement_system_clause_infringement_of_ip_to_third_party"
          | "agreement_system_clause_period"
          | "agreement_system_clause_termination_right"
          | "agreement_system_clause_termination"
          | "agreement_system_clause_damages"
          | "agreement_share_purchase_clause_knowledge_qualifier"
          | "agreement_share_purchase_clause_purchase_price_adjustment"
          | "agreement_share_purchase_clause_condition_precedent_of_seller"
          | "agreement_share_purchase_clause_condition_precedent_of_buyer"
          | "agreement_share_purchase_clause_mac"
          | "agreement_share_purchase_clause_representation_and_warranty"
          | "agreement_share_purchase_clause_representation_incorporation"
          | "agreement_share_purchase_clause_representation_hr"
          | "agreement_share_purchase_clause_sandbagging"
          | "agreement_share_purchase_clause_non_competition"
          | "agreement_share_purchase_clause_continuation_of_employment"
          | "agreement_share_purchase_clause_indemnification"
          | "agreement_share_purchase_clause_limitation_of_indemnification"
          | "agreement_share_purchase_definition"
          | "agreement_share_purchase_transfer_agreement"
          | "agreement_share_purchase_price"
          | "agreement_share_purchase_closing"
          | "agreement_share_purchase_precondition_of_seller"
          | "agreement_share_purchase_precondition_of_buyer"
          | "agreement_share_purchase_rep_and_warranty_of_seller"
          | "agreement_share_purchase_rep_and_warranty_of_buyer"
          | "agreement_share_purchase_effect_of_dd"
          | "agreement_share_purchase_pre_covenants_procedure"
          | "agreement_share_purchase_pre_covenants_effort"
          | "agreement_share_purchase_pre_covenants_management"
          | "agreement_share_purchase_pre_covenants_access_to_information"
          | "agreement_share_purchase_pre_covenants_notice"
          | "agreement_share_purchase_post_covenants_non_compete"
          | "agreement_share_purchase_post_covenants_service"
          | "agreement_share_purchase_post_covenants_employment"
          | "agreement_share_purchase_post_covenants_waiver"
          | "agreement_share_purchase_compensation"
          | "agreement_share_purchase_compensation_process"
          | "agreement_share_purchase_compensation_limit"
          | "agreement_share_purchase_compensation_exclusive_remedy"
          | "agreement_share_purchase_termination"
          | "agreement_share_purchase_confidential_obligation"
          | "agreement_share_purchase_publication"
          | "agreement_share_purchase_expense"
          | "agreement_share_purchase_entire_agreement"
          | "agreement_share_purchase_notice"
          | "agreement_share_purchase_amendment_of_agreement"
          | "agreement_share_purchase_restriction_on_transfer"
          | "agreement_share_purchase_governing_law"
          | "agreement_share_purchase_dispute_resolution"
          | "agreement_share_purchase_counterpart"
          | "agreement_share_purchase_consultation_in_good_faith"
          | "agreement_nda_purpose"
          | "agreement_nda_confidential_infomation"
          | "agreement_nda_obligation"
          | "agreement_nda_management_of_confidential_information_neutral"
          | "agreement_nda_management_of_confidential_information_strict"
          | "agreement_nda_destruction_of_confidential_information_neutral"
          | "agreement_nda_destruction_of_confidential_information_strict"
          | "agreement_nda_accuracy_of_confidential_information"
          | "agreement_nda_right_of_confidential_information"
          | "agreement_nda_management_of_damages"
          | "agreement_nda_injunction"
          | "agreement_nda_contract_term"
          | "agreement_nda_controlling_language"
          | "agreement_nda_restriction_on_transfer"
          | "agreement_nda_dispute_resolution"
          | "agreement_nda_consultation_in_good_faith"
          | "agreement_service_delegation"
          | "agreement_service_job_description"
          | "agreement_service_commission_fee"
          | "agreement_service_payment"
          | "agreement_service_title_and_risk"
          | "agreement_service_confirmation_of_completion"
          | "agreement_service_ownership_and_risk"
          | "agreement_service_subcontracting"
          | "agreement_service_report"
          | "agreement_service_right_of_command"
          | "agreement_service_product_liability"
          | "agreement_service_non_conformity"
          | "agreement_service_ip"
          | "agreement_service_infringement_of_ip_to_third_party"
          | "agreement_service_contract_term"
          | "agreement_service_termination"
          | "agreement_service_force_majeure"
          | "agreement_service_commission_fee_terminated_without_cause"
          | "agreement_service_confidentiality_obligation"
          | "agreement_service_damages"
          | "agreement_service_of_survival_clause"
          | "agreement_service_restriction_on_transfer"
          | "agreement_service_dispute_resolution"
          | "agreement_service_consultation_in_good_faith"
          | "agreement_service_controlling_language"
          | "agreement_service_quasi_mandate_performing"
          | "agreement_license_patent_purpose"
          | "agreement_license_patent_ip_licensing"
          | "agreement_license_patent_maintainance_of_patent"
          | "agreement_license_patent_license_fee"
          | "agreement_license_patent_report_and_payment"
          | "agreement_license_patent_accounting_and_inspection"
          | "agreement_license_patent_disclaimer_of_warranty"
          | "agreement_license_patent_infringement_of_ip_from_third_party"
          | "agreement_license_patent_no_contest"
          | "agreement_license_patent_improvement"
          | "agreement_license_patent_confidentiality_obligation"
          | "agreement_license_patent_contract_term"
          | "agreement_license_patent_termination"
          | "agreement_license_patent_effect_of_termination"
          | "agreement_license_patent_restriction_on_transfer"
          | "agreement_license_patent_dispute_resolution"
          | "agreement_license_patent_consultation_in_good_faith"
          | "master_agreement_basic_agreement"
          | "master_agreement_individual_agreements"
          | "master_agreement_inspeciton"
          | "master_agreement_export_control"
          | "master_agreement_damages"
          | "master_agreement_termination"
          | "master_agreement_delivery_date"
          | "master_agreement_rejection_of_receipt"
          | "master_agreement_title_and_risk"
          | "master_agreement_payment"
          | "master_agreement_non_conformity"
          | "master_agreement_product_liability"
          | "master_agreement_manufacturing_process_control"
          | "master_agreement_discountinuation_of_production"
          | "master_agreement_notice"
          | "master_agreement_supplied_or_rental_items"
          | "master_agreement_duty_of_care"
          | "master_agreement_confidentiality_obligation"
          | "master_agreement_ip_ownership"
          | "master_agreement_copyright"
          | "master_agreement_infringement_of_ip_to_third_party"
          | "master_agreement_anti_social_forces"
          | "master_agreement_subcontracting"
          | "master_agreement_restriction_on_transfer"
          | "master_agreement_audit"
          | "master_agreement_termination_by_buyer"
          | "master_agreement_dispute_resolution"
          | "master_agreement_consultation_in_good_faith"
          | "master_agreement_contract_term"
          | "clauses_package_confidential_obligation"
          | "clauses_package_damages"
          | "clauses_package_force_majeure"
          | "clauses_package_anti_social_forces"
          | "clauses_package_publication"
          | "clauses_package_expense"
          | "clauses_package_amendment_of_agreement"
          | "clauses_package_entire_agreement"
          | "clauses_package_restriction_on_transfer"
          | "clauses_package_notice"
          | "clauses_package_severability"
          | "clauses_package_controlling_language"
          | "clauses_package_headline"
          | "clauses_package_governing_law"
          | "clauses_package_dispute_resolution"
          | "clauses_package_counterpart"
          | "clauses_package_consultation_in_good_faith"
          | "agreement_joint_research_joint_research"
          | "agreement_joint_research_period"
          | "agreement_joint_research_division_of_roles"
          | "agreement_joint_research_division_of_cost"
          | "agreement_joint_research_payment_of_cost"
          | "agreement_joint_research_location"
          | "agreement_joint_research_lending_facility"
          | "agreement_joint_research_worker"
          | "agreement_joint_research_meeting"
          | "agreement_joint_research_providing_information"
          | "agreement_joint_research_copyright"
          | "agreement_joint_research_shared_copyright"
          | "agreement_joint_research_private_copyright"
          | "agreement_joint_research_existing_copyright"
          | "agreement_joint_research_confidential_obligation"
          | "agreement_joint_research_publishment"
          | "agreement_joint_research_restriction_research_with_third_party"
          | "agreement_joint_research_absence_of_duty"
          | "agreement_joint_research_improvement"
          | "agreement_joint_research_no_subcontracting"
          | "agreement_joint_research_claim_from_third_party"
          | "agreement_joint_research_disclaimer_of_warranty"
          | "agreement_joint_research_damages"
          | "agreement_joint_research_restriction_on_transfer"
          | "agreement_joint_research_termination"
          | "agreement_joint_research_anti_social_forces"
          | "agreement_joint_research_contract_term"
          | "agreement_joint_research_governing_law"
          | "agreement_joint_research_dispute_resolution"
          | "agreement_joint_research_consultation_in_good_faith"
          | "agreement_service_subcontracting_personal_data"
          | "agreement_service_anti_social_forces"
          | "agreement_service_governing_law"
          | "agreement_license_patent_language"
          | "agreement_license_patent_governing_law"
          | "free_item_1"
          | "free_item_2"
          | "ma_analysis_party"
          | "ma_analysis_execution_date"
          | "definitions"
          | "ma_intergroup_reorganization"
          | "purchase_price"
          | "purchase_price_adjustment"
          | "earn_out"
          | "escrow"
          | "conditions_precedent_mac"
          | "accuracy_of_representations_and_warranties"
          | "financing_out"
          | "litigation_out"
          | "clearance_of_regulation"
          | "body_of_representations_and_warranties"
          | "reps_and_warranties_mac"
          | "potential_liabilities"
          | "full_disclosure_rep"
          | "sandbagging"
          | "anti_sandbagging"
          | "knowledge_qualifier"
          | "keyman_lock"
          | "notice_obligation_for_breach_of_reps_or_covenants"
          | "obligation_to_continue_employment"
          | "ma_analysis_non_compete"
          | "non_solicitation"
          | "limitation_of_liabilities"
          | "fundamental_representations"
          | "materiality_scrape"
          | "third_party_claim"
          | "damages_exclusion_of_tax_and_insurance_benefits"
          | "exclusive_remedy"
          | "special_indemnity"
          | "deemed_amount_of_damages"
          | "sha_party"
          | "sha_shareholding_ratio"
          | "right_to_appoint_officers"
          | "veto_right"
          | "obligation_of_prenotice"
          | "obligation_of_postnotice"
          | "deadlock"
          | "preemptive_right"
          | "right_of_first_refusal"
          | "right_of_first_offer"
          | "put_option"
          | "call_option"
          | "tag_along_rignt"
          | "drag_along_right"
          | "calculation_of_fair_value"
          | "exception_of_restriction_on_transfer"
          | "process_of_share_under_breach"
          | "termination_right"
          | "exclusivity"
          | "non_compete"
          | "minimum_purchase"
          | "most_favored_condition"
          | "share_transfer_then_prenotice"
          | "share_transfer_then_postnotice"
          | "share_transfer_then_termination"
          | "share_transfer_then_penalty_payment"
          | "share_transfer_then_other"
          | "share_contribution_then_prenotice"
          | "share_contribution_then_postnotice"
          | "share_contribution_then_termination"
          | "share_contribution_then_penalty_payment"
          | "share_contribution_then_other"
          | "corporate_merger_then_prenotice"
          | "corporate_merger_then_postnotice"
          | "corporate_merger_then_termination"
          | "corporate_merger_then_penalty_payment"
          | "corporate_merger_then_other"
          | "corporate_division_then_prenotice"
          | "corporate_division_then_postnotice"
          | "corporate_division_then_termination"
          | "corporate_division_then_penalty_payment"
          | "corporate_division_then_other"
          | "change_of_representative_then_prenotice"
          | "change_of_representative_then_postnotice"
          | "change_of_representative_then_termination"
          | "change_of_representative_then_penalty_payment"
          | "change_of_representative_then_other"
          | "change_of_tradename_then_prenotice"
          | "change_of_tradename_then_postnotice"
          | "change_of_tradename_then_termination"
          | "change_of_tradename_then_penalty_payment"
          | "change_of_tradename_then_other"
          | "business_transfer_then_prenotice"
          | "business_transfer_then_postnotice"
          | "business_transfer_then_termination"
          | "business_transfer_then_penalty_payment"
          | "business_transfer_then_other"
        )[];
      };
    };
    responses: {
      /** created BulkSave */
      201: unknown;
    };
  };
  putV2ClauseUserTagClauseUserTagId: {
    parameters: {
      formData: {
        /** このタグに付与されたメモ */
        description: string;
      };
      path: {
        clause_user_tag_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_ClauseUserTagEntity"];
      };
    };
  };
  deleteV2ClauseUserTagClauseUserTagId: {
    parameters: {
      path: {
        clause_user_tag_id: number;
      };
    };
    responses: {
      /** deleted ClauseUserTag */
      204: never;
    };
  };
  getV2ClauseUserTagMaster: {
    responses: {
      200: {
        schema: definitions["V2_ClauseUserTagMasterEntity"][];
      };
    };
  };
  postV2ClauseUserTagMaster: {
    parameters: {
      formData: {
        /** 条項管理タグマスタのラベル */
        label: string;
        /** この条項管理タグマスタに付与されたメモ */
        description?: string;
        /** 自動付与対象のフォルダIDの配列 */
        "auto_add_document_tree_ids[]"?: number[];
        /** 自動付与対象の台帳ID */
        auto_add_ledger_tag_id?: number;
        /** 見出しでの自動付与の正規表現 */
        auto_add_regex_header?: string;
        /** 本文での自動付与の正規表現 */
        auto_add_regex_body?: string;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_ClauseUserTagMasterEntity"];
      };
    };
  };
  putV2ClauseUserTagMasterClauseUserTagMasterId: {
    parameters: {
      formData: {
        /** 条項管理タグマスタのラベル */
        label?: string;
        /** この条項管理タグマスタに付与されたメモ */
        description?: string;
        /** 自動付与対象のフォルダIDの配列 */
        "auto_add_document_tree_ids[]"?: number[];
        /** 自動付与対象の台帳ID */
        auto_add_ledger_tag_id?: number;
        /** 見出しでの自動付与の正規表現 */
        auto_add_regex_header?: string;
        /** 本文での自動付与の正規表現 */
        auto_add_regex_body?: string;
      };
      path: {
        clause_user_tag_master_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_ClauseUserTagMasterEntity"];
      };
    };
  };
  deleteV2ClauseUserTagMasterClauseUserTagMasterId: {
    parameters: {
      path: {
        clause_user_tag_master_id: number;
      };
    };
    responses: {
      /** deleted ClauseUserTagMaster */
      204: never;
    };
  };
  /** analyze diff of specified documents */
  postV2DocumentDiff: {
    parameters: {
      formData: {
        /** 比較対象のドキュメントID */
        target_document_id: number;
        /** 比較元のドキュメントID */
        base_document_id: number;
      };
    };
    responses: {
      /** analyze diff of specified documents */
      201: unknown;
    };
  };
  /**
   * GET api/v2/user_groupと異なり、paginationなどの処理を除いて高速に候補を返すことに特化しているため、候補の絞り込みにはこちらを使用してください。 <br />
   * (補足) <br />
   * ・is_selectable: trueなグループのみレスポンスに含む <br />
   * ・名前(name)の昇順に並ぶ
   */
  getV2SuggestUserGroup: {
    parameters: {
      query: {
        /** 絞り込みキーワード(ユーザーグループ名の部分一致) */
        q?: string;
        /** 指定した権限を保持するユーザーグループのみ含める。 owned_access_levelsと同時に指定が必要。 (指定例) workflow:matter_form:1 */
        owned_resource_identifier?: string;
        /** 指定した権限(複数指定時はいずれかのアクセスレベル)を保持するユーザーグループのみ含める。 owned_access_levelsと同時に指定が必要。 (指定例) admin */
        "owned_access_levels[]"?: string[];
        /** 取得件数(デフォルト: 20, 最大値: 100) */
        per?: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Suggest_UserGroupListEntity"];
      };
    };
  };
  /**
   * GET api/v2/userと異なり、paginationなどの処理を除いて高速に候補を返すことに特化しているため、候補の絞り込みにはこちらを使用してください。 <br />
   * (補足) <br />
   * ・API呼び出しユーザーがsupplierの場合のみ、レスポンスにsupplier userを含む <br />
   * ・API呼び出しユーザーがsupplierまたはtester user (@mntsq.com)の場合のみ、レスポンスにtester userを含む <br />
   * ・非表示(status: archive), 停止中(status: suspend)ユーザーをレスポンスに含まない <br />
   * ・非表示(status: archive), 停止中(status: suspend)ユーザーをレスポンスに含まない <br />
   * ・名前(name)の昇順に並ぶ
   */
  getV2SuggestUser: {
    parameters: {
      query: {
        /** 絞り込みキーワード(user.nameまたはuser.emailへの部分一致) */
        q?: string;
        /** 指定した権限を保持するユーザーのみ含める。 owned_access_levelsと同時に指定が必要。 (指定例) workflow:matter_form:1 */
        owned_resource_identifier?: string;
        /** 指定した権限(複数指定時はいずれかのアクセスレベル)を保持するユーザーのみ含める。owned_resource_identifierと同時に指定が必要。 (指定例) admin */
        "owned_access_levels[]"?: string[];
        /** 取得件数(デフォルト: 20, 最大値: 100) */
        per?: number;
      };
      formData: {
        /** レスポンスに含めるUser.user_typeを指定する。デフォルトは非表示（archive）, 停止（suspend）を除外（=liveのみ） */
        "statuses[]"?: ("live" | "suspend" | "archive")[];
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Suggest_UserListEntity"];
      };
    };
  };
  getV2SuggestClientMaster: {
    parameters: {
      query: {
        /** キーワード */
        q?: string;
        /** グループ会社かどうか */
        is_group_company?: boolean;
        /** 取得件数(デフォルト: 20, 最大値: 100) */
        size?: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Suggest_ClientMasterListEntity"];
      };
    };
  };
  getV2SuggestTag: {
    parameters: {
      query: {
        /** キーワード */
        q?: string;
        /** 取得件数(デフォルト: 20, 最大値: 100) */
        size?: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Suggest_TagListEntity"];
      };
    };
  };
  /** export searched matter list async */
  postV2SearchMatterExport: {
    parameters: {
      formData: {
        /** ソート対象 */
        sort_by?: "created_at" | "last_actioned_at" | "deadline_date" | "score";
        /** 昇順・降順指定。sort_byで指定したフィールドの値が存在しない(null等の) レコードは、asc/desc関係なく最下位に並べられる */
        sort_option?: "desc" | "asc";
        /** 担当者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        responsible_user_ids?: string;
        /** 担当者(user_group_id)。カンマ区切りで複数指定可 (OR結合) */
        responsible_user_group_ids?: string;
        /** 依頼者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        requester_user_ids?: string;
        /** 依頼者(user_group_id)。カンマ区切りで複数指定可 (OR結合) */
        requester_user_group_ids?: string;
        /** 関係者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        related_user_ids?: string;
        /** 関係者(user_group_id)。カンマ区切りで複数指定可 (OR結合) */
        related_user_group_ids?: string;
        /** 案件作成者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        creator_user_ids?: string;
        /** 取引先(client_master_id)。カンマ区切りで複数指定可 (OR結合) */
        client_master_ids?: string;
        /** 依頼日(from)。YYYY-MM-DD形式 */
        created_at_date_from?: string;
        /** 依頼日(to)。YYYY-MM-DD形式 */
        created_at_date_to?: string;
        /** 希望期限(from)。YYYY-MM-DD形式 */
        deadline_date_from?: string;
        /** 希望期限(to)。YYYY-MM-DD形式 */
        deadline_date_to?: string;
        /** 最終更新日(from)。YYYY-MM-DD形式 */
        last_actioned_at_date_from?: string;
        /** 最終更新日(to)。YYYY-MM-DD形式 */
        last_actioned_at_date_to?: string;
        /** 案件フォーム(matter_form_id)。カンマ区切りで複数指定可 (OR結合) */
        matter_form_ids?: string;
        /** 案件のステータス(matter_status_id)。カンマ区切りで複数指定可 (OR結合)。同じステータスの絞り込みという意味で、matter_status_typesの条件とはOR結合になる */
        matter_status_ids?: string;
        /** 案件のステータス種別(matter_status.type)。カンマ区切りで複数指定可 (OR結合)。typeはInitial,InProgress,Completionのいずれか。同じステータスの絞り込みという意味で、matter_status_idsの条件とはOR結合になる */
        matter_status_types?: string;
        /** `テキスト検索条件 / JSONで記述: [{"q": "{条件値}", "scope": "{検索範囲}"}] / scopeは以下のいずれかを単一指定: 「keyword (案件番号、タイトル、説明、コメントから検索) or matter_custom_column_(string|free_text)_{id} (カスタム項目で検索)」 / 例: [{"q":"研究開発について", "scope":"keyword" }, {"q":"損害賠償", "scope": "matter_custom_column_string_50"}]` */
        q_attributes?: string;
        /** `カスタム項目に対する完全一致条件 / JSONで記述: [{"query": {条件値。multi_select|single_select|listの場合は選択肢(matter_custom_column_option.id)のスペース区切り並び。booleanの場合はtrue or false}, "columns": "matter_custom_column_(multi_select|single_select|list|boolean)_{id}"}] / 例: [{"query": "1 2 3", "columns": "matter_custom_column_multi_select_123"}, {"query": true, "columns": "matter_custom_column_boolean_345"}]` */
        matter_custom_column_term_filters?: string;
        /** `カスタム項目に対する範囲条件 / JSONで記述: [{"gte": {条件値}, "lte": {条件値}, "column": "matter_custom_column_(date_range_{id}_from|date_range_{id}_to|number_{id}|date_{id})"}] / 例: [{"column":"matter_custom_column_date_range_234_from","gte":"2022-07-01","lte":"2022-07-02"}, {"column":"matter_custom_column_date_range_234_to","gte":"2022-07-03","lte":"2022-07-04"}, {"column":"matter_custom_column_number_345","gte":"100","lte":"200"}]` */
        matter_custom_column_range_filters?: string;
      };
    };
    responses: {
      /** export searched matter list async */
      201: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  getV2SearchMatter: {
    parameters: {
      query: {
        /** ソート対象 */
        sort_by?: "created_at" | "last_actioned_at" | "deadline_date" | "score";
        /** 昇順・降順指定。sort_byで指定したフィールドの値が存在しない(null等の) レコードは、asc/desc関係なく最下位に並べられる */
        sort_option?: "desc" | "asc";
        /** paginationのpage */
        page?: number;
        /** paginationのper */
        per?: number;
        /** ハイライトを使うかどうか */
        use_highlight?: boolean;
        /** 担当者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        responsible_user_ids?: string;
        /** 担当者(user_group_id)。カンマ区切りで複数指定可 (OR結合) */
        responsible_user_group_ids?: string;
        /** 依頼者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        requester_user_ids?: string;
        /** 依頼者(user_group_id)。カンマ区切りで複数指定可 (OR結合) */
        requester_user_group_ids?: string;
        /** 関係者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        related_user_ids?: string;
        /** 関係者(user_group_id)。カンマ区切りで複数指定可 (OR結合) */
        related_user_group_ids?: string;
        /** 案件作成者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        creator_user_ids?: string;
        /** 取引先(client_master_id)。カンマ区切りで複数指定可 (OR結合) */
        client_master_ids?: string;
        /** 依頼日(from)。YYYY-MM-DD形式 */
        created_at_date_from?: string;
        /** 依頼日(to)。YYYY-MM-DD形式 */
        created_at_date_to?: string;
        /** 希望期限(from)。YYYY-MM-DD形式 */
        deadline_date_from?: string;
        /** 希望期限(to)。YYYY-MM-DD形式 */
        deadline_date_to?: string;
        /** 最終更新日(from)。YYYY-MM-DD形式 */
        last_actioned_at_date_from?: string;
        /** 最終更新日(to)。YYYY-MM-DD形式 */
        last_actioned_at_date_to?: string;
        /** 案件フォーム(matter_form_id)。カンマ区切りで複数指定可 (OR結合) */
        matter_form_ids?: string;
        /** 案件のステータス(matter_status_id)。カンマ区切りで複数指定可 (OR結合)。同じステータスの絞り込みという意味で、matter_status_typesの条件とはOR結合になる */
        matter_status_ids?: string;
        /** 案件のステータス種別(matter_status.type)。カンマ区切りで複数指定可 (OR結合)。typeはInitial,InProgress,Completionのいずれか。同じステータスの絞り込みという意味で、matter_status_idsの条件とはOR結合になる */
        matter_status_types?: string;
        /** `テキスト検索条件 / JSONで記述: [{"q": "{条件値}", "scope": "{検索範囲}"}] / scopeは以下のいずれかを単一指定: 「keyword (案件番号、タイトル、説明、コメントから検索) or matter_custom_column_(string|free_text)_{id} (カスタム項目で検索)」 / 例: [{"q":"研究開発について", "scope":"keyword" }, {"q":"損害賠償", "scope": "matter_custom_column_string_50"}]` */
        q_attributes?: string;
        /** `カスタム項目に対する完全一致条件 / JSONで記述: [{"query": {条件値。multi_select|single_select|listの場合は選択肢(matter_custom_column_option.id)のスペース区切り並び。booleanの場合はtrue or false}, "columns": "matter_custom_column_(multi_select|single_select|list|boolean)_{id}"}] / 例: [{"query": "1 2 3", "columns": "matter_custom_column_multi_select_123"}, {"query": true, "columns": "matter_custom_column_boolean_345"}]` */
        matter_custom_column_term_filters?: string;
        /** `カスタム項目に対する範囲条件 / JSONで記述: [{"gte": {条件値}, "lte": {条件値}, "column": "matter_custom_column_(date_range_{id}_from|date_range_{id}_to|number_{id}|date_{id})"}] / 例: [{"column":"matter_custom_column_date_range_234_from","gte":"2022-07-01","lte":"2022-07-02"}, {"column":"matter_custom_column_date_range_234_to","gte":"2022-07-03","lte":"2022-07-04"}, {"column":"matter_custom_column_number_345","gte":"100","lte":"200"}]` */
        matter_custom_column_range_filters?: string;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Search_MatterListWithStatsEntity"];
      };
    };
  };
  /** 指定されたdocumentの関連契約と思われるdocumentを検索します */
  getV2SearchRelatedAgreementCandidate: {
    parameters: {
      query: {
        /** 対象のドキュメントID */
        document_id: number;
        /** 検索対象の台帳ID(カンマ区切り) */
        ledger_tag?: string;
        /** 取得件数(デフォルト: 20, 最大値: 30) */
        size?: number;
      };
    };
    responses: {
      /** 指定されたdocumentの関連契約と思われるdocumentを検索します */
      200: {
        schema: definitions["V2_DocumentMinimumEntity"][];
      };
    };
  };
  postV2SearchClauseExport: {
    parameters: {
      formData: {
        /** 生の検索クエリ。フォーマットはhttps://github.com/MNTSQ/mntsq/blob/develop/docs/search/raw_queries_grammar.mdを参照 */
        raw_queries?: string;
        /** 検索時に利用するシノニムのID */
        synonym_id?: string;
        /** `検索キーワードとその範囲(単一指定)。JSONで記述[{"q": "キーワード", "scope": "text"}]。document/reportのscope: all(default)/file_name_label/text/note/text_and_note/favorite_note/sticky_note/commentary/custom_column_{custom_columnの種類}_{custom_columnのid}, clauseのscope: all/title/text/favorite_note。` */
        q_attributes?: string;
        /** document_tree_id */
        target_document_tree_id?: number;
        /** 契約類型。カンマ区切りで複数指定可。マイナス指定可 */
        contract_type?: string;
        /** 条項類型タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_tag?: string;
        /** 条項管理タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_user_tag?: string;
        /** ドキュメント種別。カンマ区切りで複数指定可。マイナス指定可 */
        document_type?: string;
        /** グループ会社のclient_master_id。カンマ区切りで複数指定可 */
        parties_group_company?: string;
        /** グループ会社以外のclient_master_id。カンマ区切りで複数指定可 */
        parties_other_than_group_company?: string;
        /** ファイルフォーマット。カンマ区切りで複数指定可。pdf,word,text,powerpoint,excel,email,other */
        file_format_for_search?: string;
        /** 締結版かどうか */
        is_final_version?: boolean;
        /** 取引金額の貨幣 jpy / usd */
        transaction_amount_currency?: string;
        /** 取引金額 */
        transaction_amount_from?: number;
        /** 取引金額 */
        transaction_amount_to?: number;
        /** 外部参照情報。MNTSQ外の客先システムのIDなど。 */
        external_reference_info?: string;
        /** ドキュメント生成年(ex: 2001,2002) カンマ区切りで複数指定可 */
        created_at_for_search_year?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_from?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_to?: string;
        /** ex 2001-01-01 */
        effective_date_from?: string;
        /** ex 2001-01-01 */
        effective_date_to?: string;
        /** ex 2001-01-01 */
        expired_on_from?: string;
        /** ex 2001-01-01 */
        expired_on_to?: string;
        /** ex 2001-01-01 */
        execution_date_from?: string;
        /** ex 2001-01-01 */
        execution_date_to?: string;
        /** 担当者ID。カンマ区切りで複数指定可 */
        responsible_user_ids?: string;
        /** 担当ユーザーグループID。カンマ区切りで複数指定可 */
        responsible_user_group_ids?: string;
        /** 準拠法コード */
        governing_law?: string;
        /** 言語。カンマ区切りで複数指定可 */
        language_for_search?: string;
        /** 管理タグID。カンマ区切りで複数指定可 */
        management_tag?: string;
        /** 台帳タグID。カンマ区切りで複数指定可 */
        ledger_tag?: string;
        /** すべてのアクセス可能な台帳tagを指定する */
        use_all_accessible_ledger_tags?: boolean;
        /** 何らかの検索可能な値がフィールドに登録されているか？カンマ区切りで複数指定可。マイナス指定可 */
        field_value_exists?: string;
        /** 台帳横断検索メニューからエクスポートする */
        within_cross_ledgers?: boolean;
        /** 台帳タグID。1つだけ指定可 */
        review_target_ledger_tag?: string;
        /** review_target_ledger_tag で指定した台帳のレビュー状況 */
        ledger_review_status?: "todo" | "done" | "all";
        /** 自動更新期間の下限 */
        automatic_renewal_period_value_from?: number;
        /** 自動更新期間の上限 */
        automatic_renewal_period_value_to?: number;
        /** 自動更新年月日の単位（year・month・day） */
        automatic_renewal_period_date_unit?: "year" | "month" | "day";
        /** 自動更新を行わない場合の通知期限の下限 */
        non_renewal_notice_deadline_value_from?: number;
        /** 自動更新を行わない場合の通知期限の上限 */
        non_renewal_notice_deadline_value_to?: number;
        /** 自動更新しない旨の通知期限単位（year・month・day） */
        non_renewal_notice_deadline_date_unit?: "year" | "month" | "day";
        /** 有効 or 失効 */
        status?: "available" | "unavailable";
        /** 自動更新の有無 */
        is_automatic_renewal?: boolean;
        /** 通知設定あり(送信済み)/通知設定あり(送信済み)/設定なしのnotificationが存在するか */
        notification_status?: string;
        /** カスタムカラムに対するフィルタリング条件。JSONで記述[{"query": "条件", "columns": "ledger_custom_column_single_select_1"}]。query部分の書式はelasticsearchのsimple query string queryに準拠。columns部分はカスタムフィールド名。 */
        ledger_custom_column_term_filters?: string;
        /** カスタムカラムに対する範囲フィルタリング条件。JSONで記述[{"gte": "条件", "lte": "条件", "column": "ledger_custom_column_date_1"}]。column部分は日付、数値の場合カスタムフィールド名。日付範囲の場合{カスタムフィールド名}_from/_to。 */
        ledger_custom_column_range_filters?: string;
        /** 今日から指定した月数分created_at_for_searchを遡ったデータを範囲検索します */
        created_at_offset_month?: number;
        /** お気に入りされているか */
        is_favored?: boolean;
        /** 社内推奨か */
        is_public_favored?: boolean;
        /** 個人付箋がついているか */
        has_stickies?: boolean;
        /** 共有付箋がついているか */
        has_public_stickies?: boolean;
        /** 雛型の指定(mntsq or user_defined) */
        credit_title?: string;
        /** 1つのDocumentのみ出力する場合に対象を指定する */
        document_id?: number;
        /** 「取引金額なし」かどうか */
        is_transaction_amount_zero?: boolean;
      };
    };
    responses: {
      201: unknown;
    };
  };
  getV2SearchClause: {
    parameters: {
      query: {
        /** 生の検索クエリ。フォーマットはhttps://github.com/MNTSQ/mntsq/blob/develop/docs/search/raw_queries_grammar.mdを参照 */
        raw_queries?: string;
        /** 検索時に利用するシノニムのID */
        synonym_id?: string;
        /** `検索キーワードとその範囲(単一指定)。JSONで記述[{"q": "キーワード", "scope": "text"}]。document/reportのscope: all(default)/file_name_label/text/note/text_and_note/favorite_note/sticky_note/commentary/custom_column_{custom_columnの種類}_{custom_columnのid}, clauseのscope: all/title/text/favorite_note。` */
        q_attributes?: string;
        /** document_tree_id */
        target_document_tree_id?: number;
        /** 契約類型。カンマ区切りで複数指定可。マイナス指定可 */
        contract_type?: string;
        /** 条項類型タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_tag?: string;
        /** 条項管理タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_user_tag?: string;
        /** ドキュメント種別。カンマ区切りで複数指定可。マイナス指定可 */
        document_type?: string;
        /** グループ会社のclient_master_id。カンマ区切りで複数指定可 */
        parties_group_company?: string;
        /** グループ会社以外のclient_master_id。カンマ区切りで複数指定可 */
        parties_other_than_group_company?: string;
        /** ファイルフォーマット。カンマ区切りで複数指定可。pdf,word,text,powerpoint,excel,email,other */
        file_format_for_search?: string;
        /** 締結版かどうか */
        is_final_version?: boolean;
        /** 取引金額の貨幣 jpy / usd */
        transaction_amount_currency?: string;
        /** 取引金額 */
        transaction_amount_from?: number;
        /** 取引金額 */
        transaction_amount_to?: number;
        /** 外部参照情報。MNTSQ外の客先システムのIDなど。 */
        external_reference_info?: string;
        /** ドキュメント生成年(ex: 2001,2002) カンマ区切りで複数指定可 */
        created_at_for_search_year?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_from?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_to?: string;
        /** ex 2001-01-01 */
        effective_date_from?: string;
        /** ex 2001-01-01 */
        effective_date_to?: string;
        /** ex 2001-01-01 */
        expired_on_from?: string;
        /** ex 2001-01-01 */
        expired_on_to?: string;
        /** ex 2001-01-01 */
        execution_date_from?: string;
        /** ex 2001-01-01 */
        execution_date_to?: string;
        /** 担当者ID。カンマ区切りで複数指定可 */
        responsible_user_ids?: string;
        /** 担当ユーザーグループID。カンマ区切りで複数指定可 */
        responsible_user_group_ids?: string;
        /** 準拠法コード */
        governing_law?: string;
        /** 言語。カンマ区切りで複数指定可 */
        language_for_search?: string;
        /** 管理タグID。カンマ区切りで複数指定可 */
        management_tag?: string;
        /** 台帳タグID。カンマ区切りで複数指定可 */
        ledger_tag?: string;
        /** すべてのアクセス可能な台帳tagを指定する */
        use_all_accessible_ledger_tags?: boolean;
        /** 何らかの検索可能な値がフィールドに登録されているか？カンマ区切りで複数指定可。マイナス指定可 */
        field_value_exists?: string;
        /** 台帳横断検索メニューからエクスポートする */
        within_cross_ledgers?: boolean;
        /** `ソート対象。対応している値はscore(関連度順), created_at(MNTSQへの登録日時順), transaction_amount(取引金額), execution_date, effective_date, expired_on, ledger_custom_column_(number|date)_:id, ledger_custom_column_date_range_:id_(from|to)` */
        sort_by?: string;
        /** 昇順・降順指定(default: desc)、sort_byで指定したフィールドの値が存在しない(null等の)レコードは、asc/desc関係なく最下位に並べられる */
        sort_option?: "desc" | "asc";
        /** paginationのpage */
        page?: number;
        /** paginationのper */
        per?: number;
        /** レスポンスの種類 */
        response_type?: "minimum" | "full";
        /** お気に入りされているか */
        is_favored?: boolean;
        /** 社内推奨か */
        is_public_favored?: boolean;
        /** 雛型の指定(mntsq or user_defined) */
        credit_title?: string;
        /** 重複している条項を結果から除去するか */
        without_duplication?: boolean;
        /** minhashベースの重複排除を使うか。trueにした場合、without_duplicationはfalse、キーワードのハイライト処理は行われず、perとpageの値は無視される。 */
        use_result_grouping?: boolean;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Search_ClauseListWithStatsEntity"];
      };
    };
  };
  /**
   * review_target_ledger_tagあり、ledger_tagあり/なし: 指定された台帳の個別と共通のカスタム項目を出力<br/>
   * review_target_ledger_tagなし、ledger_tagあり: 指定された台帳の共通のカスタム項目を出力<br/>
   * review_target_ledger_tagなし、ledger_tagなし: 権限のある台帳の共通のカスタム項目を出力
   */
  postV2SearchLedgerExport: {
    parameters: {
      formData: {
        /** 生の検索クエリ。フォーマットはhttps://github.com/MNTSQ/mntsq/blob/develop/docs/search/raw_queries_grammar.mdを参照 */
        raw_queries?: string;
        /** 検索時に利用するシノニムのID */
        synonym_id?: string;
        /** `検索キーワードとその範囲(単一指定)。JSONで記述[{"q": "キーワード", "scope": "text"}]。document/reportのscope: all(default)/file_name_label/text/note/text_and_note/favorite_note/sticky_note/commentary/custom_column_{custom_columnの種類}_{custom_columnのid}, clauseのscope: all/title/text/favorite_note。` */
        q_attributes?: string;
        /** document_tree_id */
        target_document_tree_id?: number;
        /** 契約類型。カンマ区切りで複数指定可。マイナス指定可 */
        contract_type?: string;
        /** 条項類型タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_tag?: string;
        /** 条項管理タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_user_tag?: string;
        /** ドキュメント種別。カンマ区切りで複数指定可。マイナス指定可 */
        document_type?: string;
        /** グループ会社のclient_master_id。カンマ区切りで複数指定可 */
        parties_group_company?: string;
        /** グループ会社以外のclient_master_id。カンマ区切りで複数指定可 */
        parties_other_than_group_company?: string;
        /** ファイルフォーマット。カンマ区切りで複数指定可。pdf,word,text,powerpoint,excel,email,other */
        file_format_for_search?: string;
        /** 締結版かどうか */
        is_final_version?: boolean;
        /** 取引金額の貨幣 jpy / usd */
        transaction_amount_currency?: string;
        /** 取引金額 */
        transaction_amount_from?: number;
        /** 取引金額 */
        transaction_amount_to?: number;
        /** 外部参照情報。MNTSQ外の客先システムのIDなど。 */
        external_reference_info?: string;
        /** ドキュメント生成年(ex: 2001,2002) カンマ区切りで複数指定可 */
        created_at_for_search_year?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_from?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_to?: string;
        /** ex 2001-01-01 */
        effective_date_from?: string;
        /** ex 2001-01-01 */
        effective_date_to?: string;
        /** ex 2001-01-01 */
        expired_on_from?: string;
        /** ex 2001-01-01 */
        expired_on_to?: string;
        /** ex 2001-01-01 */
        execution_date_from?: string;
        /** ex 2001-01-01 */
        execution_date_to?: string;
        /** 担当者ID。カンマ区切りで複数指定可 */
        responsible_user_ids?: string;
        /** 担当ユーザーグループID。カンマ区切りで複数指定可 */
        responsible_user_group_ids?: string;
        /** 準拠法コード */
        governing_law?: string;
        /** 言語。カンマ区切りで複数指定可 */
        language_for_search?: string;
        /** 管理タグID。カンマ区切りで複数指定可 */
        management_tag?: string;
        /** 台帳タグID。カンマ区切りで複数指定可 */
        ledger_tag?: string;
        /** すべてのアクセス可能な台帳tagを指定する */
        use_all_accessible_ledger_tags?: boolean;
        /** 何らかの検索可能な値がフィールドに登録されているか？カンマ区切りで複数指定可。マイナス指定可 */
        field_value_exists?: string;
        /** 台帳横断検索メニューからエクスポートする */
        within_cross_ledgers?: boolean;
        /** 台帳タグID。1つだけ指定可 */
        review_target_ledger_tag?: string;
        /** review_target_ledger_tag で指定した台帳のレビュー状況 */
        ledger_review_status?: "todo" | "done" | "all";
        /** 自動更新期間の下限 */
        automatic_renewal_period_value_from?: number;
        /** 自動更新期間の上限 */
        automatic_renewal_period_value_to?: number;
        /** 自動更新年月日の単位（year・month・day） */
        automatic_renewal_period_date_unit?: "year" | "month" | "day";
        /** 自動更新を行わない場合の通知期限の下限 */
        non_renewal_notice_deadline_value_from?: number;
        /** 自動更新を行わない場合の通知期限の上限 */
        non_renewal_notice_deadline_value_to?: number;
        /** 自動更新しない旨の通知期限単位（year・month・day） */
        non_renewal_notice_deadline_date_unit?: "year" | "month" | "day";
        /** 有効 or 失効 */
        status?: "available" | "unavailable";
        /** 自動更新の有無 */
        is_automatic_renewal?: boolean;
        /** 通知設定あり(送信済み)/通知設定あり(送信済み)/設定なしのnotificationが存在するか */
        notification_status?: string;
        /** カスタムカラムに対するフィルタリング条件。JSONで記述[{"query": "条件", "columns": "ledger_custom_column_single_select_1"}]。query部分の書式はelasticsearchのsimple query string queryに準拠。columns部分はカスタムフィールド名。 */
        ledger_custom_column_term_filters?: string;
        /** カスタムカラムに対する範囲フィルタリング条件。JSONで記述[{"gte": "条件", "lte": "条件", "column": "ledger_custom_column_date_1"}]。column部分は日付、数値の場合カスタムフィールド名。日付範囲の場合{カスタムフィールド名}_from/_to。 */
        ledger_custom_column_range_filters?: string;
        /** お気に入りされているか */
        is_favored?: boolean;
        /** 社内推奨か */
        is_public_favored?: boolean;
        /** 個人付箋がついているか */
        has_stickies?: boolean;
        /** 共有付箋がついているか */
        has_public_stickies?: boolean;
        /** 雛型の指定(mntsq or user_defined) */
        credit_title?: string;
        /** 当事者のclient_master_idの配列 */
        "party_client_master_ids[]"?: number[];
        /** 「取引金額なし」かどうか */
        is_transaction_amount_zero?: boolean;
      };
    };
    responses: {
      201: unknown;
    };
  };
  getV2SearchDocument: {
    parameters: {
      query: {
        /** 生の検索クエリ。フォーマットはhttps://github.com/MNTSQ/mntsq/blob/develop/docs/search/raw_queries_grammar.mdを参照 */
        raw_queries?: string;
        /** 検索時に利用するシノニムのID */
        synonym_id?: string;
        /** `検索キーワードとその範囲(単一指定)。JSONで記述[{"q": "キーワード", "scope": "text"}]。document/reportのscope: all(default)/file_name_label/text/note/text_and_note/favorite_note/sticky_note/commentary/custom_column_{custom_columnの種類}_{custom_columnのid}, clauseのscope: all/title/text/favorite_note。` */
        q_attributes?: string;
        /** document_tree_id */
        target_document_tree_id?: number;
        /** 契約類型。カンマ区切りで複数指定可。マイナス指定可 */
        contract_type?: string;
        /** 条項類型タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_tag?: string;
        /** 条項管理タグ。カンマ区切りで複数指定可。マイナス指定可 */
        clause_user_tag?: string;
        /** ドキュメント種別。カンマ区切りで複数指定可。マイナス指定可 */
        document_type?: string;
        /** グループ会社のclient_master_id。カンマ区切りで複数指定可 */
        parties_group_company?: string;
        /** グループ会社以外のclient_master_id。カンマ区切りで複数指定可 */
        parties_other_than_group_company?: string;
        /** ファイルフォーマット。カンマ区切りで複数指定可。pdf,word,text,powerpoint,excel,email,other */
        file_format_for_search?: string;
        /** 締結版かどうか */
        is_final_version?: boolean;
        /** 取引金額の貨幣 jpy / usd */
        transaction_amount_currency?: string;
        /** 取引金額 */
        transaction_amount_from?: number;
        /** 取引金額 */
        transaction_amount_to?: number;
        /** 外部参照情報。MNTSQ外の客先システムのIDなど。 */
        external_reference_info?: string;
        /** ドキュメント生成年(ex: 2001,2002) カンマ区切りで複数指定可 */
        created_at_for_search_year?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_from?: string;
        /** ex 2001-01-01 00:12:34 */
        created_at_for_search_to?: string;
        /** ex 2001-01-01 */
        effective_date_from?: string;
        /** ex 2001-01-01 */
        effective_date_to?: string;
        /** ex 2001-01-01 */
        expired_on_from?: string;
        /** ex 2001-01-01 */
        expired_on_to?: string;
        /** ex 2001-01-01 */
        execution_date_from?: string;
        /** ex 2001-01-01 */
        execution_date_to?: string;
        /** 担当者ID。カンマ区切りで複数指定可 */
        responsible_user_ids?: string;
        /** 担当ユーザーグループID。カンマ区切りで複数指定可 */
        responsible_user_group_ids?: string;
        /** 準拠法コード */
        governing_law?: string;
        /** 言語。カンマ区切りで複数指定可 */
        language_for_search?: string;
        /** 管理タグID。カンマ区切りで複数指定可 */
        management_tag?: string;
        /** 台帳タグID。カンマ区切りで複数指定可 */
        ledger_tag?: string;
        /** すべてのアクセス可能な台帳tagを指定する */
        use_all_accessible_ledger_tags?: boolean;
        /** 何らかの検索可能な値がフィールドに登録されているか？カンマ区切りで複数指定可。マイナス指定可 */
        field_value_exists?: string;
        /** 台帳横断検索メニューからエクスポートする */
        within_cross_ledgers?: boolean;
        /** `ソート対象。対応している値はscore(関連度順), created_at(MNTSQへの登録日時順), transaction_amount(取引金額), execution_date, effective_date, expired_on, ledger_custom_column_(number|date)_:id, ledger_custom_column_date_range_:id_(from|to)` */
        sort_by?: string;
        /** 昇順・降順指定(default: desc)、sort_byで指定したフィールドの値が存在しない(null等の)レコードは、asc/desc関係なく最下位に並べられる */
        sort_option?: "desc" | "asc";
        /** paginationのpage */
        page?: number;
        /** paginationのper */
        per?: number;
        /** 台帳タグID。1つだけ指定可 */
        review_target_ledger_tag?: string;
        /** review_target_ledger_tag で指定した台帳のレビュー状況 */
        ledger_review_status?: "todo" | "done" | "all";
        /** 自動更新期間の下限 */
        automatic_renewal_period_value_from?: number;
        /** 自動更新期間の上限 */
        automatic_renewal_period_value_to?: number;
        /** 自動更新年月日の単位（year・month・day） */
        automatic_renewal_period_date_unit?: "year" | "month" | "day";
        /** 自動更新を行わない場合の通知期限の下限 */
        non_renewal_notice_deadline_value_from?: number;
        /** 自動更新を行わない場合の通知期限の上限 */
        non_renewal_notice_deadline_value_to?: number;
        /** 自動更新しない旨の通知期限単位（year・month・day） */
        non_renewal_notice_deadline_date_unit?: "year" | "month" | "day";
        /** 有効 or 失効 */
        status?: "available" | "unavailable";
        /** 自動更新の有無 */
        is_automatic_renewal?: boolean;
        /** 通知設定あり(送信済み)/通知設定あり(送信済み)/設定なしのnotificationが存在するか */
        notification_status?: string;
        /** カスタムカラムに対するフィルタリング条件。JSONで記述[{"query": "条件", "columns": "ledger_custom_column_single_select_1"}]。query部分の書式はelasticsearchのsimple query string queryに準拠。columns部分はカスタムフィールド名。 */
        ledger_custom_column_term_filters?: string;
        /** カスタムカラムに対する範囲フィルタリング条件。JSONで記述[{"gte": "条件", "lte": "条件", "column": "ledger_custom_column_date_1"}]。column部分は日付、数値の場合カスタムフィールド名。日付範囲の場合{カスタムフィールド名}_from/_to。 */
        ledger_custom_column_range_filters?: string;
        /** 今日から指定した月数分created_at_for_searchを遡ったデータを範囲検索します */
        created_at_offset_month?: number;
        /** 同一フォルダにあるものを検索結果から除去するか */
        without_duplication?: boolean;
        /** レスポンスの種類 */
        response_type?: "minimum" | "ledger" | "full";
        /** お気に入りされているか */
        is_favored?: boolean;
        /** 社内推奨か */
        is_public_favored?: boolean;
        /** 個人付箋がついているか */
        has_stickies?: boolean;
        /** 共有付箋がついているか */
        has_public_stickies?: boolean;
        /** 雛型の指定(mntsq or user_defined) */
        credit_title?: string;
        /** 「取引金額なし」かどうか */
        is_transaction_amount_zero?: boolean;
      };
      formData: {
        /** 当事者のclient_master_idの配列 */
        "party_client_master_ids[]"?: number[];
      };
    };
    responses: {
      200: {
        schema: definitions["V2_Search_DocumentListWithStatsEntity"];
      };
    };
  };
  /** post search synonyms */
  postV2SearchEngineManagementSynonyms: {
    parameters: {
      formData: {
        /** シノニム定義(同一のシノニム定義は,区切り、異なるシノニム定義は|区切り) */
        definitions: string;
        /** 通常検索のシノニムとして利用するか */
        use_on_text_fields: boolean;
        /** 目的のフィールドのシノニムとして利用するか */
        use_on_purpose_field: boolean;
      };
    };
    responses: {
      /** post search synonyms */
      201: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** get search synonyms */
  getV2SearchEngineManagementSynonymsSynonymId: {
    parameters: {
      path: {
        synonym_id: number;
      };
    };
    responses: {
      /** get search synonyms */
      200: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** put search synonyms */
  putV2SearchEngineManagementSynonymsSynonymId: {
    parameters: {
      formData: {
        /** シノニム定義(同一のシノニム定義は,区切り、異なるシノニム定義は|区切り) */
        definitions: string;
        /** 通常の検索処理に利用するか */
        use_on_text_fields?: boolean;
        /** 目的の検索処理に利用するか */
        use_on_purpose_field?: boolean;
      };
      path: {
        synonym_id: number;
      };
    };
    responses: {
      /** put search synonyms */
      200: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** delete search synonyms */
  deleteV2SearchEngineManagementSynonymsSynonymId: {
    parameters: {
      path: {
        synonym_id: number;
      };
    };
    responses: {
      /** 正常に削除された */
      204: never;
    };
  };
  /** get search synonym on purpose field (deprecated) */
  getV2SearchEngineManagementPurposeSynonym: {
    responses: {
      /** get search synonym on purpose field (deprecated) */
      200: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** put search synonym on purpose field (deprecated) */
  putV2SearchEngineManagementPurposeSynonym: {
    parameters: {
      formData: {
        /** シノニム定義(同一のシノニム定義は,区切り、異なるシノニム定義は|区切り) */
        definitions: string;
      };
    };
    responses: {
      /** put search synonym on purpose field (deprecated) */
      200: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** get search synonyms (deprecated) */
  getV2SearchEngineManagementTextSynonym: {
    responses: {
      /** get search synonyms (deprecated) */
      200: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** put search synonyms (deprecated) */
  putV2SearchEngineManagementTextSynonym: {
    parameters: {
      formData: {
        /** シノニム定義(同一のシノニム定義は,区切り、異なるシノニム定義は|区切り) */
        definitions: string;
      };
    };
    responses: {
      /** put search synonyms (deprecated) */
      200: {
        schema: definitions["V2_SearchSynonymEntity"];
      };
    };
  };
  /** dashboard */
  getV2Dashboard: {
    responses: {
      /** dashboard */
      200: {
        schema: definitions["V2_DashboardEntity"];
      };
    };
  };
  /** get favorite_item list (supplier only available) */
  getV2FavoriteItem: {
    parameters: {
      query: {
        /** お気に入りの種類 */
        item_type?:
          | "document"
          | "clause"
          | "document_tree"
          | "matter"
          | "matter_timeline";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** get favorite_item list (supplier only available) */
      200: {
        schema: definitions["V2_FavoriteItemListWithStatsEntity"];
      };
    };
  };
  /** return user_group list with stats  <br /> (※paginationが不要で高速に候補データを取得したい場合は、 GET api/v2/suggest/user を使用してください) */
  getV2UserGroup: {
    parameters: {
      query: {
        /** ユーザーグループ名の部分一致 */
        q?: string;
        /** 通知や担当者に設定できないユーザーグループを含める */
        include_hidden?: boolean;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** 取得したいユーザーグループID一式 */
        "user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** return user_group list with stats  <br /> (※paginationが不要で高速に候補データを取得したい場合は、 GET api/v2/suggest/user を使用してください) */
      200: {
        schema: definitions["V2_UserGroupListWithStatsEntity"];
      };
    };
  };
  /** create user_group */
  postV2UserGroup: {
    parameters: {
      formData: {
        /** ユーザーグループ名 */
        name: string;
        /** 識別子 */
        identifier: string;
        /** 備考 */
        note?: string;
        /** 親ユーザーグループID */
        parent_user_group_id?: number;
        /** 連携ロックをする場合true */
        ignore_auth_info_csv_batch?: boolean;
        /** 通知や担当者に設定できるようにする */
        is_selectable?: boolean;
      };
    };
    responses: {
      /** create user_group */
      201: {
        schema: definitions["V2_UserGroupFullEntity"];
      };
    };
  };
  /** user_group descendants */
  getV2UserGroupDescendants: {
    parameters: {
      query: {
        /** 種別。 all_ancestors_and_descendants の場合は先頭20件、 only_descendants の場合は先頭6件になる */
        data_type:
          | "only_root"
          | "only_children"
          | "only_descendants"
          | "all_ancestors_and_descendants";
        /** 検索を行うuser_group_id（カンマ区切り） */
        user_group_ids?: string;
        /** ユーザーグループ名の部分一致 */
        q?: string;
      };
    };
    responses: {
      /** user_group descendants */
      200: {
        schema: definitions["V2_UserGroupDetailEntity"][];
      };
    };
  };
  getV2UserGroupUserGroupId: {
    parameters: {
      path: {
        user_group_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_UserGroupFullEntity"];
      };
    };
  };
  /** update user_group */
  putV2UserGroupUserGroupId: {
    parameters: {
      formData: {
        /** ユーザーグループ名 */
        name?: string;
        /** 識別子 */
        identifier?: string;
        /** 備考 */
        note?: string;
        /** 親ユーザーグループID */
        parent_user_group_id?: number;
        /** 通知や担当者に設定できるようにする */
        is_selectable?: boolean;
        /** 連携ロックをする場合true */
        ignore_auth_info_csv_batch?: boolean;
      };
      path: {
        user_group_id: number;
      };
    };
    responses: {
      /** update user_group */
      200: {
        schema: definitions["V2_UserGroupFullEntity"];
      };
    };
  };
  /** delete user_group */
  deleteV2UserGroupUserGroupId: {
    parameters: {
      path: {
        user_group_id: number;
      };
    };
    responses: {
      /** delete user_group */
      204: never;
    };
  };
  /** create group_permission */
  postV2UserGroupUserGroupIdGroupPermission: {
    parameters: {
      formData: {
        /** リソースアイデンティファイアー。`{organization_configのキー}:{table名(単数):{idまたは*}` (例: `contract_database:document_tree:1`) */
        resource_identifier: string;
        /** 許可/拒否 */
        is_allow: boolean;
        /** アクセスレベル(例: read, write, admin など) */
        access_level: string;
      };
      path: {
        user_group_id: number;
      };
    };
    responses: {
      /** create group_permission */
      201: unknown;
    };
  };
  /** Delete group_permissions */
  deleteV2UserGroupUserGroupIdGroupPermissionGroupPermissionId: {
    parameters: {
      path: {
        user_group_id: number;
        group_permission_id: number;
      };
    };
    responses: {
      /** Delete group_permissions */
      204: never;
    };
  };
  /** product_config */
  getV2ProductConfig: {
    responses: {
      /** product_config */
      200: {
        schema: definitions["V2_ProductConfigEntity"];
      };
    };
  };
  /** update product_config */
  putV2ProductConfigProductConfigId: {
    parameters: {
      formData: {
        /** 巨大ファイル判定ページ数 */
        page_num_threshold_for_too_big_file?: number;
        /** 巨大ファイル判定文字数 */
        char_num_threshold_for_too_big_file?: number;
        /** テキストファイルの巨大ファイル判定ファイルサイズKB */
        file_size_kb_threshold_for_too_big_file_text?: number;
        /** Excelファイルの巨大ファイル判定行数 */
        row_num_threshold_for_too_big_file_excel?: number;
        /** Excelファイルの巨大ファイル判定列数 */
        column_num_threshold_for_too_big_file_excel?: number;
        /** Excelファイルの巨大ファイル判定ファイルサイズKB */
        file_size_kb_threshold_for_too_big_file_excel?: number;
        /** analyze_job取得時のページ数ランダムレンジ上限 */
        analyze_job_pagination_page?: number;
        /** analyze_job取得時の１ページあたりjob数 */
        analyze_job_pagination_per?: number;
        /** DocumentDecryptionJobを分割するDocument数 */
        decryption_documents_slice_unit?: number;
        /** AnalyzeJobの一覧APIでソートするか否か。導入プロジェクト向けの高速化オプション */
        analyze_job_without_sort?: boolean;
        /** AnalyzeJobの一覧APIで削除中を含むか否か。導入プロジェクト向けの高速化オプション */
        analyze_job_with_in_delete_queue?: boolean;
        /** タイムアウトの時間の倍率指定 */
        analyze_processing_timeout_duration_multiple?: number;
        /** ESのindexingを何並列でやるか (対象index: documents, clauses) */
        indexing_parallel_count?: number;
        /** ESのindexingのbulk insert size(MB単位) (対象index: documents, clauses) */
        indexing_bulk_size_mb?: number;
      };
      path: {
        product_config_id: number;
      };
    };
    responses: {
      /** update product_config */
      200: {
        schema: definitions["V2_ProductConfigEntity"];
      };
    };
  };
  postV2ClientNameMasterBulkInsert: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
    };
    responses: {
      201: unknown;
    };
  };
  /** create client_name_master */
  postV2ClientNameMaster: {
    parameters: {
      formData: {
        /** 企業名 */
        name: string;
        /** 種別 */
        data_type: "imported" | "external_resource_nta" | "generated";
        /** クライアントマスターID */
        client_master_id: number;
        /** 言語 */
        language?: "ja" | "en" | "zh" | "other";
        /** 企業名の読み */
        reading_form?: string;
        /** 代表するclient_name_masterかどうか */
        is_latest?: boolean;
        /** suggestionのみにしか利用しないようにするか */
        suggest_only?: boolean;
        /** 契約当事者の住所 */
        contract_address?: string;
        /** 契約当事者の肩書 */
        signer_title?: string;
        /** 契約当事者の代表者名 */
        signer_name?: string;
      };
    };
    responses: {
      /** create client_name_master */
      201: {
        schema: definitions["V2_ClientNameMasterEntity"];
      };
    };
  };
  /** update client_name_master */
  putV2ClientNameMasterClientNameMasterId: {
    parameters: {
      formData: {
        /** 企業名 */
        name?: string;
        /** 種別 */
        data_type?: "imported" | "external_resource_nta" | "generated";
        /** 言語 */
        language?: "ja" | "en" | "zh" | "other";
        /** クライアントマスターID */
        client_master_id?: number;
        /** 企業名の読み */
        reading_form?: string;
        /** 代表するclient_name_masterかどうか */
        is_latest?: boolean;
        /** suggestionのみにしか利用しないようにするか */
        suggest_only?: boolean;
        /** 契約当事者の住所 */
        contract_address?: string;
        /** 契約当事者の肩書 */
        signer_title?: string;
        /** 契約当事者の代表者名 */
        signer_name?: string;
      };
      path: {
        client_name_master_id: number;
      };
    };
    responses: {
      /** update client_name_master */
      200: {
        schema: definitions["V2_ClientNameMasterEntity"];
      };
    };
  };
  /** list client_masters */
  getV2ClientMaster: {
    parameters: {
      query: {
        /** クライアントマスターID */
        id?: number;
        /** 企業名 */
        name?: string;
        /** 種別 */
        data_type?: "imported" | "external_resource_nta" | "generated";
        /** 決算月 */
        closing_month?: number;
        /** 識別状況 */
        identification_status?: "all" | "identified" | "yet";
        /** グループ会社かどうか */
        is_group_company?: boolean;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** list client_masters */
      200: {
        schema: definitions["V2_ClientMasterListWithStatsEntity"];
      };
    };
  };
  /** create client_master */
  postV2ClientMaster: {
    parameters: {
      formData: {
        /** 企業番号 */
        corporate_number?: string;
        /** 種別 */
        data_type: "imported" | "external_resource_nta" | "generated";
        /** 決算月 */
        closing_month?: number;
        /** メモ */
        note?: string;
        /** グループ会社かどうか */
        is_group_company?: boolean;
        /** 有効/無効 */
        is_active?: boolean;
        /** 代表クライアントID */
        representative_successive_client_id?: number;
        /** 企業名 */
        "client_name_masters_attributes[][name]": string[];
        /** 種別 */
        "client_name_masters_attributes[][data_type]": (
          | "imported"
          | "external_resource_nta"
          | "generated"
        )[];
        /** 企業名の読み */
        "client_name_masters_attributes[][reading_form]"?: string[];
        /** 言語 */
        "client_name_masters_attributes[][language]"?: (
          | "ja"
          | "en"
          | "zh"
          | "other"
        )[];
        /** 代表するclient_name_masterかどうか */
        "client_name_masters_attributes[][is_latest]"?: boolean[];
        /** （supplier only）suggestionのみにしか利用しないようにするか */
        "client_name_masters_attributes[][suggest_only]"?: boolean[];
        /** 契約当事者の住所 */
        "client_name_masters_attributes[][contract_address]"?: string[];
        /** 契約当事者の肩書 */
        "client_name_masters_attributes[][signer_title]"?: string[];
        /** 契約当事者の代表者名 */
        "client_name_masters_attributes[][signer_name]"?: string[];
      };
    };
    responses: {
      /** create client_master */
      201: {
        schema: definitions["V2_ClientMasterFullEntity"];
      };
    };
  };
  postV2PartyIdentificationRerun: {
    parameters: {
      formData: {
        /** 更新対象ステータス */
        from_status?:
          | "not_processed"
          | "to_be_reviewed"
          | "identified"
          | "failed";
        /** 更新対象のclient_master_id */
        target_client_master_id?: number;
        /** 更新対象のdocument_tree_id */
        target_document_tree_id?: number;
        /** 更新対象のproject_id */
        target_project_id?: number;
        /** 更新先ステータス */
        to_status?:
          | "not_processed"
          | "to_be_reviewed"
          | "identified"
          | "failed";
      };
    };
    responses: {
      201: unknown;
    };
  };
  /** list party_identifications */
  getV2PartyIdentification: {
    parameters: {
      query: {
        /** 名寄せ処理ジョブID */
        id?: number;
        /** ドキュメントID */
        document_id?: number;
        /** アノテーションID */
        annotation_id?: number;
        /** クライアントマスターID */
        client_master_id?: number;
        /** ステータス */
        status?: "not_processed" | "to_be_reviewed" | "identified" | "failed";
        /** 相手方かどうか */
        is_counterparty?: boolean;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** list party_identifications */
      200: {
        schema: definitions["V2_PartyIdentificationListWithStatsEntity"];
      };
    };
  };
  /** update party_identification */
  putV2PartyIdentificationPartyIdentificationId: {
    parameters: {
      formData: {
        /** アノテーションID */
        annotation_id?: number;
        /** クライアントマスターID */
        client_master_id?: number;
        /** 処理が終了した日時 */
        finished_at?: string;
        /** ジョブプロセスの結果(現状はエラーが発生した場合にエラー内容が入るようになっており、正常時は何も入らない) */
        result_message?: string;
        /** ステータス */
        status?: "not_processed" | "to_be_reviewed" | "identified" | "failed";
        /** party_type */
        party_type?: string;
      };
      path: {
        party_identification_id: number;
      };
    };
    responses: {
      /** update party_identification */
      200: {
        schema: definitions["V2_PartyIdentificationEntity"];
      };
    };
  };
  /** return contract_template list */
  getV2ContractTemplate: {
    parameters: {
      query: {
        credit_title?:
          | "not_contract_template"
          | "mntsq"
          | "outdated_mntsq"
          | "user_defined"
          | "outdated_user_defined";
        /** 契約類型 */
        contract_type?:
          | "agreement_management"
          | "agreement_limiting_liability"
          | "letter_of_intent"
          | "agreement_investment"
          | "agreement_merger"
          | "agreement_split"
          | "agreement_business_transfer"
          | "agreement_share_transfer"
          | "agreement_share_kabushikiiten"
          | "agreement_share_exchange"
          | "agreement_shareholders"
          | "agreement_option"
          | "agreement_transfer_real_property"
          | "agreement_transfer_personal_property"
          | "agreement_lease_real_property"
          | "agreement_real_property"
          | "agreement_lease_personal_property"
          | "agreement_joint_research"
          | "agreement_license"
          | "agreement_license_patent"
          | "agreement_license_trademark"
          | "agreement_license_system"
          | "agreement_license_other"
          | "agreement_basic_bank"
          | "agreement_insurance"
          | "agreement_loan"
          | "agreement_nda"
          | "master_agreement"
          | "master_agreement_sales"
          | "agreement_purchase_order"
          | "agreement_service"
          | "agreement_service_development"
          | "agreement_service_other"
          | "agreement_system"
          | "agreement_distribution"
          | "agreement_alliance"
          | "agreement_employment"
          | "agreement_secondment"
          | "agreement_dispatch"
          | "agreement_collective_36"
          | "agreement_collective_discretionary_working_hour"
          | "agreement_collective_flextime_working_hour"
          | "agreement_collective_defacto_working_hour_for_outside"
          | "agreement_collective_other"
          | "rule_stock_ownership_association"
          | "privacy_policy"
          | "agreement_settlement"
          | "agreement_syndicated_loan"
          | "syndicate_agreement_loan_assignment"
          | "collateral_agreement"
          | "agreement_franchise"
          | "agreement_factoring"
          | "agreement_industrial_waste_disposal"
          | "agreement_standard_form"
          | "agreement_ma"
          | "clauses_package"
          | "agreement_assignment"
          | "agreement_termination"
          | "agreement_change"
          | "agreement_personal_data"
          | "amendment_agreement"
          | "agreement_terms_of_service"
          | "agreement_data_use"
          | "agreement_joint_liability"
          | "duplicated_for_ml"
          | "free_item_1"
          | "free_item_2"
          | "free_item_3"
          | "free_item_4"
          | "free_item_5"
          | "free_item_6"
          | "free_item_7"
          | "free_item_8"
          | "free_item_9"
          | "free_item_10"
          | "other_contract"
          | "aoi"
          | "internal_rules_board"
          | "internal_rules_share"
          | "internal_rules_working"
          | "internal_rules_salary"
          | "internal_rules_invention"
          | "internal_rules_other"
          | "disclosure_statement"
          | "agreement_38_document"
          | "other_lease_related_document"
          | "corporate_registration"
          | "real_property_registration"
          | "shareholders_meeting_notice"
          | "minutes_shareholders"
          | "minutes_board"
          | "minutes_other"
          | "list_of_shareholders"
          | "business_report"
          | "financial_statements"
          | "tax_return"
          | "annual_security_report"
          | "instruction_from_labor_standard_office"
          | "disputes_litigation_or_mitigation"
          | "disputes_litigation_labor_tribunal"
          | "disputes_other"
          | "approval_documents"
          | "other_not_contract"
          | "na"
          | "important_not_legal_document"
          | "other_not_legal_document"
          | "contract_template";
      };
    };
    responses: {
      /** return contract_template list */
      200: {
        schema: definitions["V2_ContractTemplateListEntity"];
      };
    };
  };
  /** 雛型zipのimport。長く画面が遷移しなくても、504のtime-outエラーが出ても気にせずに、時間を置いてから対象のフォルダを見て結果を確認してください。supplier only */
  postV2ContractTemplateImport: {
    parameters: {
      formData: {
        /** 雛型zip */
        zip: unknown;
        /** 雛型インポート先のdirectory_id。省略時はorganization_configから取得 */
        parent_directory_id?: number;
      };
    };
    responses: {
      /** 雛型zipのimport。長く画面が遷移しなくても、504のtime-outエラーが出ても気にせずに、時間を置いてから対象のフォルダを見て結果を確認してください。supplier only */
      201: unknown;
    };
  };
  /** MNTSQ雛型のarchive。古くなったMNTSQ雛型の切替機能を消し、outdated フラグを付与して（その結果検索結果から除外し）、"旧MNTSQ雛型 > yyyy年mm月バージョン"フォルダ配下にアーカイブする。supplier only */
  putV2ContractTemplateArchive: {
    parameters: {
      formData: {
        /** MNTSQ雛型のdirectory_id。省略時はorganization_configから取得 */
        mntsq_contract_template_dir_id?: number;
        /** 旧MNTSQ雛型のdirectory_id。省略時はorganization_configから取得。このフォルダ配下にアーカイブ用フォルダを作成する。このフォルダ自体がアーカイブ対象のフォルダに含まれていても、すでにアーカイブ済のため対象から除かれる */
        outdated_mntsq_contract_template_dir_id?: number;
        /** デフォルトは、"yyyy年mm月バージョン"（年月は、アーカイブ対象のMNTSQ雛型が環境にアップロードされたときから取得する） */
        archived_dir_name?: string;
        /** 対象を確認するだけの場合はtrue。つまり、アーカイブ作業実行時には、falseに変えて実行すること */
        dry_run: boolean;
      };
    };
    responses: {
      /** MNTSQ雛型のarchive。古くなったMNTSQ雛型の切替機能を消し、outdated フラグを付与して（その結果検索結果から除外し）、"旧MNTSQ雛型 > yyyy年mm月バージョン"フォルダ配下にアーカイブする。supplier only */
      200: unknown;
    };
  };
  /** create document_responsible_user */
  postV2DocumentResponsibleUser: {
    parameters: {
      formData: {
        /** ドキュメントID */
        document_id: number;
        /** ユーザーID */
        user_id: number;
      };
    };
    responses: {
      /** create document_responsible_user */
      201: {
        schema: definitions["V2_DocumentResponsibleUserEntity"];
      };
    };
  };
  /** delete document_responsible_user */
  deleteV2DocumentResponsibleUserDocumentResponsibleUserId: {
    parameters: {
      path: {
        document_responsible_user_id: number;
      };
    };
    responses: {
      /** delete document_responsible_user */
      204: never;
    };
  };
  /** create document_responsible_user_group */
  postV2DocumentResponsibleUserGroup: {
    parameters: {
      formData: {
        /** ドキュメントID */
        document_id: number;
        /** ユーザーグループID */
        user_group_id: number;
      };
    };
    responses: {
      /** create document_responsible_user_group */
      201: {
        schema: definitions["V2_DocumentResponsibleUserGroupEntity"];
      };
    };
  };
  /** delete document_responsible_user_group */
  deleteV2DocumentResponsibleUserGroupDocumentResponsibleUserGroupId: {
    parameters: {
      path: {
        document_responsible_user_group_id: number;
      };
    };
    responses: {
      /** delete document_responsible_user_group */
      204: never;
    };
  };
  /** extract related data */
  getV2Extract: {
    parameters: {
      query: {
        /** 入力データの種類 */
        input_type: "document_id" | "document_tree_id";
        /** 入力データの値 */
        input_value: number;
        /** 出力データの種類 */
        output_type: "project_id" | "contract_template_contract_type";
      };
    };
    responses: {
      /** extract related data */
      200: {
        schema: definitions["V2_ExtractEntity"];
      };
    };
  };
  /** index async_job_logs */
  getV2AsyncJobLog: {
    parameters: {
      query: {
        /** プロジェクトID */
        project_id?: number;
        /** ジョブのタイプ。カンマ区切りで指定 */
        job_type?: string;
        /** ジョブのステータス。カンマ区切りで複数対応 */
        status?: string;
        /** メタデータでの絞り込み。例: {"key":"value","key2":"value2"} */
        metadata?: string;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** index async_job_logs */
      200: {
        schema: definitions["V2_AsyncJobLogListWithStatsEntity"];
      };
    };
  };
  /** get async_job_log */
  getV2AsyncJobLogAsyncJobLogId: {
    parameters: {
      path: {
        async_job_log_id: number;
      };
    };
    responses: {
      /** get async_job_log */
      200: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  /** return sticky list with stats */
  getV2Sticky: {
    parameters: {
      query: {
        /** プロジェクトIDで検索 */
        project_id: number;
        /** ドキュメントIDで検索 */
        document_id?: number;
        /** ユーザーIDで検索（supplier, admin用） */
        user_id?: number;
        /** 取得範囲　[ all_visible :ユーザ所有の付箋 + 共有付箋 | only_owned :ユーザ所有の付箋のみ（自身の共有付箋を含む) | only_public :共有付箋のみ ] */
        scope?: "all_visible" | "only_owned" | "only_public";
        /** 1ページあたりの表示件数 */
        per?: number;
        /** ページ番号 */
        page?: number;
        /** ソート対象カラム [id | axis_y_in_px] */
        sort_col?: "id" | "axis_y_in_px";
        /** 並び順 [asc | desc] */
        order?: "asc" | "desc";
      };
    };
    responses: {
      /** return sticky list with stats */
      200: {
        schema: definitions["V2_StickyListWithStatsEntity"];
      };
    };
  };
  /** create sticky */
  postV2Sticky: {
    parameters: {
      formData: {
        /** ドキュメントID */
        document_id: number;
        /** 付箋のY軸における位置(px) */
        axis_y_in_px: number;
        /** 付箋の内容 */
        note: string;
        /** 公開フラグ */
        is_public?: boolean;
      };
    };
    responses: {
      /** create sticky */
      201: {
        schema: definitions["V2_StickyEntity"];
      };
    };
  };
  /** return sticky */
  getV2StickyStickyId: {
    parameters: {
      path: {
        sticky_id: number;
      };
    };
    responses: {
      /** return sticky */
      200: {
        schema: definitions["V2_StickyEntity"];
      };
    };
  };
  /** update sticky */
  putV2StickyStickyId: {
    parameters: {
      formData: {
        /** 付箋のY軸における位置(px) */
        axis_y_in_px?: number;
        /** 付箋の内容 */
        note?: string;
        /** 公開フラグ */
        is_public?: boolean;
      };
      path: {
        sticky_id: number;
      };
    };
    responses: {
      /** update sticky */
      200: {
        schema: definitions["V2_StickyEntity"];
      };
    };
  };
  /** delete sticky */
  deleteV2StickyStickyId: {
    parameters: {
      path: {
        sticky_id: number;
      };
    };
    responses: {
      /** delete sticky */
      204: never;
    };
  };
  /** get system status */
  getV2Hello: {
    responses: {
      /** get system status */
      200: {
        schema: definitions["V2_HelloEntity"];
      };
    };
  };
  postV2ManagementTagBulkAssign: {
    parameters: {
      formData: {
        document_tree_id?: number;
      };
    };
    responses: {
      204: never;
    };
  };
  /** index management_tags */
  getV2ManagementTag: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** index management_tags */
      200: {
        schema: definitions["V2_ManagementTagListWithStatsEntity"];
      };
    };
  };
  /** create management_tag */
  postV2ManagementTag: {
    parameters: {
      formData: {
        /** 管理タグ名 */
        label: string;
        description?: string;
        /** 自動付与の対象フォルダ（正規表現） */
        auto_add_file_path?: string;
        /** 親のmanagement_tag.id */
        parent_management_tag_id?: number;
      };
    };
    responses: {
      /** create management_tag */
      201: {
        schema: definitions["V2_ManagementTagEntity"];
      };
    };
  };
  /** Update management_tag */
  putV2ManagementTagManagementTagId: {
    parameters: {
      formData: {
        /** 管理タグ名 */
        label?: string;
        description?: string;
        /** 自動付与の対象フォルダ（正規表現） */
        auto_add_file_path?: string;
        /** 親のmanagement_tag.id */
        parent_management_tag_id?: number;
      };
      path: {
        management_tag_id: number;
      };
    };
    responses: {
      /** Update management_tag */
      200: {
        schema: definitions["V2_ManagementTagEntity"];
      };
    };
  };
  /** Delete management_tag */
  deleteV2ManagementTagManagementTagId: {
    parameters: {
      query: {
        /** 子タグも削除するかどうか */
        is_delete_child_tags?: boolean;
      };
      path: {
        management_tag_id: number;
      };
    };
    responses: {
      /** Delete management_tag */
      204: never;
    };
  };
  /** create document_management_tag */
  postV2DocumentManagementTag: {
    parameters: {
      formData: {
        /** documentのid */
        document_id: number;
        /** 管理タグID */
        management_tag_id: number;
      };
    };
    responses: {
      /** create document_management_tag */
      201: {
        schema: definitions["V2_DocumentManagementTagEntity"];
      };
    };
  };
  /** Delete document_management_tag */
  deleteV2DocumentManagementTagDocumentManagementTagId: {
    parameters: {
      path: {
        document_management_tag_id: number;
      };
    };
    responses: {
      /** Delete document_management_tag */
      204: never;
    };
  };
  postV2LedgerTagBulkAssign: {
    parameters: {
      formData: {
        document_tree_id?: number;
      };
    };
    responses: {
      204: never;
    };
  };
  /** index ledger_tags */
  getV2LedgerTag: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** 検索結果に含めたい台帳のID。検索結果にこの台帳が含まれるページを表示する */
        ledger_tag_id?: number;
        /** 部分一致検索 */
        query?: string;
        /** 指定した権限レベルの台帳だけ返す */
        "access_levels[]"?: ("admin" | "operator" | "member")[];
      };
      formData: {
        /** 検索台帳に含まないIDを指定 */
        "exclude_ids[]"?: number[];
      };
    };
    responses: {
      /** index ledger_tags */
      200: {
        schema: definitions["V2_LedgerTagListWithStatsEntity"];
      };
    };
  };
  /** create ledger_tag */
  postV2LedgerTag: {
    parameters: {
      formData: {
        /** 台帳タグ名 */
        label: string;
        description?: string;
        /** 自動付与の対象フォルダ（正規表現） */
        auto_add_file_path?: string;
        /** 格納先フォルダID */
        target_document_tree_id?: number;
      };
    };
    responses: {
      /** create ledger_tag */
      201: {
        schema: definitions["V2_LedgerTagEntity"];
      };
    };
  };
  /** Get ledger_tag */
  getV2LedgerTagLedgerTagId: {
    parameters: {
      query: {
        ledger_tag_detail?: "id_only" | "detail";
      };
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** Get ledger_tag */
      200: {
        schema: definitions["V2_LedgerTagEntity"];
      };
    };
  };
  /** Update ledger_tag */
  putV2LedgerTagLedgerTagId: {
    parameters: {
      formData: {
        /** 台帳タグ名 */
        label: string;
        description?: string;
        /** 並び順 */
        order_num?: number;
        /** 自動付与の対象フォルダ（正規表現） */
        auto_add_file_path?: string;
        /** 格納先フォルダID */
        target_document_tree_id?: number;
      };
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** Update ledger_tag */
      200: unknown;
    };
  };
  /** Delete ledger_tag */
  deleteV2LedgerTagLedgerTagId: {
    parameters: {
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** Delete ledger_tag */
      204: never;
    };
  };
  /** update ledger_default_column */
  putV2LedgerTagLedgerTagIdLedgerTagDefaultColumn: {
    parameters: {
      formData: {
        /** カラム */
        column_type: "governing_law" | "transaction_amount" | "purpose";
        /** 有効無効 */
        is_enabled: boolean;
      };
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** update ledger_default_column */
      200: unknown;
    };
  };
  /** upload document */
  postV2LedgerTagLedgerTagIdDocument: {
    parameters: {
      formData: {
        /** ファイル */
        file: unknown;
      };
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** upload document */
      202: unknown;
    };
  };
  /** create ledger custom column */
  postV2LedgerTagLedgerTagIdLedgerCustomColumn: {
    parameters: {
      formData: {
        /** カラム名 */
        column_name: string;
        /** 補足テキスト */
        caption_text?: string;
        /** 入力タイプ */
        option_type:
          | "single_select"
          | "multi_select"
          | "boolean"
          | "free_text"
          | "date"
          | "client_master"
          | "string"
          | "number"
          | "date_range"
          | "list";
        /** 並び順 */
        order_num?: number;
        /** 表示非表示 */
        is_enabled?: boolean;
        /** レビュー時に必須入力とするか */
        is_required?: boolean;
        "ledger_custom_column_options[][id]"?: number[];
        "ledger_custom_column_options[][label]"?: string[];
        "ledger_custom_column_options[][is_default]"?: boolean[];
      };
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** create ledger custom column */
      201: {
        schema: definitions["V2_LedgerCustomColumnEntity"];
      };
    };
  };
  /** create ledger_tag_custom_column */
  postV2LedgerTagLedgerTagIdLedgerCustomColumnLedgerCustomColumnId: {
    parameters: {
      path: {
        ledger_tag_id: number;
        ledger_custom_column_id: number;
      };
    };
    responses: {
      /** create ledger_tag_custom_column */
      201: unknown;
      403: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** delete ledger tag custom column */
  deleteV2LedgerTagLedgerTagIdLedgerCustomColumnLedgerCustomColumnId: {
    parameters: {
      path: {
        ledger_tag_id: number;
        ledger_custom_column_id: number;
      };
    };
    responses: {
      /** delete ledger tag custom column */
      204: never;
      403: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** 書類の自動通知設定の取得 */
  getV2LedgerTagLedgerTagIdLedgerTagReminderTemplate: {
    parameters: {
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** 書類の自動通知設定の取得 */
      200: {
        schema: definitions["V2_LedgerTagReminderTemplateEntity"][];
      };
    };
  };
  /** 台帳の自動通知設定の追加 */
  postV2LedgerTagLedgerTagIdLedgerTagReminderTemplate: {
    parameters: {
      formData: {
        /** 名称 */
        name: string;
        /** 通知基準日付の種別 */
        target_date_type: "expire_date" | "non_renewal_notice_deadline_date";
        /** 通知のリードタイムの値 */
        "lead_time[value]": number;
        /** 通知のリードタイムの単位 */
        "lead_time[unit]": "days" | "months" | "years";
        /** 通知メッセージの種別 */
        notification_message_text_type:
          | "renewal_deadline"
          | "disposal"
          | "other";
        /** 通知の宛先ユーザーID */
        "remindee_ids[user_ids][]"?: number[];
        /** 通知の宛先ユーザーグループID */
        "remindee_ids[user_group_ids][]"?: number[];
      };
      path: {
        ledger_tag_id: number;
      };
    };
    responses: {
      /** 台帳の自動通知設定の追加 */
      201: {
        schema: definitions["V2_LedgerTagReminderTemplateEntity"];
      };
    };
  };
  /** create document_ledger_tag */
  postV2DocumentLedgerTag: {
    parameters: {
      formData: {
        /** documentのid */
        document_id: number;
        /** 台帳タグID */
        ledger_tag_id: number;
      };
    };
    responses: {
      /** create document_ledger_tag */
      201: {
        schema: definitions["V2_DocumentLedgerTagEntity"];
      };
    };
  };
  /** Delete document_ledger_tag */
  deleteV2DocumentLedgerTagDocumentLedgerTagId: {
    parameters: {
      path: {
        document_ledger_tag_id: number;
      };
    };
    responses: {
      /** Delete document_ledger_tag */
      204: never;
    };
  };
  /** resolve all conflict_fileupload */
  postV2ConflictFileuploadResolveAll: {
    parameters: {
      formData: {
        /** 重複を解決するファイルのid。カンマ区切り */
        conflict_fileupload_ids: string;
        /** 重複を解決するオプション */
        option: "rename_to_upload" | "overwrite" | "ignore";
        /** 対象の台帳ID */
        ledger_tag_id?: number;
      };
    };
    responses: {
      /** resolve all conflict_fileupload */
      201: unknown;
    };
  };
  /** resolve conflict_fileupload */
  postV2ConflictFileuploadConflictFileuploadIdResolve: {
    parameters: {
      formData: {
        /** 重複を解決するオプション */
        option: "rename_to_upload" | "overwrite" | "ignore";
        /** 対象の台帳ID */
        ledger_tag_id?: number;
      };
      path: {
        conflict_fileupload_id: number;
      };
    };
    responses: {
      /** resolve conflict_fileupload */
      201: unknown;
    };
  };
  /** get cloudsign_team */
  getV2CloudsignTeam: {
    parameters: {
      formData: {
        /** ids */
        "ids[]"?: number[];
      };
      query: {
        /** paginationのpage */
        page?: number;
        /** paginationのper */
        per?: number;
      };
    };
    responses: {
      /** get cloudsign_team */
      200: {
        schema: definitions["V2_CloudsignTeamListWithStatsEntity"];
      };
    };
  };
  /** create cloudsign_team */
  postV2CloudsignTeam: {
    parameters: {
      formData: {
        /** client_id */
        client_id: string;
        /** document_tree_id */
        document_tree_id: number;
        /** previous_executed_at (この日付以降を取得対象とするので、取得対象起点日として入力しても良い) */
        previous_executed_at?: string;
      };
    };
    responses: {
      /** create cloudsign_team */
      201: {
        schema: definitions["V2_CloudsignTeamEntity"];
      };
    };
  };
  /** update cloudsign_team */
  putV2CloudsignTeamCloudsignTeamId: {
    parameters: {
      formData: {
        /** client_id */
        client_id?: string;
        /** document_tree_id */
        document_tree_id?: number;
        /** previous_executed_at */
        previous_executed_at?: string;
      };
      path: {
        cloudsign_team_id: number;
      };
    };
    responses: {
      /** update cloudsign_team */
      200: {
        schema: definitions["V2_CloudsignTeamEntity"];
      };
    };
  };
  /** return view_document log */
  getV2LogViewDocument: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** return view_document log */
      200: {
        schema: definitions["V2_ViewDocumentListWithStatsEntity"];
      };
    };
  };
  getV2Oauth2Docusign: {
    parameters: {
      query: {
        code?: string;
        state: string;
      };
    };
    responses: {
      302: {
        schema: definitions["V2_MessageEntity"];
      };
    };
  };
  getV2Oauth2Gdrive: {
    parameters: {
      query: {
        code?: string;
        state: string;
      };
    };
    responses: {
      302: {
        schema: definitions["V2_MessageEntity"];
      };
    };
  };
  /** get custom_report */
  getV2CustomReport: {
    parameters: {
      query: {
        /** 管理タグid */
        management_tag_id?: number;
      };
    };
    responses: {
      /** get custom_report */
      200: {
        schema: definitions["V2_CustomGroupEntity"][];
      };
    };
  };
  /** Create custom_report */
  postV2CustomReport: {
    parameters: {
      formData: {
        /** 管理タグid */
        management_tag_id: number;
        /** レポート種別 */
        report_type: "all" | "section";
        /** 左チャート種別 */
        left_chart_type: "full_pie" | "half_pie" | "bar";
        /** 右チャート種別 */
        right_chart_type: "full_pie" | "half_pie" | "bar";
        /** doc id */
        document_id: string;
        /** セクションアノテーション種別 */
        section_annotation_type?:
          | "other"
          | "contract_title"
          | "related_agreement_title"
          | "party"
          | "related_agreement_party"
          | "execution_date"
          | "effective_date"
          | "related_agreement_execution_date"
          | "related_agreement_effective_date"
          | "expired"
          | "contract_term"
          | "automatic_renewal"
          | "automatic_renewal_period"
          | "notice_requirement_to_refuse_renewal"
          | "personal_data"
          | "termination_of_agreement"
          | "anti_social_forces"
          | "ip"
          | "limitation_of_liability"
          | "negligence"
          | "nature_of_damage"
          | "liquidated_damages"
          | "maximum_amount"
          | "period"
          | "governing_law"
          | "amendment_of_agreement"
          | "restriction_on_transfer"
          | "confidentiality"
          | "dispute_resolution"
          | "contract_term_provision"
          | "non_conformity"
          | "ip_ownership"
          | "ip_authorization"
          | "representation_and_warranty"
          | "material_adverse_effect"
          | "financial_covenants"
          | "reporting_covenants"
          | "negative_pledge"
          | "definition_of_confidential_information"
          | "reproduction_of_confidential_information"
          | "template_commentary"
          | "transaction_amount"
          | "governing_law_country"
          | "agreement_system_clause_basic_nature"
          | "agreement_system_purpose"
          | "agreement_system_confidentiality_obligation"
          | "agreement_system_restriction_on_transfer"
          | "agreement_system_clause_invididual_agreements"
          | "agreement_system_entire_agreement"
          | "agreement_system_anti_social_forces"
          | "agreement_system_dispute_resolution"
          | "agreement_system_consultation_in_good_faith"
          | "agreement_system_clause_person_in_charge"
          | "agreement_system_clause_working_place"
          | "agreement_system_clause_rental_items"
          | "agreement_system_clause_labor_management"
          | "agreement_system_clause_subcontractor"
          | "agreement_system_clause_project_meeting"
          | "agreement_system_clause_project_management"
          | "agreement_system_clause_audit"
          | "agreement_system_clause_inspection"
          | "agreement_system_clause_assumption_of_risk"
          | "agreement_system_non_conformity"
          | "agreement_system_clause_service_fee"
          | "agreement_system_clause_transfer_of_copyright"
          | "agreement_system_clause_moral_right"
          | "agreement_system_clause_infringement_of_ip_to_third_party"
          | "agreement_system_clause_period"
          | "agreement_system_clause_termination_right"
          | "agreement_system_clause_termination"
          | "agreement_system_clause_damages"
          | "agreement_share_purchase_clause_knowledge_qualifier"
          | "agreement_share_purchase_clause_purchase_price_adjustment"
          | "agreement_share_purchase_clause_condition_precedent_of_seller"
          | "agreement_share_purchase_clause_condition_precedent_of_buyer"
          | "agreement_share_purchase_clause_mac"
          | "agreement_share_purchase_clause_representation_and_warranty"
          | "agreement_share_purchase_clause_representation_incorporation"
          | "agreement_share_purchase_clause_representation_hr"
          | "agreement_share_purchase_clause_sandbagging"
          | "agreement_share_purchase_clause_non_competition"
          | "agreement_share_purchase_clause_continuation_of_employment"
          | "agreement_share_purchase_clause_indemnification"
          | "agreement_share_purchase_clause_limitation_of_indemnification"
          | "agreement_share_purchase_definition"
          | "agreement_share_purchase_transfer_agreement"
          | "agreement_share_purchase_price"
          | "agreement_share_purchase_closing"
          | "agreement_share_purchase_precondition_of_seller"
          | "agreement_share_purchase_precondition_of_buyer"
          | "agreement_share_purchase_rep_and_warranty_of_seller"
          | "agreement_share_purchase_rep_and_warranty_of_buyer"
          | "agreement_share_purchase_effect_of_dd"
          | "agreement_share_purchase_pre_covenants_procedure"
          | "agreement_share_purchase_pre_covenants_effort"
          | "agreement_share_purchase_pre_covenants_management"
          | "agreement_share_purchase_pre_covenants_access_to_information"
          | "agreement_share_purchase_pre_covenants_notice"
          | "agreement_share_purchase_post_covenants_non_compete"
          | "agreement_share_purchase_post_covenants_service"
          | "agreement_share_purchase_post_covenants_employment"
          | "agreement_share_purchase_post_covenants_waiver"
          | "agreement_share_purchase_compensation"
          | "agreement_share_purchase_compensation_process"
          | "agreement_share_purchase_compensation_limit"
          | "agreement_share_purchase_compensation_exclusive_remedy"
          | "agreement_share_purchase_termination"
          | "agreement_share_purchase_confidential_obligation"
          | "agreement_share_purchase_publication"
          | "agreement_share_purchase_expense"
          | "agreement_share_purchase_entire_agreement"
          | "agreement_share_purchase_notice"
          | "agreement_share_purchase_amendment_of_agreement"
          | "agreement_share_purchase_restriction_on_transfer"
          | "agreement_share_purchase_governing_law"
          | "agreement_share_purchase_dispute_resolution"
          | "agreement_share_purchase_counterpart"
          | "agreement_share_purchase_consultation_in_good_faith"
          | "agreement_nda_purpose"
          | "agreement_nda_confidential_infomation"
          | "agreement_nda_obligation"
          | "agreement_nda_management_of_confidential_information_neutral"
          | "agreement_nda_management_of_confidential_information_strict"
          | "agreement_nda_destruction_of_confidential_information_neutral"
          | "agreement_nda_destruction_of_confidential_information_strict"
          | "agreement_nda_accuracy_of_confidential_information"
          | "agreement_nda_right_of_confidential_information"
          | "agreement_nda_management_of_damages"
          | "agreement_nda_injunction"
          | "agreement_nda_contract_term"
          | "agreement_nda_controlling_language"
          | "agreement_nda_restriction_on_transfer"
          | "agreement_nda_dispute_resolution"
          | "agreement_nda_consultation_in_good_faith"
          | "agreement_service_delegation"
          | "agreement_service_job_description"
          | "agreement_service_commission_fee"
          | "agreement_service_payment"
          | "agreement_service_title_and_risk"
          | "agreement_service_confirmation_of_completion"
          | "agreement_service_ownership_and_risk"
          | "agreement_service_subcontracting"
          | "agreement_service_report"
          | "agreement_service_right_of_command"
          | "agreement_service_product_liability"
          | "agreement_service_non_conformity"
          | "agreement_service_ip"
          | "agreement_service_infringement_of_ip_to_third_party"
          | "agreement_service_contract_term"
          | "agreement_service_termination"
          | "agreement_service_force_majeure"
          | "agreement_service_commission_fee_terminated_without_cause"
          | "agreement_service_confidentiality_obligation"
          | "agreement_service_damages"
          | "agreement_service_of_survival_clause"
          | "agreement_service_restriction_on_transfer"
          | "agreement_service_dispute_resolution"
          | "agreement_service_consultation_in_good_faith"
          | "agreement_service_controlling_language"
          | "agreement_service_quasi_mandate_performing"
          | "agreement_license_patent_purpose"
          | "agreement_license_patent_ip_licensing"
          | "agreement_license_patent_maintainance_of_patent"
          | "agreement_license_patent_license_fee"
          | "agreement_license_patent_report_and_payment"
          | "agreement_license_patent_accounting_and_inspection"
          | "agreement_license_patent_disclaimer_of_warranty"
          | "agreement_license_patent_infringement_of_ip_from_third_party"
          | "agreement_license_patent_no_contest"
          | "agreement_license_patent_improvement"
          | "agreement_license_patent_confidentiality_obligation"
          | "agreement_license_patent_contract_term"
          | "agreement_license_patent_termination"
          | "agreement_license_patent_effect_of_termination"
          | "agreement_license_patent_restriction_on_transfer"
          | "agreement_license_patent_dispute_resolution"
          | "agreement_license_patent_consultation_in_good_faith"
          | "master_agreement_basic_agreement"
          | "master_agreement_individual_agreements"
          | "master_agreement_inspeciton"
          | "master_agreement_export_control"
          | "master_agreement_damages"
          | "master_agreement_termination"
          | "master_agreement_delivery_date"
          | "master_agreement_rejection_of_receipt"
          | "master_agreement_title_and_risk"
          | "master_agreement_payment"
          | "master_agreement_non_conformity"
          | "master_agreement_product_liability"
          | "master_agreement_manufacturing_process_control"
          | "master_agreement_discountinuation_of_production"
          | "master_agreement_notice"
          | "master_agreement_supplied_or_rental_items"
          | "master_agreement_duty_of_care"
          | "master_agreement_confidentiality_obligation"
          | "master_agreement_ip_ownership"
          | "master_agreement_copyright"
          | "master_agreement_infringement_of_ip_to_third_party"
          | "master_agreement_anti_social_forces"
          | "master_agreement_subcontracting"
          | "master_agreement_restriction_on_transfer"
          | "master_agreement_audit"
          | "master_agreement_termination_by_buyer"
          | "master_agreement_dispute_resolution"
          | "master_agreement_consultation_in_good_faith"
          | "master_agreement_contract_term"
          | "clauses_package_confidential_obligation"
          | "clauses_package_damages"
          | "clauses_package_force_majeure"
          | "clauses_package_anti_social_forces"
          | "clauses_package_publication"
          | "clauses_package_expense"
          | "clauses_package_amendment_of_agreement"
          | "clauses_package_entire_agreement"
          | "clauses_package_restriction_on_transfer"
          | "clauses_package_notice"
          | "clauses_package_severability"
          | "clauses_package_controlling_language"
          | "clauses_package_headline"
          | "clauses_package_governing_law"
          | "clauses_package_dispute_resolution"
          | "clauses_package_counterpart"
          | "clauses_package_consultation_in_good_faith"
          | "agreement_joint_research_joint_research"
          | "agreement_joint_research_period"
          | "agreement_joint_research_division_of_roles"
          | "agreement_joint_research_division_of_cost"
          | "agreement_joint_research_payment_of_cost"
          | "agreement_joint_research_location"
          | "agreement_joint_research_lending_facility"
          | "agreement_joint_research_worker"
          | "agreement_joint_research_meeting"
          | "agreement_joint_research_providing_information"
          | "agreement_joint_research_copyright"
          | "agreement_joint_research_shared_copyright"
          | "agreement_joint_research_private_copyright"
          | "agreement_joint_research_existing_copyright"
          | "agreement_joint_research_confidential_obligation"
          | "agreement_joint_research_publishment"
          | "agreement_joint_research_restriction_research_with_third_party"
          | "agreement_joint_research_absence_of_duty"
          | "agreement_joint_research_improvement"
          | "agreement_joint_research_no_subcontracting"
          | "agreement_joint_research_claim_from_third_party"
          | "agreement_joint_research_disclaimer_of_warranty"
          | "agreement_joint_research_damages"
          | "agreement_joint_research_restriction_on_transfer"
          | "agreement_joint_research_termination"
          | "agreement_joint_research_anti_social_forces"
          | "agreement_joint_research_contract_term"
          | "agreement_joint_research_governing_law"
          | "agreement_joint_research_dispute_resolution"
          | "agreement_joint_research_consultation_in_good_faith"
          | "agreement_service_subcontracting_personal_data"
          | "agreement_service_anti_social_forces"
          | "agreement_service_governing_law"
          | "agreement_license_patent_language"
          | "agreement_license_patent_governing_law"
          | "free_item_1"
          | "free_item_2"
          | "ma_analysis_party"
          | "ma_analysis_execution_date"
          | "definitions"
          | "ma_intergroup_reorganization"
          | "purchase_price"
          | "purchase_price_adjustment"
          | "earn_out"
          | "escrow"
          | "conditions_precedent_mac"
          | "accuracy_of_representations_and_warranties"
          | "financing_out"
          | "litigation_out"
          | "clearance_of_regulation"
          | "body_of_representations_and_warranties"
          | "reps_and_warranties_mac"
          | "potential_liabilities"
          | "full_disclosure_rep"
          | "sandbagging"
          | "anti_sandbagging"
          | "knowledge_qualifier"
          | "keyman_lock"
          | "notice_obligation_for_breach_of_reps_or_covenants"
          | "obligation_to_continue_employment"
          | "ma_analysis_non_compete"
          | "non_solicitation"
          | "limitation_of_liabilities"
          | "fundamental_representations"
          | "materiality_scrape"
          | "third_party_claim"
          | "damages_exclusion_of_tax_and_insurance_benefits"
          | "exclusive_remedy"
          | "special_indemnity"
          | "deemed_amount_of_damages"
          | "sha_party"
          | "sha_shareholding_ratio"
          | "right_to_appoint_officers"
          | "veto_right"
          | "obligation_of_prenotice"
          | "obligation_of_postnotice"
          | "deadlock"
          | "preemptive_right"
          | "right_of_first_refusal"
          | "right_of_first_offer"
          | "put_option"
          | "call_option"
          | "tag_along_rignt"
          | "drag_along_right"
          | "calculation_of_fair_value"
          | "exception_of_restriction_on_transfer"
          | "process_of_share_under_breach"
          | "termination_right"
          | "exclusivity"
          | "non_compete"
          | "minimum_purchase"
          | "most_favored_condition"
          | "share_transfer_then_prenotice"
          | "share_transfer_then_postnotice"
          | "share_transfer_then_termination"
          | "share_transfer_then_penalty_payment"
          | "share_transfer_then_other"
          | "share_contribution_then_prenotice"
          | "share_contribution_then_postnotice"
          | "share_contribution_then_termination"
          | "share_contribution_then_penalty_payment"
          | "share_contribution_then_other"
          | "corporate_merger_then_prenotice"
          | "corporate_merger_then_postnotice"
          | "corporate_merger_then_termination"
          | "corporate_merger_then_penalty_payment"
          | "corporate_merger_then_other"
          | "corporate_division_then_prenotice"
          | "corporate_division_then_postnotice"
          | "corporate_division_then_termination"
          | "corporate_division_then_penalty_payment"
          | "corporate_division_then_other"
          | "change_of_representative_then_prenotice"
          | "change_of_representative_then_postnotice"
          | "change_of_representative_then_termination"
          | "change_of_representative_then_penalty_payment"
          | "change_of_representative_then_other"
          | "change_of_tradename_then_prenotice"
          | "change_of_tradename_then_postnotice"
          | "change_of_tradename_then_termination"
          | "change_of_tradename_then_penalty_payment"
          | "change_of_tradename_then_other"
          | "business_transfer_then_prenotice"
          | "business_transfer_then_postnotice"
          | "business_transfer_then_termination"
          | "business_transfer_then_penalty_payment"
          | "business_transfer_then_other";
        /** 左チャートタイトル */
        left_chart_title?: string;
        /** 右チャートタイトル */
        right_chart_title?: string;
        order_num?: number;
        "custom_report_values_attributes[][chart_position]": string[];
        "custom_report_values_attributes[][counts]": number[];
        "custom_report_values_attributes[][label]": string[];
      };
    };
    responses: {
      /** Create custom_report */
      201: unknown;
    };
  };
  /** updates custom_report */
  putV2CustomReportCustomReportId: {
    parameters: {
      formData: {
        /** レポート種別 */
        report_type?: "all" | "section";
        /** 左チャート種別 */
        left_chart_type?: "full_pie" | "half_pie" | "bar";
        /** 右チャート種別 */
        right_chart_type?: "full_pie" | "half_pie" | "bar";
        /** doc id */
        document_id?: string;
        order_num?: number;
        /** セクションアノテーション種別 */
        section_annotation_type?:
          | "other"
          | "contract_title"
          | "related_agreement_title"
          | "party"
          | "related_agreement_party"
          | "execution_date"
          | "effective_date"
          | "related_agreement_execution_date"
          | "related_agreement_effective_date"
          | "expired"
          | "contract_term"
          | "automatic_renewal"
          | "automatic_renewal_period"
          | "notice_requirement_to_refuse_renewal"
          | "personal_data"
          | "termination_of_agreement"
          | "anti_social_forces"
          | "ip"
          | "limitation_of_liability"
          | "negligence"
          | "nature_of_damage"
          | "liquidated_damages"
          | "maximum_amount"
          | "period"
          | "governing_law"
          | "amendment_of_agreement"
          | "restriction_on_transfer"
          | "confidentiality"
          | "dispute_resolution"
          | "contract_term_provision"
          | "non_conformity"
          | "ip_ownership"
          | "ip_authorization"
          | "representation_and_warranty"
          | "material_adverse_effect"
          | "financial_covenants"
          | "reporting_covenants"
          | "negative_pledge"
          | "definition_of_confidential_information"
          | "reproduction_of_confidential_information"
          | "template_commentary"
          | "transaction_amount"
          | "governing_law_country"
          | "agreement_system_clause_basic_nature"
          | "agreement_system_purpose"
          | "agreement_system_confidentiality_obligation"
          | "agreement_system_restriction_on_transfer"
          | "agreement_system_clause_invididual_agreements"
          | "agreement_system_entire_agreement"
          | "agreement_system_anti_social_forces"
          | "agreement_system_dispute_resolution"
          | "agreement_system_consultation_in_good_faith"
          | "agreement_system_clause_person_in_charge"
          | "agreement_system_clause_working_place"
          | "agreement_system_clause_rental_items"
          | "agreement_system_clause_labor_management"
          | "agreement_system_clause_subcontractor"
          | "agreement_system_clause_project_meeting"
          | "agreement_system_clause_project_management"
          | "agreement_system_clause_audit"
          | "agreement_system_clause_inspection"
          | "agreement_system_clause_assumption_of_risk"
          | "agreement_system_non_conformity"
          | "agreement_system_clause_service_fee"
          | "agreement_system_clause_transfer_of_copyright"
          | "agreement_system_clause_moral_right"
          | "agreement_system_clause_infringement_of_ip_to_third_party"
          | "agreement_system_clause_period"
          | "agreement_system_clause_termination_right"
          | "agreement_system_clause_termination"
          | "agreement_system_clause_damages"
          | "agreement_share_purchase_clause_knowledge_qualifier"
          | "agreement_share_purchase_clause_purchase_price_adjustment"
          | "agreement_share_purchase_clause_condition_precedent_of_seller"
          | "agreement_share_purchase_clause_condition_precedent_of_buyer"
          | "agreement_share_purchase_clause_mac"
          | "agreement_share_purchase_clause_representation_and_warranty"
          | "agreement_share_purchase_clause_representation_incorporation"
          | "agreement_share_purchase_clause_representation_hr"
          | "agreement_share_purchase_clause_sandbagging"
          | "agreement_share_purchase_clause_non_competition"
          | "agreement_share_purchase_clause_continuation_of_employment"
          | "agreement_share_purchase_clause_indemnification"
          | "agreement_share_purchase_clause_limitation_of_indemnification"
          | "agreement_share_purchase_definition"
          | "agreement_share_purchase_transfer_agreement"
          | "agreement_share_purchase_price"
          | "agreement_share_purchase_closing"
          | "agreement_share_purchase_precondition_of_seller"
          | "agreement_share_purchase_precondition_of_buyer"
          | "agreement_share_purchase_rep_and_warranty_of_seller"
          | "agreement_share_purchase_rep_and_warranty_of_buyer"
          | "agreement_share_purchase_effect_of_dd"
          | "agreement_share_purchase_pre_covenants_procedure"
          | "agreement_share_purchase_pre_covenants_effort"
          | "agreement_share_purchase_pre_covenants_management"
          | "agreement_share_purchase_pre_covenants_access_to_information"
          | "agreement_share_purchase_pre_covenants_notice"
          | "agreement_share_purchase_post_covenants_non_compete"
          | "agreement_share_purchase_post_covenants_service"
          | "agreement_share_purchase_post_covenants_employment"
          | "agreement_share_purchase_post_covenants_waiver"
          | "agreement_share_purchase_compensation"
          | "agreement_share_purchase_compensation_process"
          | "agreement_share_purchase_compensation_limit"
          | "agreement_share_purchase_compensation_exclusive_remedy"
          | "agreement_share_purchase_termination"
          | "agreement_share_purchase_confidential_obligation"
          | "agreement_share_purchase_publication"
          | "agreement_share_purchase_expense"
          | "agreement_share_purchase_entire_agreement"
          | "agreement_share_purchase_notice"
          | "agreement_share_purchase_amendment_of_agreement"
          | "agreement_share_purchase_restriction_on_transfer"
          | "agreement_share_purchase_governing_law"
          | "agreement_share_purchase_dispute_resolution"
          | "agreement_share_purchase_counterpart"
          | "agreement_share_purchase_consultation_in_good_faith"
          | "agreement_nda_purpose"
          | "agreement_nda_confidential_infomation"
          | "agreement_nda_obligation"
          | "agreement_nda_management_of_confidential_information_neutral"
          | "agreement_nda_management_of_confidential_information_strict"
          | "agreement_nda_destruction_of_confidential_information_neutral"
          | "agreement_nda_destruction_of_confidential_information_strict"
          | "agreement_nda_accuracy_of_confidential_information"
          | "agreement_nda_right_of_confidential_information"
          | "agreement_nda_management_of_damages"
          | "agreement_nda_injunction"
          | "agreement_nda_contract_term"
          | "agreement_nda_controlling_language"
          | "agreement_nda_restriction_on_transfer"
          | "agreement_nda_dispute_resolution"
          | "agreement_nda_consultation_in_good_faith"
          | "agreement_service_delegation"
          | "agreement_service_job_description"
          | "agreement_service_commission_fee"
          | "agreement_service_payment"
          | "agreement_service_title_and_risk"
          | "agreement_service_confirmation_of_completion"
          | "agreement_service_ownership_and_risk"
          | "agreement_service_subcontracting"
          | "agreement_service_report"
          | "agreement_service_right_of_command"
          | "agreement_service_product_liability"
          | "agreement_service_non_conformity"
          | "agreement_service_ip"
          | "agreement_service_infringement_of_ip_to_third_party"
          | "agreement_service_contract_term"
          | "agreement_service_termination"
          | "agreement_service_force_majeure"
          | "agreement_service_commission_fee_terminated_without_cause"
          | "agreement_service_confidentiality_obligation"
          | "agreement_service_damages"
          | "agreement_service_of_survival_clause"
          | "agreement_service_restriction_on_transfer"
          | "agreement_service_dispute_resolution"
          | "agreement_service_consultation_in_good_faith"
          | "agreement_service_controlling_language"
          | "agreement_service_quasi_mandate_performing"
          | "agreement_license_patent_purpose"
          | "agreement_license_patent_ip_licensing"
          | "agreement_license_patent_maintainance_of_patent"
          | "agreement_license_patent_license_fee"
          | "agreement_license_patent_report_and_payment"
          | "agreement_license_patent_accounting_and_inspection"
          | "agreement_license_patent_disclaimer_of_warranty"
          | "agreement_license_patent_infringement_of_ip_from_third_party"
          | "agreement_license_patent_no_contest"
          | "agreement_license_patent_improvement"
          | "agreement_license_patent_confidentiality_obligation"
          | "agreement_license_patent_contract_term"
          | "agreement_license_patent_termination"
          | "agreement_license_patent_effect_of_termination"
          | "agreement_license_patent_restriction_on_transfer"
          | "agreement_license_patent_dispute_resolution"
          | "agreement_license_patent_consultation_in_good_faith"
          | "master_agreement_basic_agreement"
          | "master_agreement_individual_agreements"
          | "master_agreement_inspeciton"
          | "master_agreement_export_control"
          | "master_agreement_damages"
          | "master_agreement_termination"
          | "master_agreement_delivery_date"
          | "master_agreement_rejection_of_receipt"
          | "master_agreement_title_and_risk"
          | "master_agreement_payment"
          | "master_agreement_non_conformity"
          | "master_agreement_product_liability"
          | "master_agreement_manufacturing_process_control"
          | "master_agreement_discountinuation_of_production"
          | "master_agreement_notice"
          | "master_agreement_supplied_or_rental_items"
          | "master_agreement_duty_of_care"
          | "master_agreement_confidentiality_obligation"
          | "master_agreement_ip_ownership"
          | "master_agreement_copyright"
          | "master_agreement_infringement_of_ip_to_third_party"
          | "master_agreement_anti_social_forces"
          | "master_agreement_subcontracting"
          | "master_agreement_restriction_on_transfer"
          | "master_agreement_audit"
          | "master_agreement_termination_by_buyer"
          | "master_agreement_dispute_resolution"
          | "master_agreement_consultation_in_good_faith"
          | "master_agreement_contract_term"
          | "clauses_package_confidential_obligation"
          | "clauses_package_damages"
          | "clauses_package_force_majeure"
          | "clauses_package_anti_social_forces"
          | "clauses_package_publication"
          | "clauses_package_expense"
          | "clauses_package_amendment_of_agreement"
          | "clauses_package_entire_agreement"
          | "clauses_package_restriction_on_transfer"
          | "clauses_package_notice"
          | "clauses_package_severability"
          | "clauses_package_controlling_language"
          | "clauses_package_headline"
          | "clauses_package_governing_law"
          | "clauses_package_dispute_resolution"
          | "clauses_package_counterpart"
          | "clauses_package_consultation_in_good_faith"
          | "agreement_joint_research_joint_research"
          | "agreement_joint_research_period"
          | "agreement_joint_research_division_of_roles"
          | "agreement_joint_research_division_of_cost"
          | "agreement_joint_research_payment_of_cost"
          | "agreement_joint_research_location"
          | "agreement_joint_research_lending_facility"
          | "agreement_joint_research_worker"
          | "agreement_joint_research_meeting"
          | "agreement_joint_research_providing_information"
          | "agreement_joint_research_copyright"
          | "agreement_joint_research_shared_copyright"
          | "agreement_joint_research_private_copyright"
          | "agreement_joint_research_existing_copyright"
          | "agreement_joint_research_confidential_obligation"
          | "agreement_joint_research_publishment"
          | "agreement_joint_research_restriction_research_with_third_party"
          | "agreement_joint_research_absence_of_duty"
          | "agreement_joint_research_improvement"
          | "agreement_joint_research_no_subcontracting"
          | "agreement_joint_research_claim_from_third_party"
          | "agreement_joint_research_disclaimer_of_warranty"
          | "agreement_joint_research_damages"
          | "agreement_joint_research_restriction_on_transfer"
          | "agreement_joint_research_termination"
          | "agreement_joint_research_anti_social_forces"
          | "agreement_joint_research_contract_term"
          | "agreement_joint_research_governing_law"
          | "agreement_joint_research_dispute_resolution"
          | "agreement_joint_research_consultation_in_good_faith"
          | "agreement_service_subcontracting_personal_data"
          | "agreement_service_anti_social_forces"
          | "agreement_service_governing_law"
          | "agreement_license_patent_language"
          | "agreement_license_patent_governing_law"
          | "free_item_1"
          | "free_item_2"
          | "ma_analysis_party"
          | "ma_analysis_execution_date"
          | "definitions"
          | "ma_intergroup_reorganization"
          | "purchase_price"
          | "purchase_price_adjustment"
          | "earn_out"
          | "escrow"
          | "conditions_precedent_mac"
          | "accuracy_of_representations_and_warranties"
          | "financing_out"
          | "litigation_out"
          | "clearance_of_regulation"
          | "body_of_representations_and_warranties"
          | "reps_and_warranties_mac"
          | "potential_liabilities"
          | "full_disclosure_rep"
          | "sandbagging"
          | "anti_sandbagging"
          | "knowledge_qualifier"
          | "keyman_lock"
          | "notice_obligation_for_breach_of_reps_or_covenants"
          | "obligation_to_continue_employment"
          | "ma_analysis_non_compete"
          | "non_solicitation"
          | "limitation_of_liabilities"
          | "fundamental_representations"
          | "materiality_scrape"
          | "third_party_claim"
          | "damages_exclusion_of_tax_and_insurance_benefits"
          | "exclusive_remedy"
          | "special_indemnity"
          | "deemed_amount_of_damages"
          | "sha_party"
          | "sha_shareholding_ratio"
          | "right_to_appoint_officers"
          | "veto_right"
          | "obligation_of_prenotice"
          | "obligation_of_postnotice"
          | "deadlock"
          | "preemptive_right"
          | "right_of_first_refusal"
          | "right_of_first_offer"
          | "put_option"
          | "call_option"
          | "tag_along_rignt"
          | "drag_along_right"
          | "calculation_of_fair_value"
          | "exception_of_restriction_on_transfer"
          | "process_of_share_under_breach"
          | "termination_right"
          | "exclusivity"
          | "non_compete"
          | "minimum_purchase"
          | "most_favored_condition"
          | "share_transfer_then_prenotice"
          | "share_transfer_then_postnotice"
          | "share_transfer_then_termination"
          | "share_transfer_then_penalty_payment"
          | "share_transfer_then_other"
          | "share_contribution_then_prenotice"
          | "share_contribution_then_postnotice"
          | "share_contribution_then_termination"
          | "share_contribution_then_penalty_payment"
          | "share_contribution_then_other"
          | "corporate_merger_then_prenotice"
          | "corporate_merger_then_postnotice"
          | "corporate_merger_then_termination"
          | "corporate_merger_then_penalty_payment"
          | "corporate_merger_then_other"
          | "corporate_division_then_prenotice"
          | "corporate_division_then_postnotice"
          | "corporate_division_then_termination"
          | "corporate_division_then_penalty_payment"
          | "corporate_division_then_other"
          | "change_of_representative_then_prenotice"
          | "change_of_representative_then_postnotice"
          | "change_of_representative_then_termination"
          | "change_of_representative_then_penalty_payment"
          | "change_of_representative_then_other"
          | "change_of_tradename_then_prenotice"
          | "change_of_tradename_then_postnotice"
          | "change_of_tradename_then_termination"
          | "change_of_tradename_then_penalty_payment"
          | "change_of_tradename_then_other"
          | "business_transfer_then_prenotice"
          | "business_transfer_then_postnotice"
          | "business_transfer_then_termination"
          | "business_transfer_then_penalty_payment"
          | "business_transfer_then_other";
        /** 左チャートタイトル */
        left_chart_title?: string;
        /** 右チャートタイトル */
        right_chart_title?: string;
      };
      path: {
        custom_report_id: number;
      };
    };
    responses: {
      /** updates custom_report */
      200: {
        schema: definitions["V2_CustomReportEntity"];
      };
    };
  };
  /** Delete custom_report */
  deleteV2CustomReportCustomReportId: {
    parameters: {
      path: {
        custom_report_id: number;
      };
    };
    responses: {
      /** Delete custom_report */
      204: never;
    };
  };
  /** Create custom_report_value */
  postV2CustomReportValue: {
    parameters: {
      formData: {
        custom_report_id: number;
        chart_position: "left" | "right";
        counts: number;
        label: string;
      };
    };
    responses: {
      /** Create custom_report_value */
      201: unknown;
    };
  };
  /** updates custom_report_value */
  putV2CustomReportValueCustomReportValueId: {
    parameters: {
      formData: {
        chart_position: "left" | "right";
        counts: number;
        label?: string;
      };
      path: {
        custom_report_value_id: number;
      };
    };
    responses: {
      /** updates custom_report_value */
      200: {
        schema: definitions["V2_CustomReportValueEntity"];
      };
    };
  };
  /** Delete custom_report_value */
  deleteV2CustomReportValueCustomReportValueId: {
    parameters: {
      path: {
        custom_report_value_id: number;
      };
    };
    responses: {
      /** Delete custom_report_value */
      204: never;
    };
  };
  /** create document_related_document */
  postV2DocumentRelatedDocument: {
    parameters: {
      formData: {
        /** document id */
        document_id: number;
        /** related document id */
        related_document_id: number;
      };
    };
    responses: {
      /** create document_related_document */
      201: {
        schema: definitions["V2_DocumentRelatedDocumentEntity"];
      };
    };
  };
  /** return drafting_model */
  getV2DraftingModel: {
    parameters: {
      query: {
        code?: string;
        is_production?: boolean;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** return drafting_model */
      200: {
        schema: definitions["V2_DraftingModelListWithStatsEntity"];
      };
    };
  };
  /** import drafting_model by zip */
  postV2DraftingModel: {
    parameters: {
      formData: {
        /** drafting_model.zip */
        drafting_model_zip: unknown;
        code?: string;
        /** supplierメモ */
        memo?: string;
        /** モデル名(デフォルトはdrafting_model.ymlのtitle) */
        title?: string;
        /** 利用案内 */
        description?: string;
        /** supplier以外にも見せるか */
        is_production?: boolean;
      };
    };
    responses: {
      /** import drafting_model by zip */
      201: {
        schema: definitions["V2_DraftingModelEntity"];
      };
    };
  };
  /** get drafting_model */
  getV2DraftingModelDraftingModelId: {
    parameters: {
      path: {
        drafting_model_id: number;
      };
    };
    responses: {
      /** get drafting_model */
      200: {
        schema: definitions["V2_DraftingModelEntity"];
      };
    };
  };
  /** update drafting_model */
  putV2DraftingModelDraftingModelId: {
    parameters: {
      formData: {
        code?: string;
        memo?: string;
        title?: string;
        description?: string;
        is_production?: boolean;
      };
      path: {
        drafting_model_id: number;
      };
    };
    responses: {
      /** update drafting_model */
      200: {
        schema: definitions["V2_DraftingModelEntity"];
      };
    };
  };
  /** delete drafting_model */
  deleteV2DraftingModelDraftingModelId: {
    parameters: {
      path: {
        drafting_model_id: number;
      };
    };
    responses: {
      /** delete drafting_model */
      204: never;
    };
  };
  /** dev render drafting_model */
  getV2DraftingModelDraftingModelIdRenderDev: {
    parameters: {
      query: {
        template_string: string;
        variable_state: string;
      };
      path: {
        drafting_model_id: number;
      };
    };
    responses: {
      /** dev render drafting_model */
      200: unknown;
    };
  };
  /** test drafting_model */
  postV2DraftingModelTest: {
    parameters: {
      formData: {
        /** テストするモデルのid(指定しない場合は、最新のモデル) */
        drafting_model_id?: number;
        /** 実行回数(最大1000件) */
        number_of_executions: number;
      };
    };
    responses: {
      /** test drafting_model */
      201: unknown;
    };
  };
  /** return drafting_tasks */
  getV2DraftingTask: {
    parameters: {
      query: {
        drafting_model_id: number;
        project_id?: number;
        user_id?: number;
        page?: number;
        per?: number;
      };
    };
    responses: {
      /** return drafting_tasks */
      200: {
        schema: definitions["V2_DraftingTaskListWithStatsEntity"];
      };
    };
  };
  /** create drafting_task */
  postV2DraftingTask: {
    parameters: {
      formData: {
        project_id: number;
        user_id: number;
        drafting_model_id: number;
        name?: string;
        note?: string;
      };
    };
    responses: {
      /** create drafting_task */
      201: {
        schema: definitions["V2_DraftingTaskEntity"];
      };
    };
  };
  /** render drafting_task */
  postV2DraftingTaskDraftingTaskIdRender: {
    parameters: {
      path: {
        drafting_task_id: number;
      };
    };
    responses: {
      /** render drafting_task */
      201: {
        schema: definitions["V2_DraftingTaskRenderResultEntity"];
      };
    };
  };
  /** undo drafting_task answer */
  postV2DraftingTaskDraftingTaskIdUndo: {
    parameters: {
      path: {
        drafting_task_id: number;
      };
    };
    responses: {
      /** undo drafting_task answer */
      201: {
        schema: definitions["V2_RenderedDraftingTaskEntity"];
      };
    };
  };
  /** reset drafting_task answer */
  postV2DraftingTaskDraftingTaskIdReset: {
    parameters: {
      path: {
        drafting_task_id: number;
      };
    };
    responses: {
      /** reset drafting_task answer */
      201: unknown;
    };
  };
  /** answer drafting_task */
  postV2DraftingTaskDraftingTaskIdAnswer: {
    parameters: {
      formData: {
        /** 回答を確定させるかどうか */
        submit_answer: boolean;
        /** 回答テキスト blank: [] */
        answers: string;
        /** multi_table_styleの場合に限る。何番目の表か */
        index?: number;
      };
      path: {
        /** drafting_taskのid */
        drafting_task_id: number;
      };
    };
    responses: {
      /** answer drafting_task */
      201: {
        schema: definitions["V2_RenderedDraftingTaskEntity"];
      };
    };
  };
  /** return drafting_task */
  getV2DraftingTaskDraftingTaskId: {
    parameters: {
      query: {
        with_rendered_questions?: boolean;
      };
      path: {
        drafting_task_id: number;
      };
    };
    responses: {
      /** return drafting_task */
      200: {
        schema: definitions["V2_RenderedDraftingTaskEntity"];
      };
    };
  };
  getV2LedgerCustomColumn: {
    parameters: {
      query: {
        ledger_tag_ids?: string;
        "[Integer]"?: string;
        /** 台帳に紐付かないカスタムカラムも含める */
        include_not_tied?: string;
        /** 表示・非表示 */
        "Grape::API::Boolean"?: string;
        /** 共通カスタムカラムかどうか */
        is_shared?: string;
        /** 表示・非表示 */
        is_enabled?: string;
        page?: number;
        per?: number;
        ledger_tag_detail?: "id_only" | "detail";
      };
    };
    responses: {
      200: {
        schema: definitions["V2_LedgerCustomColumnListWithStatsEntity"];
      };
    };
  };
  /** create ledger custom column */
  postV2LedgerCustomColumn: {
    parameters: {
      formData: {
        /** カラム名 */
        column_name: string;
        /** 入力タイプ */
        option_type:
          | "single_select"
          | "multi_select"
          | "boolean"
          | "free_text"
          | "date"
          | "client_master"
          | "string"
          | "number"
          | "date_range"
          | "list";
        /** 補足テキスト */
        caption_text?: string;
        /** 並び順 */
        order_num?: number;
        /** 表示非表示 */
        is_enabled?: boolean;
        /** 共通カスタムカラム項目か */
        is_shared?: boolean;
        /** レビュー時に必須入力とするか */
        is_required?: boolean;
        "ledger_custom_column_options[][id]"?: number[];
        "ledger_custom_column_options[][label]"?: string[];
        "ledger_custom_column_options[][is_default]"?: boolean[];
      };
    };
    responses: {
      /** create ledger custom column */
      201: {
        schema: definitions["V2_LedgerCustomColumnEntity"];
      };
      403: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /**
   * 台帳カスタム項目を更新する。 <br/>
   * 選択肢があるoption_type(single_select, multi_select, list)の場合、以下のように追加・更新・削除を行える。 <br/>
   * ・追加: ledger_custom_column_options[][id]を未指定にする <br/>
   * ・更新: ledger_custom_column_options[][id]に既存のIDを指定する <br/>
   * ・削除: 削除したい既存の選択肢をledger_custom_column_options[]に含めない <br/>
   * ・すべて更新なし: ledger_custom_column_options[]自体を未指定にする
   */
  putV2LedgerCustomColumnLedgerCustomColumnId: {
    parameters: {
      formData: {
        /** カラム名 */
        column_name?: string;
        /** 補足テキスト */
        caption_text?: string;
        /** 並び順 */
        order_num?: number;
        /** レビュー時に必須入力とするか */
        is_required?: boolean;
        /** 既存の選択肢(ledger_custom_column_option)のIDを指定すると、該当の項目を更新する。未指定の場合は選択肢を追加作成する */
        "ledger_custom_column_options[][id]"?: number[];
        "ledger_custom_column_options[][label]"?: string[];
        "ledger_custom_column_options[][is_default]"?: boolean[];
      };
      path: {
        ledger_custom_column_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_LedgerCustomColumnEntity"];
      };
      403: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** delete ledger custom colum */
  deleteV2LedgerCustomColumnLedgerCustomColumnId: {
    parameters: {
      query: {
        /** 強制的に削除する */
        force_delete?: boolean;
      };
      path: {
        ledger_custom_column_id: number;
      };
    };
    responses: {
      /** delete ledger custom colum */
      204: never;
      403: {
        schema: definitions["V2_ErrorEntity"];
      };
    };
  };
  /** get notification */
  getV2Notification: {
    parameters: {
      query: {
        /** スコープ */
        scope?: "all" | "self";
        /** サービス種別 */
        service_type?:
          | "master"
          | "contract_database"
          | "workflow"
          | "drafting"
          | "legal_dd"
          | "setting";
        /** リソース種別 */
        related_resource_type?: "document";
        /** リソースの値（カンマ区切り） */
        related_resource_value?: string;
        /** 送信状況 */
        send_status?: "all" | "wait_for_send" | "sent";
        /** 確認状況 */
        confirm_status?: "all" | "todo" | "done";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** get notification */
      200: {
        schema: definitions["V2_NotificationListWithStatsEntity"];
      };
    };
  };
  /** create notification */
  postV2Notification: {
    parameters: {
      formData: {
        /** サービス種別 */
        service_type:
          | "master"
          | "contract_database"
          | "workflow"
          | "drafting"
          | "legal_dd"
          | "setting";
        /** リソース種別 */
        related_resource_type: "document";
        /** リソースの値 */
        related_resource_value: string;
        /** メールカスタム文章特定用の台帳ID（このパラメータは通知改善のFeature Flagがtrueの場合のみ有効になります） */
        ledger_tag_id?: number;
        /** 送信テンプレ種別 */
        message_text_type: "renewal_deadline" | "disposal" | "other";
        /** 送信予定時刻 */
        will_send_at: string;
        /** 通知先種別 */
        "notification_targets[][resource_type]"?: ("user_group" | "user")[];
        /** 通知先の値 */
        "notification_targets[][resource_id]"?: number[];
        /** 通知メモ（このパラメータは通知改善のFeature Flagがtrueの場合のみ有効になります） */
        note?: string;
      };
    };
    responses: {
      /** create notification */
      201: {
        schema: definitions["V2_NotificationEntity"];
      };
    };
  };
  /** updates notification */
  putV2NotificationNotificationId: {
    parameters: {
      formData: {
        /** サービス種別 */
        service_type?:
          | "master"
          | "contract_database"
          | "workflow"
          | "drafting"
          | "legal_dd"
          | "setting";
        /** リソース種別 */
        related_resource_type?: "document";
        /** リソースの値 */
        related_resource_value?: string;
        /** 送信テンプレ種別 */
        message_text_type?: "renewal_deadline" | "disposal" | "other";
        /** 送信予定時刻 */
        will_send_at?: string;
        /** 送信時刻 */
        sent_at?: string;
        /** 通知先種別 */
        "notification_targets[][resource_type]"?: ("user_group" | "user")[];
        /** 通知先の値 */
        "notification_targets[][resource_id]"?: number[];
        /** 通知メモ（このパラメータは通知改善のFeature Flagがtrueの場合のみ有効になります） */
        note?: string;
      };
      path: {
        notification_id: number;
      };
    };
    responses: {
      /** updates notification */
      200: {
        schema: definitions["V2_NotificationEntity"];
      };
    };
  };
  /** Delete notification */
  deleteV2NotificationNotificationId: {
    parameters: {
      path: {
        notification_id: number;
      };
    };
    responses: {
      /** Delete notification */
      204: never;
    };
  };
  /** confirm notification */
  postV2NotificationNotificationIdConfirm: {
    parameters: {
      path: {
        notification_id: number;
      };
    };
    responses: {
      /** confirm notification */
      201: {
        schema: definitions["V2_NotificationEntity"];
      };
    };
  };
  /** Get default mail content */
  getV2NotificationDefaultMailContent: {
    parameters: {
      query: {
        /** 通知タイプ */
        message_text_type: "renewal_deadline" | "disposal" | "other";
      };
    };
    responses: {
      /** Get default mail content */
      200: {
        schema: definitions["V2_NotificationDefaultMailContentEntity"];
      };
    };
  };
  /** return discussion list with spans and comments. group by document_id */
  getV2DocumentsDiscussions: {
    parameters: {
      formData: {
        /** 検索対象のドキュメントID（複数指定可能） */
        "document_ids[]": number[];
      };
      query: {
        /** resolvedによる取得範囲　[ all: すべてのコメント | resolved: 解決済みのみ | unresolved: 未解決のみ ] */
        resolved_scope?: "all" | "resolved" | "unresolved";
      };
    };
    responses: {
      /** return discussion list with spans and comments. group by document_id */
      200: {
        schema: definitions["V2_DocumentDiscussionListEntity"][];
      };
    };
  };
  /** Get documents notifications */
  getV2DocumentsNotifications: {
    parameters: {
      query: {
        /** ドキュメントIDs */
        document_ids: string;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** Get documents notifications */
      200: {
        schema: definitions["V2_NotificationListWithStatsEntity"];
      };
    };
  };
  /** return if active_job remain or not */
  getV2ActiveJobLeft: {
    responses: {
      /** return if active_job remain or not */
      200: {
        schema: definitions["V2_ActiveJobLeftEntity"];
      };
    };
  };
  /** list sso_configs */
  getV2SsoConfig: {
    responses: {
      /** list sso_configs */
      200: {
        schema: definitions["V2_SsoConfigEntity"][];
      };
    };
  };
  /** create sso_config */
  postV2SsoConfig: {
    parameters: {
      formData: {
        /** 複数のIDP設定がある時にIDPを区別するためのキー */
        idp_key: string;
        /** IDP ログインurl */
        idp_sso_service_url: string;
        /** SAML 署名証明書 Fingerprint */
        idp_cert_fingerprint: string;
        /** IDP 識別子 */
        idp_entity_id: string;
        /** IDP ログアウトurl */
        idp_slo_service_url: string;
        /** MNTSQに未登録のユーザーがSSOログインで新規登録することを許す場合true */
        is_accepting_new_user: boolean;
        /** ユーザー名追加要求ができる場合のclaim名 */
        claim_name_of_display_name?: string;
        /** ユーザー名追加要求ができる場合のキー */
        attribute_key_of_display_name?: string;
        /** Email追加要求ができる場合のclaim名 */
        claim_name_of_email_address?: string;
        /** Email追加要求ができる場合のキー */
        attribute_key_of_email_address?: string;
        /** ユーザーを新規登録する際のOrganization */
        organization_id: number;
        /** SP initiatedで利用するかどうか */
        is_sp_initiated_active?: boolean;
        /** SP initiatedでのSLO(MNTSQをログアウトしたらIdPをログアウト)を有効にするかどうか */
        is_sp_initiated_slo_active?: boolean;
        /** SPがリクエスト署名するか */
        is_sp_request_signature_active?: boolean;
        /** authn_contextをMNTSQ側で指定するかどうか */
        with_authn_context?: boolean;
      };
    };
    responses: {
      /** create sso_config */
      201: {
        schema: definitions["V2_SsoConfigEntity"];
      };
    };
  };
  /** sso_init path */
  getV2SsoConfigInitPath: {
    responses: {
      /** sso_init path */
      200: {
        schema: definitions["V2_SsoPathEntity"];
      };
    };
  };
  /** update sso_config */
  putV2SsoConfigSsoConfigId: {
    parameters: {
      formData: {
        /** 複数のIDP設定がある時にIDPを区別するためのキー */
        idp_key?: string;
        /** IDP ログインurl */
        idp_sso_service_url?: string;
        /** SAML 署名証明書 Fingerprint */
        idp_cert_fingerprint?: string;
        /** IDP 識別子 */
        idp_entity_id?: string;
        /** IDP ログアウトurl */
        idp_slo_service_url?: string;
        /** MNTSQに未登録のユーザーがSSOログインで新規登録することを許す場合true */
        is_accepting_new_user?: boolean;
        /** ユーザー名追加要求ができる場合のclaim名 */
        claim_name_of_display_name?: string;
        /** ユーザー名追加要求ができる場合のキー */
        attribute_key_of_display_name?: string;
        /** Email追加要求ができる場合のclaim名 */
        claim_name_of_email_address?: string;
        /** Email追加要求ができる場合のキー */
        attribute_key_of_email_address?: string;
        /** ユーザーを新規登録する際のOrganization */
        organization_id?: number;
        /** SP initiatedで利用するかどうか */
        is_sp_initiated_active?: boolean;
        /** SP initiatedでのSLO(MNTSQをログアウトしたらIdPをログアウト)を有効にするかどうか */
        is_sp_initiated_slo_active?: boolean;
        /** SPがリクエスト署名するか */
        is_sp_request_signature_active?: boolean;
        /** authn_contextをMNTSQ側で指定するかどうか */
        with_authn_context?: boolean;
      };
      path: {
        sso_config_id: number;
      };
    };
    responses: {
      /** update sso_config */
      200: {
        schema: definitions["V2_SsoConfigEntity"];
      };
    };
  };
  /** destroy sso_config */
  deleteV2SsoConfigSsoConfigId: {
    parameters: {
      path: {
        sso_config_id: number;
      };
    };
    responses: {
      /** destroy sso_config */
      204: never;
    };
  };
  /** list sso_config_request_signatures */
  getV2SsoConfigRequestSignature: {
    responses: {
      /** list sso_config_request_signatures */
      200: {
        schema: definitions["V2_SsoConfigRequestSignatureEntity"][];
      };
    };
  };
  /** create sso_config_request_signature */
  postV2SsoConfigRequestSignature: {
    parameters: {
      formData: {
        /** RequestSignatureを適用するSsoConfig */
        sso_config_id: number;
        /** SPがリクエスト署名する場合のPrivateKey */
        sp_request_private_key: string;
        /** SPがリクエスト署名する場合のCertificate */
        sp_request_certificate: string;
        /** 有効期限 */
        expire_at: string;
      };
    };
    responses: {
      /** create sso_config_request_signature */
      201: {
        schema: definitions["V2_SsoConfigRequestSignatureEntity"];
      };
    };
  };
  /** update sso_config_request_signature */
  putV2SsoConfigRequestSignatureSsoConfigRequestSignatureId: {
    parameters: {
      formData: {
        /** RequestSignatureを適用するSsoConfig */
        sso_config_id?: number;
        /** SPがリクエスト署名する場合のPrivateKey */
        sp_request_private_key?: string;
        /** SPがリクエスト署名する場合のCertificate */
        sp_request_certificate?: string;
        /** 有効期限 */
        expire_at?: string;
      };
      path: {
        sso_config_request_signature_id: number;
      };
    };
    responses: {
      /** update sso_config_request_signature */
      200: {
        schema: definitions["V2_SsoConfigRequestSignatureEntity"];
      };
    };
  };
  /** destroy sso_config_request_signature */
  deleteV2SsoConfigRequestSignatureSsoConfigRequestSignatureId: {
    parameters: {
      path: {
        sso_config_request_signature_id: number;
      };
    };
    responses: {
      /** destroy sso_config_request_signature */
      204: never;
    };
  };
  /** get governing law */
  getV2GoverningLaw: {
    responses: {
      /** get governing law */
      200: {
        schema: definitions["V2_GoverningLawEntity"][];
      };
    };
  };
  /** get public_favorite_items */
  getV2PublicFavoriteItem: {
    parameters: {
      query: {
        /** 社内推奨の種類 */
        item_type?:
          | "document"
          | "clause"
          | "document_tree"
          | "matter"
          | "matter_timeline";
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      /** get public_favorite_items */
      200: {
        schema: definitions["V2_PublicFavoriteItemListWithStatsEntity"];
      };
    };
  };
  /** create public_favorite_item */
  postV2PublicFavoriteItem: {
    parameters: {
      formData: {
        /** 社内推奨の種類 */
        item_type:
          | "document"
          | "clause"
          | "document_tree"
          | "matter"
          | "matter_timeline";
        /** 社内推奨対象の元名称 */
        name: string;
        /** 社内推奨対象の識別値。item_typeに応じて変化。documentの場合はDocumentのid、clauseの場合はClauseのid、queryの場合はURL文字列。 */
        value: string;
        /** 社内推奨登録時のタイトル */
        note: string;
        /** 社内推奨の使い方説明文 */
        description?: string;
      };
    };
    responses: {
      /** create public_favorite_item */
      201: {
        schema: definitions["V2_PublicFavoriteItemEntity"];
      };
    };
  };
  /** update public_favorite_item */
  putV2PublicFavoriteItemPublicFavoriteItemId: {
    parameters: {
      formData: {
        /** 社内推奨登録時のタイトル */
        note?: string;
        /** 社内推奨の使い方説明文 */
        description?: string;
      };
      path: {
        public_favorite_item_id: number;
      };
    };
    responses: {
      /** update public_favorite_item */
      200: unknown;
    };
  };
  /** delete public_favorite_item */
  deleteV2PublicFavoriteItemPublicFavoriteItemId: {
    parameters: {
      path: {
        public_favorite_item_id: number;
      };
    };
    responses: {
      /** delete public_favorite_item */
      204: never;
    };
  };
  /** list sharepoint_document_library_config */
  getV2SharepointDocumentLibraryConfig: {
    responses: {
      /** list sharepoint_document_library_config */
      200: {
        schema: definitions["V2_SharepointDocumentLibraryConfigEntity"][];
      };
    };
  };
  /** create sharepoint_document_library_config */
  postV2SharepointDocumentLibraryConfig: {
    parameters: {
      formData: {
        /** DocumentLibrary名 */
        name: string;
        /** このキーを使ってSharepointDocumentとConfigを照合する */
        document_library_key: string;
        /** 保存先ディレクトリID */
        document_tree_id: string;
      };
    };
    responses: {
      /** create sharepoint_document_library_config */
      201: unknown;
    };
  };
  /** update sharepoint_document_library_config */
  putV2SharepointDocumentLibraryConfigId: {
    parameters: {
      formData: {
        /** DocumentLibrary名 */
        name?: string;
        /** このキーを使ってSharepointDocumentとConfigを照合する */
        document_library_key?: string;
        /** 保存先ディレクトリID */
        document_tree_id?: string;
      };
      path: {
        id: number;
      };
    };
    responses: {
      /** update sharepoint_document_library_config */
      200: {
        schema: definitions["V2_SharepointDocumentLibraryConfigEntity"];
      };
    };
  };
  /** delete sharepoint_document_library_config */
  deleteV2SharepointDocumentLibraryConfigId: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** delete sharepoint_document_library_config */
      204: never;
    };
  };
  /** get perm infos */
  getV2AuthorizationDiagnose: {
    parameters: {
      query: {
        user_id: string;
        document_tree_id: number;
      };
    };
    responses: {
      /** get perm infos */
      200: {
        schema: definitions["V2_AuthorizationDiagnosisEntity"][];
      };
    };
  };
  /**
   * 指定した設定キー・リソースに対して、自分が保持している権限を返す。<br/>
   * 通常は確認したいresource_identifierに相当する設定キーとリソースを直接指定して実行する。(例: config_keys[]=workflow&resource_type=matter&resource_id=1) <br/>
   * ただし、resource_identifierを特定可能な別のリソースを指定することも可能。その場合、特定されたリソース種別はレスポンスのresolved_resource_typeに含まれる。
   * (例: config_keys[]=workflow&resource_type=document_tree&resource_id=1 とすると、document_tree:1 を案件フォルダ配下にかかえる案件の権限を返す)
   */
  getV2AuthorizationMe: {
    parameters: {
      query: {
        /** 設定キー */
        "config_keys[]": (
          | "master"
          | "contract_database"
          | "legal_dd"
          | "drafting"
          | "workflow"
          | "setting"
          | "supplier"
        )[];
        /** リソース種別。*の場合は指定したconfig_keysに対応する種別をすべて調べる。 */
        resource_type:
          | "ledger_tag"
          | "document_tree"
          | "project"
          | "drafting_model"
          | "matter_form"
          | "matter"
          | "user_group"
          | "docusign_account"
          | "supplier"
          | "*";
        /** リソースID。指定しない場合は何でも良いので許可があるか確認する。0の場合は*の権限を確認する */
        "resource_ids[]"?: number[];
      };
    };
    responses: {
      200: {
        schema: definitions["V2_AuthorizationInfoEntity"][];
      };
    };
  };
  getV2AuthorizationGroupPermission: {
    parameters: {
      query: {
        /** リソース種別 */
        resource_type: "document_tree" | "ledger_tag";
        /** リソースID */
        resource_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_GroupPermissionMinimumEntity"][];
      };
    };
  };
  /** update organization_config by not supplier user */
  putV2OrganizationConfigAuthInfoCsvBatchSetting: {
    parameters: {
      formData: {
        /** ユーザー情報連携を行うかどうか。既定値はfalse */
        is_auth_info_csv_batch_active?: boolean;
      };
    };
    responses: {
      /** update organization_config by not supplier user */
      200: {
        schema: definitions["V2_OrganizationConfigEntity"];
      };
    };
  };
  /** organization_config */
  getV2OrganizationConfig: {
    parameters: {
      query: {
        organization_id?: number;
      };
    };
    responses: {
      /** organization_config */
      200: {
        schema: definitions["V2_OrganizationConfigEntity"][];
      };
    };
  };
  /** update organization_config */
  putV2OrganizationConfig: {
    parameters: {
      formData: {
        /** NO&T向けの表記を表示するか. (default)false */
        is_noandt_writing?: boolean;
        /** 法務DDの有効、無効. (default)false */
        is_legal_dd_active?: boolean;
        /** 資料請求・Q&Aの有効、無効. (default)false */
        is_questions_active?: boolean;
        /** 契約DBの有効、無効. (default)true */
        is_contract_database_active?: boolean;
        /** ドラフティングの有効、無効. (default)false */
        is_drafting_active?: boolean;
        /** 検索対象のプロジェクトID。0を指定するとnilに更新される */
        search_target_project_id?: number;
        /** MNTSQ英文解析の有効、無効 */
        is_english_mntsq_module_active?: boolean;
        /** Connectmail連携の有効、無効. (default)false */
        is_connectmail_email_active?: boolean;
        /** Connectmail連携用メールアドレスのドメイン */
        connectmail_email_recipient_domain?: string;
        /** DocuSignの連携base_uri */
        docusign_base_uri?: string;
        /** DocuSignの連携integration_key */
        docusign_app_integration_key?: string;
        /** DocuSignの連携RSAkey */
        docusign_private_key?: string;
        /** Docusignの取得基準日時 (2018-10-01 12:00:00) */
        docusign_sync_from?: string;
        /** DocusignのAPI経由受信物探索を行うかどうか。default(false) */
        is_sync_docusign_receive_by_api?: boolean;
        /** Googleドライブ連携の有効、無効 */
        is_gdrive_active?: boolean;
        /** Googleドライブ連携のクレデンシャル */
        gdrive_credential?: string;
        /** Googleドライブ連携でクラウド側での削除を無視するかどうかのフラグ */
        gdrive_non_delete?: boolean;
        /** Connectmail連携の有効、無効 */
        is_connectmail_active?: boolean;
        /** Connectmailから取得したファイルのupload先document_tree_id */
        connectmail_document_tree_id?: number;
        /** Connectmail連携のタイプ(default) standard */
        connectmail_type?: "standard" | "komatsu" | "document_library";
        /** 雛型の保存先フォルダ */
        contract_template_target_document_tree_id?: number;
        /** MNTSQ雛型の保存先フォルダ */
        mntsq_contract_template_target_document_tree_id?: number;
        /** MNTSQ雛型のアーカイブ先フォルダ */
        outdated_mntsq_contract_template_document_tree_id?: number;
        /** 締結版の保存先フォルダ。ここに変更したファイルは自動で締結版となる。（正規表現） */
        final_version_file_path?: string;
        /** DocumentDecryptionJobを分割するDocument数 */
        decryption_documents_slice_unit?: number;
        /** クラウドサインの有効、無効 */
        is_cloudsign_active?: boolean;
        /** クラウドサインの本番環境か否か */
        is_cloudsign_production?: boolean;
        /** Workflowの有効、無効 */
        is_workflow_active?: boolean;
        /** ユーザーの手動ファイルアップロードを許可するかどうか。既定値はtrue(許可) */
        is_manual_upload_active?: boolean;
        /** Masterの契約の有無。既定値はfalse(無し) */
        is_master_active?: boolean;
        /** トライアル環境かどうか。既定値はfalse */
        is_trial_use?: boolean;
        /** データベース_CS問い合わせダイアログの有効、無効 */
        is_db_cs_help_active?: boolean;
        /** ユーザー情報連携を行うかどうか。既定値はfalse */
        is_auth_info_csv_batch_active?: boolean;
        /** ユーザー情報連携のタイプ */
        auth_info_csv_batch_type?: "lv1" | "lv2";
        /** Boxの有効、無効 */
        is_box_active?: boolean;
        /** BoxFetcherのタイプ */
        box_fetcher_type?: "enterprise" | "as_user" | "snapshot";
        /** Box連携のclientID */
        box_client_id?: string;
        /** Boxの連携clientSecret */
        box_client_secret?: string;
        /** Box連携のpublicKeyID */
        box_public_key_id?: string;
        /** Box連携のprivateKey */
        box_private_key?: string;
        /** Box連携のpassphrase */
        box_passphrase?: string;
        /** Box連携のenterpriseID */
        box_enterprise_id?: string;
        /** Box連携のappUserId */
        box_user_id?: string;
        /** organizationが使用しているBoxのドメイン(空欄の場合はhttps://app.box.comが設定される) */
        box_domain?: string;
        /** Boxのを詳細ログを有効にするかどうか。debugレベルのログが出力される */
        is_active_box_detail_log?: boolean;
        /** GDriveのを詳細ログを有効にするかどうか。debugレベルのログが出力される */
        is_active_gdrive_detail_log?: boolean;
        /** 案件ごとに発行されるメールアドレスの共通ドメイン名 */
        matter_email_recipient_domain?: string;
        /** ログイン検知メールをユーザーが受け取るか(IP制限を利用しない場合は原則ON) */
        is_login_email_on?: boolean;
        /** 外部ユーザーIDの入力を可能とするか */
        is_user_external_id_enable?: boolean;
        /** 案件管理の連携用のファイルを出力するか */
        is_matter_connect_file_creation_active?: boolean;
        /** [Feature Flag] 通知の自動設定、相対日時指定、本文カスタマイズなどの機能の有効・無効化を制御するために使用します。QAやローカル動作確認で true にします。本番環境では基本的に false の想定です */
        is_notification_improvement_active_experimentally?: boolean;
      };
    };
    responses: {
      /** update organization_config */
      200: {
        schema: definitions["V2_OrganizationConfigEntity"];
      };
    };
  };
  /** tenant_config */
  getV2TenantConfig: {
    responses: {
      /** tenant_config */
      200: {
        schema: definitions["V2_TenantConfigEntity"];
      };
    };
  };
  /** ES indexingの停止/開始フラグの状態を取得する */
  getV2IndexingSuspend: {
    responses: {
      /** ES indexingの停止/開始フラグの状態を取得する */
      200: {
        schema: definitions["V2_IndexingSuspendEntity"];
      };
    };
  };
  /**
   * ES indexingの停止フラグの更新をおこなう。 <br/>
   * ・停止させた(will_suspends:false=>true)場合、今後のindexingは行われない。かつ、現在処理中のindexing jobがあれば、それも途中停止する。<br/>
   * ・開始させた(will_suspends:true=>false)場合、今後のindexingが行われるようになる。かつ、indexing処理対象レコードが停止時～停止中に(redisに)滞留していた場合は、そのindexingが即時実施される。<br/>
   *   ※keyword_suggestsとaggregation(名寄せ)については、redisに処理対象idを保持しないため、即時実施はない
   */
  putV2IndexingSuspend: {
    parameters: {
      formData: {
        /** 設定したいindexing process */
        target_process?:
          | "documents"
          | "keyword_suggests"
          | "client_names"
          | "aggregation"
          | "matters"
          | "all";
        /** 停止(true)/開始(false) */
        will_suspends?: boolean;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_IndexingSuspendEntity"];
      };
    };
  };
  /** list box_sync_config */
  getV2BoxSyncConfig: {
    responses: {
      /** list box_sync_config */
      200: {
        schema: definitions["V2_BoxSyncConfigEntity"][];
      };
    };
  };
  /** create box_sync_config */
  postV2BoxSyncConfig: {
    parameters: {
      formData: {
        /** 取り込み元BoxフォルダのID */
        box_folder_id: string;
        /** 取り込み先MNTSQフォルダ */
        document_tree_id: number;
      };
    };
    responses: {
      /** create box_sync_config */
      201: unknown;
    };
  };
  /** delete box_sync_config */
  deleteV2BoxSyncConfigId: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** delete box_sync_config */
      204: never;
    };
  };
  /**
   * keyword_suggestsのindexing実行の指示を出す。実行はapp_job_workerで非同期に実施される。<br/>
   * keyword_suggestsのindexingはapp_cronにて定期実行されているため、通常はこのAPIを使うことはない。<br/>
   * trial環境でkeyword_suggestsのindexを最新化させたい場合などで用いる。
   */
  postV2SearchIndexerKeywordSuggests: {
    responses: {
      201: unknown;
    };
  };
  /** csvから案件を一括取り込み */
  postV2IntroductionProjectOrganizationIdMatterImport: {
    parameters: {
      formData: {
        csv_file: unknown;
        /** チェックのみ実行するか？ */
        check_only: boolean;
        /** dry_runで実行するか？ */
        dry_run: boolean;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      /** csvから案件を一括取り込み */
      201: unknown;
    };
  };
  /** 既存の台帳に既存の共通カスタム項目を関連付ける */
  postV2IntroductionProjectOrganizationIdLedgerTagLedgerCustomColumn: {
    parameters: {
      formData: {
        csv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      /** 既存の台帳に既存の共通カスタム項目を関連付ける */
      201: unknown;
    };
  };
  /** csvから案件フォームを一括作成 */
  postV2IntroductionProjectOrganizationIdMatterForm: {
    parameters: {
      formData: {
        csv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      /** csvから案件フォームを一括作成 */
      201: unknown;
    };
  };
  postV2IntroductionProjectOrganizationIdManagementTag: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  postV2IntroductionProjectOrganizationIdFolder: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  postV2IntroductionProjectOrganizationIdDocusignCustomFieldCondition: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  postV2IntroductionProjectOrganizationIdGroupPermission: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  postV2IntroductionProjectOrganizationIdUserGroupPerm: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  /** 台帳の新規作成と、台帳項目の関連付け */
  postV2IntroductionProjectOrganizationIdLedgerLedgerColumn: {
    parameters: {
      formData: {
        tsv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      /** 台帳の新規作成と、台帳項目の関連付け */
      201: unknown;
    };
  };
  /** "/app/shared/ledger_connect/input" 配下にファイルを用意し、その名前をパラメータに与えてください */
  postV2IntroductionProjectOrganizationIdLedgerForJcb: {
    parameters: {
      formData: {
        /** 例: "yyyymmdd_metadata.csv" */
        csv_file_name: string;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      /** "/app/shared/ledger_connect/input" 配下にファイルを用意し、その名前をパラメータに与えてください */
      201: unknown;
    };
  };
  postV2IntroductionProjectOrganizationIdLedger: {
    parameters: {
      formData: {
        csv_file: unknown;
      };
      path: {
        organization_id: number;
      };
    };
    responses: {
      201: unknown;
    };
  };
  /** カスタム項目の新規作成 */
  postV2IntroductionProjectLedgerCustomColumn: {
    parameters: {
      formData: {
        csv_file: unknown;
      };
    };
    responses: {
      /** カスタム項目の新規作成 */
      201: unknown;
    };
  };
  /** get mntsq_en_module_target_document_trees */
  getV2MntsqEnModuleTargetDocumentTree: {
    responses: {
      /** get mntsq_en_module_target_document_trees */
      200: {
        schema: definitions["V2_MntsqEnModuleTargetDocumentTreeEntity"][];
      };
    };
  };
  /** create mntsq_en_module_target_document_tree */
  postV2MntsqEnModuleTargetDocumentTree: {
    parameters: {
      formData: {
        /** Mntsq英文解析の処理対象とするdocument_tree_id */
        document_tree_id: number;
      };
    };
    responses: {
      /** create mntsq_en_module_target_document_tree */
      201: {
        schema: definitions["V2_MntsqEnModuleTargetDocumentTreeEntity"];
      };
    };
  };
  /** delete mntsq_en_module_target_document_tree */
  deleteV2MntsqEnModuleTargetDocumentTreeMntsqEnModuleTargetDocumentTreeId: {
    parameters: {
      path: {
        mntsq_en_module_target_document_tree_id: number;
      };
    };
    responses: {
      /** delete mntsq_en_module_target_document_tree */
      204: never;
    };
  };
  /** get matter form / form_titleの文字コード昇順に返す */
  getV2MatterForm: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** 取得するmatter_form_idsの配列（カンマ区切り） */
        matter_form_ids?: string;
        /** 部分一致検索 */
        query?: string;
        /** アーカイブされたものを除外するかどうか */
        is_exclude_archived?: boolean;
      };
    };
    responses: {
      /** get matter form / form_titleの文字コード昇順に返す */
      200: {
        schema: definitions["V2_MatterFormListWithStatsEntity"];
      };
    };
  };
  /** create matter form */
  postV2MatterForm: {
    parameters: {
      formData: {
        form_title: string;
        target_document_tree_id: number;
        form_description?: string;
        form_guidance?: string;
        "default_responsible_user_ids[]"?: number[];
        "default_responsible_user_group_ids[]"?: number[];
        "default_related_user_ids[]"?: number[];
        "default_related_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** create matter form */
      201: {
        schema: definitions["V2_MatterFormDetailEntity"];
      };
    };
  };
  /** get matter_form */
  getV2MatterFormMatterFormId: {
    parameters: {
      path: {
        matter_form_id: number;
      };
    };
    responses: {
      /** get matter_form */
      200: {
        schema: definitions["V2_MatterFormDetailEntity"];
      };
    };
  };
  /** put matter_form */
  putV2MatterFormMatterFormId: {
    parameters: {
      formData: {
        form_title?: string;
        target_document_tree_id?: number;
        form_description?: string;
        form_guidance?: string;
        "default_responsible_user_ids[]"?: number[];
        "default_responsible_user_group_ids[]"?: number[];
        "default_related_user_ids[]"?: number[];
        "default_related_user_group_ids[]"?: number[];
      };
      path: {
        matter_form_id: number;
      };
    };
    responses: {
      /** put matter_form */
      200: unknown;
    };
  };
  /** delete matter_form / supplierのみ実行可 / テストデータ削除や、顧客対応でデータ削除を依頼されたとき等の利用を想定 */
  deleteV2MatterFormMatterFormId: {
    parameters: {
      query: {
        /** 削除を行う場合にtrueにする (誤操作防止用) */
        force_execute: boolean;
      };
      path: {
        matter_form_id: number;
      };
    };
    responses: {
      /** delete matter_form / supplierのみ実行可 / テストデータ削除や、顧客対応でデータ削除を依頼されたとき等の利用を想定 */
      204: never;
      /** Forbidden */
      403: unknown;
    };
  };
  /** unarchive matter_form */
  postV2MatterFormMatterFormIdUnarchive: {
    parameters: {
      path: {
        matter_form_id: number;
      };
    };
    responses: {
      /** unarchive matter_form */
      201: unknown;
    };
  };
  /** archive matter_form */
  postV2MatterFormMatterFormIdArchive: {
    parameters: {
      path: {
        matter_form_id: number;
      };
    };
    responses: {
      /** archive matter_form */
      201: unknown;
    };
  };
  /** 指定した案件フォームを、関連データと合わせてエクスポートする */
  postV2MatterFormExportListAll: {
    responses: {
      /** 指定した案件フォームを、関連データと合わせてエクスポートする */
      201: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 指定した案件フォームを、関連データと合わせてエクスポートする */
  postV2MatterFormExportList: {
    parameters: {
      formData: {
        /** エクスポートする案件フォームのIDの配列（カンマ区切り） */
        matter_form_ids: string;
      };
    };
    responses: {
      /** 指定した案件フォームを、関連データと合わせてエクスポートする */
      201: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** update matter status order */
  postV2MatterStatusOrdering: {
    parameters: {
      formData: {
        matter_form_id: number;
        /** matter_status.id */
        "items[][id]": number[];
        /** 並び替え後の順番 */
        "items[][order_num]": number[];
      };
    };
    responses: {
      /** update matter status order */
      201: unknown;
    };
  };
  /** create matter status / type:Customのステータスを作成する */
  postV2MatterStatus: {
    parameters: {
      formData: {
        matter_form_id: number;
        label: string;
        type: "Initial" | "InProgress" | "Completion";
      };
    };
    responses: {
      /** create matter status / type:Customのステータスを作成する */
      201: {
        schema: definitions["V2_MatterStatusEntity"];
      };
    };
  };
  /** update matter status */
  putV2MatterStatusMatterStatusId: {
    parameters: {
      formData: {
        matter_form_id: number;
        label?: string;
        type?: "Initial" | "InProgress" | "Completion";
      };
      path: {
        matter_status_id: number;
      };
    };
    responses: {
      /** update matter status */
      200: unknown;
    };
  };
  /** delete matter status */
  deleteV2MatterStatusMatterStatusId: {
    parameters: {
      path: {
        matter_status_id: number;
      };
    };
    responses: {
      /** delete matter status */
      204: never;
    };
  };
  /** create matter custom column */
  postV2MatterCustomColumn: {
    parameters: {
      formData: {
        matter_form_id: number;
        column_name: string;
        option_type:
          | "single_select"
          | "multi_select"
          | "boolean"
          | "free_text"
          | "date"
          | "client_master"
          | "string"
          | "number"
          | "date_range"
          | "list"
          | "list_single";
        caption_text?: string;
        is_required: boolean;
        is_hidden: boolean;
        /** 選択肢の名前 */
        "matter_custom_column_options[][label]"?: string[];
        /** 初期値かどうか */
        "matter_custom_column_options[][is_default]"?: boolean[];
        /** 非表示フラグ */
        "matter_custom_column_options[][is_hidden]"?: boolean[];
        /** 並び替え後の順番（1始まり） */
        "matter_custom_column_options[][order_num]": number[];
      };
    };
    responses: {
      /** create matter custom column */
      201: {
        schema: definitions["V2_MatterCustomColumnFullEntity"];
      };
    };
  };
  /**
   * 案件カスタム項目を更新する。 <br/>
   * 選択肢があるoption_type(single_select, multi_select, list)の場合、以下のように追加・更新・削除を行える。 <br/>
   * ・追加: matter_custom_column_options[][id]を未指定にする <br/>
   * ・更新: matter_custom_column_options[][id]に既存のIDを指定する <br/>
   * ・削除: 削除したい既存の選択肢をmatter_custom_column_options[]に含めない <br/>
   * ・すべて更新なし: matter_custom_column_options[]自体を未指定にする
   */
  putV2MatterCustomColumnMatterCustomColumnId: {
    parameters: {
      formData: {
        column_name?: string;
        caption_text?: string;
        is_required?: boolean;
        option_type?:
          | "single_select"
          | "multi_select"
          | "boolean"
          | "free_text"
          | "date"
          | "client_master"
          | "string"
          | "number"
          | "date_range"
          | "list"
          | "list_single";
        is_hidden?: boolean;
        /** 既存の選択肢(matter_custom_column_option)のIDを指定すると、該当の項目をupdateする。未指定の場合は選択肢を追加作成する */
        "matter_custom_column_options[][id]"?: number[];
        "matter_custom_column_options[][label]"?: string[];
        "matter_custom_column_options[][is_default]"?: boolean[];
        /** 非表示フラグ */
        "matter_custom_column_options[][is_hidden]"?: boolean[];
        /** 並び替え後の順番（1始まり） */
        "matter_custom_column_options[][order_num]": number[];
      };
      path: {
        matter_custom_column_id: number;
      };
    };
    responses: {
      200: unknown;
    };
  };
  /** delete matter custom column */
  deleteV2MatterCustomColumnMatterCustomColumnId: {
    parameters: {
      path: {
        matter_custom_column_id: number;
      };
    };
    responses: {
      /** delete matter custom column */
      204: never;
    };
  };
  /** create matter */
  postV2Matter: {
    parameters: {
      formData: {
        matter_form_id: number;
        title: string;
        description: string;
        deadline_date?: string;
        /** 取引先のID一式 */
        "client_master_ids[]"?: number[];
        /** カスタム項目のID */
        "matter_custom_column_values[][matter_custom_column_id]"?: number[];
        /** カスタム項目値 */
        "matter_custom_column_values[][value]"?: string[];
        /** 依頼者(ユーザー)のID一式。グループと合わせて少なくとも1つは指定が必須 */
        "requester_user_ids[]"?: number[];
        /** 依頼者(グループ)のID一式。ユーザーと合わせて少なくとも1つは指定が必須 */
        "requester_user_group_ids[]"?: number[];
        /** 担当者(ユーザー)のID一式。 */
        "responsible_user_ids[]"?: number[];
        /** 担当者(グループ)のID一式。 */
        "responsible_user_group_ids[]"?: number[];
        /** 関係者(ユーザー)のID一式。 */
        "related_user_ids[]"?: number[];
        /** 関係者(グループ)のID一式。 */
        "related_user_group_ids[]"?: number[];
        /** 元になる案件下書きID */
        matter_draft_id?: number;
        /** 公開用下書き添付ファイルのID一式 */
        "matter_draft_attachment_document_ids[]"?: number[];
      };
    };
    responses: {
      /** create matter */
      201: {
        schema: definitions["V2_MatterDetailEntity"];
      };
    };
  };
  /** export matter list async */
  postV2MatterExportMatterList: {
    parameters: {
      formData: {
        /** 出力対象の起票日（開始） */
        matter_request_date_start: string;
        /** 出力対象の起票日（終了） */
        matter_request_date_end: string;
        /** matter_form_id カンマ区切り */
        matter_form_ids?: string;
      };
    };
    responses: {
      /** export matter list async */
      201: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  /** get matter stats async */
  getV2MatterStats: {
    parameters: {
      query: {
        /** 担当者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        responsible_user_ids: string;
        /** 検索対象の日付(created_at_date or deadline_date or last_actioned_at_date) */
        target_date: string;
        /** 検索対象開始日 */
        from?: string;
        /** 検索対象終了日 */
        to?: string;
        /** paginationのpage */
        page?: number;
        /** paginationのper */
        per?: number;
      };
    };
    responses: {
      /** get matter stats async */
      200: {
        schema: definitions["V2_MatterStatsEntity"][];
      };
    };
  };
  /** get matter stats search condition */
  getV2MatterStatsSearchCondition: {
    responses: {
      /** get matter stats search condition */
      200: {
        schema: definitions["V2_MatterStatsSearchConditionEntity"];
      };
    };
  };
  /** ダッシュボードの検索条件を登録、更新します */
  postV2MatterStatsSearchCondition: {
    parameters: {
      formData: {
        /** 担当者(user_id)。カンマ区切りで複数指定可 (OR結合) */
        responsible_user_ids: string;
        /** 選択した担当者のユーザid */
        select_user_id: number;
      };
    };
    responses: {
      /** ダッシュボードの検索条件を登録、更新します */
      201: unknown;
    };
  };
  /** 案件の最終アクション日時を取得する */
  getV2MatterMatterIdLastActionedAt: {
    parameters: {
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** 案件の最終アクション日時を取得する */
      200: {
        schema: definitions["V2_MatterLastActionedAtEntity"];
      };
    };
  };
  /** トライアル・デモ環境向け: 案件やタイムラインの日時を差し替える / supplierのみ実行可 */
  putV2MatterMatterIdSetTime: {
    parameters: {
      formData: {
        /** 日時(例: 2012-01-23 12:34:00)を指定すると、その日時に案件を作成した体で、依頼日・案件番号・案件フォルダ名を変更する */
        matter_creation_time?: string;
        /** 日時(例: 2012-01-23 12:34:00)を改行区切りで指定すると、案件やりとり画面のタイムラインの日時を上から順に、指定した日時でさしかえる。さしかえたくないタイムラインは、該当行に日時でなく - と指定する。 */
        "matter_timeline_creation_time_series[]"?: string[];
      };
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** トライアル・デモ環境向け: 案件やタイムラインの日時を差し替える / supplierのみ実行可 */
      200: unknown;
    };
  };
  /** 案件と案件フォームの権限をチェックし、「ユーザーが持つフォーム権限のうち最上位の権限」で分類する */
  getV2MatterMatterIdUsers: {
    parameters: {
      path: {
        matter_id: string;
      };
      formData: {
        /** 権限チェックしたいユーザーのID */
        "user_ids[]": number[];
      };
    };
    responses: {
      /** 案件と案件フォームの権限をチェックし、「ユーザーが持つフォーム権限のうち最上位の権限」で分類する */
      200: {
        schema: definitions["V2_MatterUserClassifiedByPermissionEntity"];
      };
    };
  };
  /** get matter */
  getV2MatterMatterId: {
    parameters: {
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** get matter */
      200: {
        schema: definitions["V2_MatterDetailEntity"];
      };
    };
  };
  /** update matter */
  putV2MatterMatterId: {
    parameters: {
      formData: {
        title?: string;
        description?: string;
        deadline_date?: string;
        matter_status_id?: number;
        "matter_custom_column_values[][matter_custom_column_id]"?: number[];
        "matter_custom_column_values[][value]"?: string[];
        "add_client_master_ids[]"?: number[];
        "delete_client_master_ids[]"?: number[];
        /** 依頼者(ユーザー)のID一式。 */
        "requester_user_ids[]"?: number[];
        /** 依頼者(グループ)のID一式。 */
        "requester_user_group_ids[]"?: number[];
        /** 担当者(ユーザー)のID一式。 */
        "responsible_user_ids[]"?: number[];
        /** 担当者(グループ)のID一式。 */
        "responsible_user_group_ids[]"?: number[];
        /** 関係者(ユーザー)のID一式。 */
        "related_user_ids[]"?: number[];
        /** 関係者(グループ)のID一式。 */
        "related_user_group_ids[]"?: number[];
      };
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** update matter */
      200: {
        schema: definitions["V2_MatterDetailEntity"];
      };
    };
  };
  /** delete matter / supplierのみ実行可 / テストデータ削除や、顧客対応でデータ削除を依頼されたとき等の利用を想定 */
  deleteV2MatterMatterId: {
    parameters: {
      query: {
        /** 削除を行う場合にtrueにする (誤操作防止用) */
        force_execute: boolean;
      };
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** delete matter / supplierのみ実行可 / テストデータ削除や、顧客対応でデータ削除を依頼されたとき等の利用を想定 */
      204: never;
      /** Forbidden */
      403: unknown;
    };
  };
  /** get matter timeline comment draft */
  getV2MatterMatterIdMatterTimelineCommentDraft: {
    parameters: {
      query: {
        /** 下書き作成ユーザーのID。MNTSQユーザは指定したユーザーの下書きを閲覧できる。非MNTSQユーザがこのパラメーターを指定した場合403エラーとなる。 */
        user_id?: number;
      };
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** get matter timeline comment draft */
      200: {
        schema: definitions["V2_MatterTimelineCommentDraftActiveEntity"];
      };
    };
  };
  /** upsert matter timeline comment draft / 案件に既存下書きコメントが無いとき新規作成、あるとき更新する */
  postV2MatterMatterIdMatterTimelineCommentDraftUpsert: {
    parameters: {
      formData: {
        /** コメント内容 */
        comment?: string;
        /** 表示範囲 (public:全体, for_agent:回答部門のみ) */
        visible_scope: "public" | "for_agent";
      };
      path: {
        matter_id: number;
      };
    };
    responses: {
      /** Successfully updated */
      200: {
        schema: definitions["V2_MatterTimelineCommentDraftActiveEntity"];
      };
      /** Successfully created */
      201: {
        schema: definitions["V2_MatterTimelineCommentDraftActiveEntity"];
      };
    };
  };
  /** get matter_timeline list */
  getV2MatterTimeline: {
    parameters: {
      query: {
        matter_id: number;
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数。未指定時は全件 */
        per?: number;
        /** 昇順、降順 */
        order?: "asc" | "desc";
        /** 指定したid以降のデータを取得する（指定したidは含まない） */
        after_id?: number;
        /** 指定したidまでのデータを取得する（指定したidは含まない） */
        before_id?: number;
      };
    };
    responses: {
      /** get matter_timeline list */
      200: {
        schema: definitions["V2_MatterTimelineListWithStatsEntity"];
      };
    };
  };
  /** delete matter_timeline / supplierのみ実行可 / テストデータ削除等の利用を想定 */
  deleteV2MatterTimeline: {
    parameters: {
      query: {
        /** 削除を行う場合にtrueにする (誤操作防止用) */
        force_execute: boolean;
        /** 削除したいタイムラインの所属案件 */
        matter_id: number;
      };
      formData: {
        /** 削除したいタイムラインのID。未指定の場合は案件の全タイムラインを削除する。タイムラインのIDは、GET /v2/matter_timeline で確認してください */
        "matter_timeline_ids[]"?: number[];
      };
    };
    responses: {
      /** delete matter_timeline / supplierのみ実行可 / テストデータ削除等の利用を想定 */
      204: never;
    };
  };
  /** create matter_timeline comment */
  postV2MatterTimelineComment: {
    parameters: {
      formData: {
        matter_id: number;
        matter_comment: string;
        /** 表示範囲。回答部門内のみに送信(for_agent) / 全体公開(public) */
        visible_scope: "public" | "for_agent";
        /** 元になる案件コメント下書きID */
        matter_timeline_comment_draft_id?: number;
      };
    };
    responses: {
      /** create matter_timeline comment */
      201: {
        schema: definitions["V2_MatterTimelineDetailEntity"];
      };
    };
  };
  /** update matter_timeline comment / 自分が投稿したコメントのみ編集可 */
  putV2MatterTimelineMatterTimelineIdComment: {
    parameters: {
      formData: {
        matter_comment?: string;
        visible_scope?: "public" | "for_agent";
      };
      path: {
        matter_timeline_id: number;
      };
    };
    responses: {
      /** update matter_timeline comment / 自分が投稿したコメントのみ編集可 */
      200: unknown;
    };
  };
  /** delete matter_timeline comment / 自分が投稿したコメントのみ削除可 */
  deleteV2MatterTimelineMatterTimelineIdComment: {
    parameters: {
      path: {
        matter_timeline_id: number;
      };
    };
    responses: {
      /** delete matter_timeline comment / 自分が投稿したコメントのみ削除可 */
      204: never;
    };
  };
  /** get matter timeline comment drafts */
  getV2MatterTimelineCommentDraft: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** 更新日時の昇順or降順指定 defaultはdesc */
        sort_option?: "desc" | "asc";
        /** 下書き作成ユーザーのID。MNTSQユーザは指定したユーザーの下書き一覧を閲覧できる。非MNTSQユーザがこのパラメーターを指定した場合403エラーとなる。 */
        user_id?: number;
      };
    };
    responses: {
      /** get matter timeline comment drafts */
      200: {
        schema: definitions["V2_MatterTimelineCommentDraftActiveListWithStatsEntity"];
      };
    };
  };
  /** delete matter timeline comment draft / MNTSQユーザは自分が作成したもの以外でも指定したIDの下書きを削除できる */
  deleteV2MatterTimelineCommentDraftMatterTimelineCommentDraftId: {
    parameters: {
      path: {
        matter_timeline_comment_draft_id: number;
      };
    };
    responses: {
      /** delete matter timeline comment draft / MNTSQユーザは自分が作成したもの以外でも指定したIDの下書きを削除できる */
      204: never;
    };
  };
  /** upload matter timeline comment draft attachment document */
  postV2MatterTimelineCommentDraftAttachmentDocumentFileuploads: {
    parameters: {
      formData: {
        /** ファイル添付対象の matter timeline comment draft */
        matter_timeline_comment_draft_id: number;
        /** 添付ファイル */
        file: unknown;
      };
    };
    responses: {
      /** upload matter timeline comment draft attachment document */
      201: {
        schema: definitions["V2_MatterTimelineCommentDraftAttachmentDocumentEntity"];
      };
    };
  };
  /** delete matter timeline comment draft attachment document / MNTSQユーザは自分がアップロードしたもの以外でも指定したIDのファイルを削除できる */
  deleteV2MatterTimelineCommentDraftAttachmentDocumentMatterTimelineCommentDraftAttachmentDocumentId: {
    parameters: {
      path: {
        matter_timeline_comment_draft_attachment_document_id: number;
      };
    };
    responses: {
      /** delete matter timeline comment draft attachment document / MNTSQユーザは自分がアップロードしたもの以外でも指定したIDのファイルを削除できる */
      204: never;
    };
  };
  /** bulk save matter_final_version_document */
  postV2MatterFinalVersionDocumentBulkSave: {
    parameters: {
      formData: {
        matter_id: number;
        /** 追加したい締結版ドキュメントのID一式 */
        "add_final_version_document_ids[]"?: number[];
        /** 削除したい締結版ドキュメントのID一式 */
        "delete_final_version_document_ids[]"?: number[];
      };
    };
    responses: {
      /** bulk save matter_final_version_document */
      201: unknown;
    };
  };
  /** bulk save matter_responsible_entity */
  postV2MatterResponsibleEntityBulkSave: {
    parameters: {
      formData: {
        matter_id: number;
        /** 追加したい担当者ユーザーのID一式 */
        "add_responsible_user_ids[]"?: number[];
        /** 削除したい担当者ユーザーのID一式 */
        "delete_responsible_user_ids[]"?: number[];
        /** 追加したい担当者グループのID一式 */
        "add_responsible_user_group_ids[]"?: number[];
        /** 削除したい担当者グループのID一式 */
        "delete_responsible_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** bulk save matter_responsible_entity */
      201: unknown;
    };
  };
  /** bulk save matter_default_responsible_entity */
  postV2MatterDefaultResponsibleEntityBulkSave: {
    parameters: {
      formData: {
        matter_form_id: number;
        /** 追加したい初期担当者ユーザーのID一式 */
        "add_default_responsible_user_ids[]"?: number[];
        /** 削除したい初期担当者ユーザーのID一式 */
        "delete_default_responsible_user_ids[]"?: number[];
        /** 追加したい初期担当者グループのID一式 */
        "add_default_responsible_user_group_ids[]"?: number[];
        /** 削除したい初期担当者グループのID一式 */
        "delete_default_responsible_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** bulk save matter_default_responsible_entity */
      201: unknown;
    };
  };
  /** bulk save matter_default_related_entity */
  postV2MatterDefaultRelatedEntityBulkSave: {
    parameters: {
      formData: {
        matter_form_id: number;
        /** 追加したい初期関係者ユーザーのID一式 */
        "add_default_related_user_ids[]"?: number[];
        /** 削除したい初期関係者ユーザーのID一式 */
        "delete_default_related_user_ids[]"?: number[];
        /** 追加したい初期関係者グループのID一式 */
        "add_default_related_user_group_ids[]"?: number[];
        /** 削除したい初期関係者グループのID一式 */
        "delete_default_related_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** bulk save matter_default_related_entity */
      201: unknown;
    };
  };
  /** bulk save matter_requester_entity */
  postV2MatterRequesterEntityBulkSave: {
    parameters: {
      formData: {
        matter_id: number;
        /** 追加したい依頼者ユーザーのID一式 */
        "add_requester_user_ids[]"?: number[];
        /** 削除したい依頼者ユーザーのID一式 */
        "delete_requester_user_ids[]"?: number[];
        /** 追加したい依頼者グループのID一式 */
        "add_requester_user_group_ids[]"?: number[];
        /** 削除したい依頼者グループのID一式 */
        "delete_requester_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** bulk save matter_requester_entity */
      201: unknown;
    };
  };
  /** bulk save matter_related_entity */
  postV2MatterRelatedEntityBulkSave: {
    parameters: {
      formData: {
        matter_id: number;
        /** 追加したい関係者ユーザーのID一式 */
        "add_related_user_ids[]"?: number[];
        /** 削除したい関係者ユーザーのID一式 */
        "delete_related_user_ids[]"?: number[];
        /** 追加したい関係者グループのID一式 */
        "add_related_user_group_ids[]"?: number[];
        /** 削除したい関係者グループのID一式 */
        "delete_related_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** bulk save matter_related_entity */
      201: unknown;
    };
  };
  /** update matter column setting */
  putV2MatterColumnSettingMatterColumnSettingId: {
    parameters: {
      formData: {
        caption_text: string;
        is_required: boolean;
      };
      path: {
        matter_column_setting_id: number;
      };
    };
    responses: {
      /** update matter column setting */
      200: unknown;
    };
  };
  /** ordering matter_column_setting / 該当matter_formのすべての項目のidと並び順を指定する必要がある */
  postV2MatterColumnSettingOrdering: {
    parameters: {
      formData: {
        matter_form_id: number;
        /** matter_column_setting.id */
        "items[][id]": number[];
        /** 並び替え後の順番 */
        "items[][order_num]": number[];
      };
    };
    responses: {
      /** ordering matter_column_setting / 該当matter_formのすべての項目のidと並び順を指定する必要がある */
      201: unknown;
    };
  };
  /** upload matter attachment document */
  postV2MatterAttachmentDocumentFileuploads: {
    parameters: {
      formData: {
        /** ファイル添付の対象matter */
        matter_id: number;
        /** ファイル添付の対象matter_timeline (matter_idに所属、かつtype:PostCommentの必要がある) */
        matter_timeline_id?: number;
        /** 添付ファイル */
        file: unknown;
      };
    };
    responses: {
      /** upload matter attachment document */
      201: {
        schema: definitions["V2_MatterAttachmentDocumentEntity"];
      };
    };
  };
  /** get matter drafts */
  getV2MatterDraft: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
        /** 下書き更新日時の昇順or降順指定 defaultはdesc */
        sort_option?: "desc" | "asc";
        /** MNTSQユーザがuser_idで指定したユーザの下書き一覧を閲覧するため */
        user_id?: number;
      };
    };
    responses: {
      /** get matter drafts */
      200: {
        schema: definitions["V2_MatterDraftActiveListWithStatsEntity"];
      };
    };
  };
  /** create matter draft */
  postV2MatterDraft: {
    parameters: {
      formData: {
        matter_form_id: number;
        title?: string;
        description?: string;
        deadline_date?: string;
        /** 取引先のID一式 */
        "client_master_ids[]"?: number[];
        /** カスタム項目のID */
        "matter_draft_custom_column_values[][matter_custom_column_id]"?: number[];
        /** カスタム項目値: 値は整数, 文字列, 浮動小数点, 整数の配列, 文字列の配列のいずれか */
        "matter_draft_custom_column_values[][value]"?: number[];
        /** 依頼者(ユーザー)のID一式。グループと合わせて少なくとも1つは指定が必須 */
        "requester_user_ids[]"?: number[];
        /** 依頼者(グループ)のID一式。ユーザーと合わせて少なくとも1つは指定が必須 */
        "requester_user_group_ids[]"?: number[];
        /** 担当者(ユーザー)のID一式。 */
        "responsible_user_ids[]"?: number[];
        /** 担当者(グループ)のID一式。 */
        "responsible_user_group_ids[]"?: number[];
        /** 関係者(ユーザー)のID一式。 */
        "related_user_ids[]"?: number[];
        /** 関係者(グループ)のID一式。 */
        "related_user_group_ids[]"?: number[];
      };
    };
    responses: {
      /** create matter draft */
      201: {
        schema: definitions["V2_MatterDraftActiveEntity"];
      };
    };
  };
  /** get matter draft */
  getV2MatterDraftMatterDraftId: {
    parameters: {
      path: {
        matter_draft_id: number;
      };
    };
    responses: {
      /** get matter draft */
      200: {
        schema: definitions["V2_MatterDraftActiveEntity"];
      };
    };
  };
  /** update matter draft */
  putV2MatterDraftMatterDraftId: {
    parameters: {
      formData: {
        title?: string;
        description?: string;
        deadline_date?: string;
        /** 取引先のID一式 */
        "client_master_ids[]"?: number[];
        /** カスタム項目のID */
        "matter_draft_custom_column_values[][matter_custom_column_id]"?: number[];
        /** カスタム項目値: 値は整数, 文字列, 浮動小数点, 整数の配列, 文字列の配列のいずれか */
        "matter_draft_custom_column_values[][value]"?: number[];
        /** 依頼者(ユーザー)のID一式。グループと合わせて少なくとも1つは指定が必須 */
        "requester_user_ids[]"?: number[];
        /** 依頼者(グループ)のID一式。ユーザーと合わせて少なくとも1つは指定が必須 */
        "requester_user_group_ids[]"?: number[];
        /** 担当者(ユーザー)のID一式。 */
        "responsible_user_ids[]"?: number[];
        /** 担当者(グループ)のID一式。 */
        "responsible_user_group_ids[]"?: number[];
        /** 関係者(ユーザー)のID一式。 */
        "related_user_ids[]"?: number[];
        /** 関係者(グループ)のID一式。 */
        "related_user_group_ids[]"?: number[];
        /** 下書き添付ファイルのID一式 */
        "matter_draft_attachment_document_ids[]"?: number[];
      };
      path: {
        matter_draft_id: number;
      };
    };
    responses: {
      /** update matter draft */
      200: {
        schema: definitions["V2_MatterDraftActiveEntity"];
      };
    };
  };
  /** delete matter draft */
  deleteV2MatterDraftMatterDraftId: {
    parameters: {
      path: {
        matter_draft_id: number;
      };
    };
    responses: {
      /** delete matter draft */
      204: never;
    };
  };
  /** upload matter draft attachment document */
  postV2MatterDraftAttachmentDocumentFileuploads: {
    parameters: {
      formData: {
        /** ファイル添付対象の matter draft */
        matter_draft_id: number;
        /** 添付ファイル */
        file: unknown;
      };
    };
    responses: {
      /** upload matter draft attachment document */
      201: {
        schema: definitions["V2_MatterDraftAttachmentDocumentEntity"];
      };
    };
  };
  /** get relation */
  getV2ContractRelationContractRelationId: {
    parameters: {
      path: {
        contract_relation_id: number;
      };
    };
    responses: {
      /** get relation */
      200: {
        schema: definitions["V2_ContractRelationEntity"];
      };
    };
  };
  /** put relation */
  putV2ContractRelationContractRelationId: {
    parameters: {
      formData: {
        /** relationのタイプ */
        relation_type?: string;
        /** 自動判別されたものか */
        is_auto_detected?: boolean;
      };
      path: {
        contract_relation_id: number;
      };
    };
    responses: {
      /** put relation */
      200: {
        schema: definitions["V2_ContractRelationEntity"];
      };
    };
  };
  /** delete relation */
  deleteV2ContractRelationContractRelationId: {
    parameters: {
      path: {
        contract_relation_id: number;
      };
    };
    responses: {
      /** relation deleted successfully */
      204: never;
    };
  };
  /** post relation */
  postV2ContractRelation: {
    parameters: {
      formData: {
        /** 関連元のドキュメントID */
        parent_document_id: number;
        /** 関連先のドキュメントID */
        child_document_id: number;
        /** relationのタイプ */
        relation_type?: string;
        /** 自動判別されたものか */
        is_auto_detected?: boolean;
      };
    };
    responses: {
      /** post relation */
      201: {
        schema: definitions["V2_ContractRelationEntity"];
      };
    };
  };
  /** delete relation */
  deleteV2ContractRelation: {
    parameters: {
      query: {
        /** 関連元（または関連先）のドキュメントID */
        document_id_1: number;
        /** 関連先（または関連元）のドキュメントID */
        document_id_2: number;
      };
    };
    responses: {
      /** delete relation */
      204: never;
    };
  };
  getV2SuccessiveClient: {
    parameters: {
      query: {
        /** ページ番号 */
        page?: number;
        /** 1ページあたりの表示件数 */
        per?: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_SuccessiveClientListWithStatsEntity"];
      };
    };
  };
  postV2SuccessiveClient: {
    parameters: {
      formData: {
        client_master_id: number;
        /** 有効/無効 */
        is_active: boolean;
        /** グループ会社かどうか */
        is_group_company: boolean;
        /** 種別 */
        data_type: "imported" | "external_resource_nta" | "generated";
        /** 代表クライアント名ID */
        representative_client_name_id?: number;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_SuccessiveClientEntity"];
      };
    };
  };
  putV2SuccessiveClientSuccessiveClientId: {
    parameters: {
      formData: {
        /** 有効/無効 */
        is_active?: boolean;
        /** グループ会社かどうか */
        is_group_company?: boolean;
        /** 種別 */
        data_type?: "imported" | "external_resource_nta" | "generated";
        /** 代表クライアント名ID */
        representative_client_name_id?: number;
      };
      path: {
        successive_client_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_SuccessiveClientEntity"];
      };
    };
  };
  deleteV2SuccessiveClientSuccessiveClientId: {
    parameters: {
      path: {
        successive_client_id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  postV2SuccessiveClientSuccessiveClientIdClientName: {
    parameters: {
      path: {
        successive_client_id: number;
      };
      formData: {
        name: string;
        use_for_suggest: boolean;
        use_for_name_aggregation: boolean;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_ClientNameEntity"];
      };
    };
  };
  putV2SuccessiveClientSuccessiveClientIdClientNameClientNameId: {
    parameters: {
      formData: {
        name?: string;
        /** 有効/無効 */
        is_active?: boolean;
        use_for_suggest?: boolean;
        use_for_name_aggregation?: boolean;
      };
      path: {
        successive_client_id: number;
        client_name_id: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_ClientNameEntity"];
      };
    };
  };
  deleteV2SuccessiveClientSuccessiveClientIdClientNameClientNameId: {
    parameters: {
      path: {
        successive_client_id: number;
        client_name_id: number;
      };
    };
    responses: {
      /** deleted ClientName */
      204: never;
    };
  };
  /** ユーザー一覧リスト 出力<br>出力仕様: https://docs.google.com/document/d/1aU0ypoannheVOkLJgOx4gty-ca3jQ7TghCxKJfQ6a-U/edit */
  getV2XlsxdownloadUserList: {
    parameters: {
      query: {
        job_log_id: number;
      };
    };
    responses: {
      /** ユーザー一覧リスト 出力<br>出力仕様: https://docs.google.com/document/d/1aU0ypoannheVOkLJgOx4gty-ca3jQ7TghCxKJfQ6a-U/edit */
      200: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  /** 案件一覧リスト 出力<br>出力仕様: https://docs.google.com/document/d/14KBso7w4MHcVuzr5w7Xs45ZT-Hi601ACAOVVXnGf0qQ/edit# */
  getV2XlsxdownloadMatterList: {
    parameters: {
      query: {
        job_log_id: number;
      };
    };
    responses: {
      /** 案件一覧リスト 出力<br>出力仕様: https://docs.google.com/document/d/14KBso7w4MHcVuzr5w7Xs45ZT-Hi601ACAOVVXnGf0qQ/edit# */
      200: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  /** 危険条項リスト 出力<br>出力仕様: https://github.com/MNTSQ/mntsq/blob/develop/docs/file_exports.md#危険条項リスト */
  getV2XlsxdownloadAnnotationList: {
    parameters: {
      query: {
        job_log_id?: number;
        project_id?: number;
      };
    };
    responses: {
      /** 危険条項リスト 出力<br>出力仕様: https://github.com/MNTSQ/mntsq/blob/develop/docs/file_exports.md#危険条項リスト */
      200: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  getV2Xlsxdownload: {
    parameters: {
      query: {
        job_log_id?: number;
        project_id?: number;
      };
    };
    responses: {
      200: {
        schema: definitions["V2_AsyncJobLogEntity"];
      };
    };
  };
  getV2CsvdownloadDocusignWebhookList: {
    responses: {
      200: {
        schema: unknown;
      };
    };
  };
  getV2CsvdownloadDocumentList: {
    parameters: {
      query: {
        job_log_id: number;
      };
    };
    responses: {
      200: {
        schema: unknown;
      };
    };
  };
  /** get email_filter_mode */
  getV2ConnectmailEmailFilterMode: {
    responses: {
      /** get email_filter_mode */
      200: {
        schema: definitions["V2_EmailFilterModeEntity"];
      };
    };
  };
  /** update email_filter_mode */
  putV2ConnectmailEmailFilterMode: {
    parameters: {
      formData: {
        /** メール連携でのセキュアでないemailのデータの扱い。<br>omit: 取り込まない<br>observe: 観測<br>pass: 何もせず取り込む。<br>既定値はpass */
        mode: "omit" | "observe" | "pass";
      };
    };
    responses: {
      /** update email_filter_mode */
      200: {
        schema: definitions["V2_EmailFilterModeEntity"];
      };
    };
  };
  deleteV2ConnectmailWhitelistedDomainId: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      204: never;
    };
  };
  getV2ConnectmailWhitelistedDomain: {
    responses: {
      200: {
        schema: definitions["V2_WhitelistedConnectmailDomainEntity"][];
      };
    };
  };
  postV2ConnectmailWhitelistedDomain: {
    parameters: {
      formData: {
        /** connectmailでの連携を許可するドメイン */
        domain: string;
      };
    };
    responses: {
      201: {
        schema: definitions["V2_WhitelistedConnectmailDomainEntity"];
      };
    };
  };
  /** 条項のminhashを計算し、そのまま登録します */
  postV2SearchHashGeneratorClauseMinhash: {
    parameters: {
      formData: {
        /** ハッシュを計算するclauseを持つdocumentのid */
        document_id: number;
      };
    };
    responses: {
      /** 条項のminhashを計算し、そのまま登録します */
      201: unknown;
    };
  };
  /** get localization_config */
  getV2LocalizationConfig: {
    responses: {
      /** get localization_config */
      200: {
        schema: definitions["V2_LocalizationConfigEntity"];
      };
    };
  };
  /** update localization_config */
  putV2LocalizationConfig: {
    parameters: {
      formData: {
        /** ロケールの既定値(ex. "ja-JP") */
        default_locale?: "ja-JP" | "en-US";
        /** タイムゾーンを固定で使用する場合、その値を指定する(ex. "Asia/Tokyo")。ブラウザ依存にする場合、nullを指定する。 */
        forced_timezone?:
          | "null: use browser setting"
          | "Africa/Algiers"
          | "Africa/Cairo"
          | "Africa/Casablanca"
          | "Africa/Harare"
          | "Africa/Johannesburg"
          | "Africa/Monrovia"
          | "Africa/Nairobi"
          | "America/Argentina/Buenos_Aires"
          | "America/Bogota"
          | "America/Caracas"
          | "America/Chicago"
          | "America/Chihuahua"
          | "America/Denver"
          | "America/Godthab"
          | "America/Guatemala"
          | "America/Guyana"
          | "America/Halifax"
          | "America/Indiana/Indianapolis"
          | "America/Juneau"
          | "America/La_Paz"
          | "America/Lima"
          | "America/Los_Angeles"
          | "America/Mazatlan"
          | "America/Mexico_City"
          | "America/Monterrey"
          | "America/Montevideo"
          | "America/New_York"
          | "America/Phoenix"
          | "America/Puerto_Rico"
          | "America/Regina"
          | "America/Santiago"
          | "America/Sao_Paulo"
          | "America/St_Johns"
          | "America/Tijuana"
          | "Asia/Almaty"
          | "Asia/Baghdad"
          | "Asia/Baku"
          | "Asia/Bangkok"
          | "Asia/Chongqing"
          | "Asia/Colombo"
          | "Asia/Dhaka"
          | "Asia/Hong_Kong"
          | "Asia/Irkutsk"
          | "Asia/Jakarta"
          | "Asia/Jerusalem"
          | "Asia/Kabul"
          | "Asia/Kamchatka"
          | "Asia/Karachi"
          | "Asia/Kathmandu"
          | "Asia/Kolkata"
          | "Asia/Krasnoyarsk"
          | "Asia/Kuala_Lumpur"
          | "Asia/Kuwait"
          | "Asia/Magadan"
          | "Asia/Muscat"
          | "Asia/Novosibirsk"
          | "Asia/Rangoon"
          | "Asia/Riyadh"
          | "Asia/Seoul"
          | "Asia/Shanghai"
          | "Asia/Singapore"
          | "Asia/Srednekolymsk"
          | "Asia/Taipei"
          | "Asia/Tashkent"
          | "Asia/Tbilisi"
          | "Asia/Tehran"
          | "Asia/Tokyo"
          | "Asia/Ulaanbaatar"
          | "Asia/Urumqi"
          | "Asia/Vladivostok"
          | "Asia/Yakutsk"
          | "Asia/Yekaterinburg"
          | "Asia/Yerevan"
          | "Atlantic/Azores"
          | "Atlantic/Cape_Verde"
          | "Atlantic/South_Georgia"
          | "Australia/Adelaide"
          | "Australia/Brisbane"
          | "Australia/Darwin"
          | "Australia/Hobart"
          | "Australia/Melbourne"
          | "Australia/Perth"
          | "Australia/Sydney"
          | "Etc/GMT+12"
          | "Etc/UTC"
          | "Europe/Amsterdam"
          | "Europe/Athens"
          | "Europe/Belgrade"
          | "Europe/Berlin"
          | "Europe/Bratislava"
          | "Europe/Brussels"
          | "Europe/Bucharest"
          | "Europe/Budapest"
          | "Europe/Copenhagen"
          | "Europe/Dublin"
          | "Europe/Helsinki"
          | "Europe/Istanbul"
          | "Europe/Kaliningrad"
          | "Europe/Kiev"
          | "Europe/Lisbon"
          | "Europe/Ljubljana"
          | "Europe/London"
          | "Europe/Madrid"
          | "Europe/Minsk"
          | "Europe/Moscow"
          | "Europe/Paris"
          | "Europe/Prague"
          | "Europe/Riga"
          | "Europe/Rome"
          | "Europe/Samara"
          | "Europe/Sarajevo"
          | "Europe/Skopje"
          | "Europe/Sofia"
          | "Europe/Stockholm"
          | "Europe/Tallinn"
          | "Europe/Vienna"
          | "Europe/Vilnius"
          | "Europe/Volgograd"
          | "Europe/Warsaw"
          | "Europe/Zagreb"
          | "Europe/Zurich"
          | "Pacific/Apia"
          | "Pacific/Auckland"
          | "Pacific/Chatham"
          | "Pacific/Fakaofo"
          | "Pacific/Fiji"
          | "Pacific/Guadalcanal"
          | "Pacific/Guam"
          | "Pacific/Honolulu"
          | "Pacific/Majuro"
          | "Pacific/Midway"
          | "Pacific/Noumea"
          | "Pacific/Pago_Pago"
          | "Pacific/Port_Moresby"
          | "Pacific/Tongatapu";
      };
      query: {
        /** user.localeとして使用可能なロケール名の配列。指定していない値は削除されるので、使用するロケール名を全て指定する。 */
        "available_locale_keys[]"?: ("ja-JP" | "en-US")[];
      };
    };
    responses: {
      /** update localization_config */
      200: {
        schema: definitions["V2_LocalizationConfigEntity"];
      };
    };
  };
  /** ドキュメントの解析パイプラインを rerun する */
  postV2DocumentAnalysisRerun: {
    parameters: {
      formData: {
        /** rerunするプロセスタイプ translate: 変換処理、 inject: すでにある解析結果の再取り込み */
        process_type: "translate" | "inject";
        /** document_id直接指定 ※カンマ区切り */
        document_ids?: string;
        /** 対象とするディレクトリのid */
        document_tree_id?: number;
      };
    };
    responses: {
      /** ドキュメントの解析パイプラインを rerun する */
      201: {
        schema: definitions["V2_DocumentAnalysisRerunEntity"];
      };
    };
  };
  /** 自動通知設定の取得 */
  getV2ReminderReminderId: {
    parameters: {
      path: {
        reminder_id: number;
      };
    };
    responses: {
      /** 自動通知設定の取得 */
      200: {
        schema: definitions["V2_ReminderEntity"];
      };
    };
  };
  /** 自動通知設定の更新 */
  putV2ReminderReminderId: {
    parameters: {
      formData: {
        /** 通知基準日付の種別 */
        target_date_type?: "expire_date" | "non_renewal_notice_deadline_date";
        /** 通知のリードタイムの値 */
        "lead_time[value]"?: number;
        /** 通知のリードタイムの単位 */
        "lead_time[unit]"?: "days" | "months" | "years";
        /** 通知メッセージの種別 */
        notification_message_text_type?:
          | "renewal_deadline"
          | "disposal"
          | "other";
        /** 通知メモ */
        notification_note?: string;
        /** 通知の宛先ユーザーID */
        "remindee_ids[user_ids][]"?: number[];
        /** 通知の宛先ユーザーグループID */
        "remindee_ids[user_group_ids][]"?: number[];
      };
      path: {
        reminder_id: number;
      };
    };
    responses: {
      /** 自動通知設定の更新 */
      200: {
        schema: definitions["V2_ReminderEntity"];
      };
    };
  };
  /** 自動通知設定の削除 */
  deleteV2ReminderReminderId: {
    parameters: {
      path: {
        reminder_id: number;
      };
    };
    responses: {
      /** 自動通知設定の削除 */
      204: never;
    };
  };
  /** 自動通知設定の取得 */
  getV2LedgerTagReminderTemplateLedgerTagReminderTemplateId: {
    parameters: {
      path: {
        ledger_tag_reminder_template_id: number;
      };
    };
    responses: {
      /** 自動通知設定の取得 */
      200: {
        schema: definitions["V2_LedgerTagReminderTemplateEntity"];
      };
    };
  };
  /** 自動通知設定の更新 */
  putV2LedgerTagReminderTemplateLedgerTagReminderTemplateId: {
    parameters: {
      formData: {
        /** 名称 */
        name?: string;
        /** 通知基準日付の種別 */
        target_date_type?: "expire_date" | "non_renewal_notice_deadline_date";
        /** 通知のリードタイムの値 */
        "lead_time[value]"?: number;
        /** 通知のリードタイムの単位 */
        "lead_time[unit]"?: "days" | "months" | "years";
        /** 通知メッセージの種別 */
        notification_message_text_type?:
          | "renewal_deadline"
          | "disposal"
          | "other";
        /** 通知の宛先ユーザーID */
        "remindee_ids[user_ids][]"?: number[];
        /** 通知の宛先ユーザーグループID */
        "remindee_ids[user_group_ids][]"?: number[];
      };
      path: {
        ledger_tag_reminder_template_id: number;
      };
    };
    responses: {
      /** 自動通知設定の更新 */
      200: {
        schema: definitions["V2_LedgerTagReminderTemplateEntity"];
      };
    };
  };
  /** 自動通知設定の削除 */
  deleteV2LedgerTagReminderTemplateLedgerTagReminderTemplateId: {
    parameters: {
      path: {
        ledger_tag_reminder_template_id: number;
      };
    };
    responses: {
      /** 自動通知設定の削除 */
      204: never;
    };
  };
  /** メールカスタマイズ文章の全取得 */
  getV2NotificationCustomMailContent: {
    responses: {
      /** メールカスタマイズ文章の全取得 */
      200: {
        schema: definitions["V2_NotificationCustomMailContentEntity"][];
      };
    };
  };
  /** メールカスタマイズ文章の作成 */
  postV2NotificationCustomMailContent: {
    parameters: {
      formData: {
        /** 名前 */
        name: string;
        /** 説明 */
        description?: string;
        /** 通知タイプ */
        notification_type: "renewal_deadline" | "disposal" | "other";
        /** メールの件名 */
        subject: string;
        /** メールの本文 */
        body: string;
      };
    };
    responses: {
      /** メールカスタマイズ文章の作成 */
      201: {
        schema: definitions["V2_NotificationCustomMailContentEntity"];
      };
    };
  };
  /** メールカスタマイズ文章の更新 */
  putV2NotificationCustomMailContentNotificationCustomMailContentId: {
    parameters: {
      formData: {
        /** 名前 */
        name?: string;
        /** 説明 */
        description?: string;
        /** メールの件名 */
        subject?: string;
        /** メールの本文 */
        body?: string;
      };
      path: {
        notification_custom_mail_content_id: number;
      };
    };
    responses: {
      /** メールカスタマイズ文章の更新 */
      200: {
        schema: definitions["V2_NotificationCustomMailContentEntity"];
      };
    };
  };
  /** メールカスタマイズ文章の削除 */
  deleteV2NotificationCustomMailContentNotificationCustomMailContentId: {
    parameters: {
      path: {
        notification_custom_mail_content_id: number;
      };
    };
    responses: {
      /** メールカスタマイズ文章の削除 */
      204: never;
    };
  };
  /** メールカスタマイズ文章に台帳を割り当てる */
  postV2NotificationCustomMailContentNotificationCustomMailContentIdLedgerTags: {
    parameters: {
      formData: {
        /** 割り当てる台帳IDの配列 */
        "ledger_tag_ids[]": number[];
      };
      path: {
        notification_custom_mail_content_id: number;
      };
    };
    responses: {
      /** メールカスタマイズ文章に台帳を割り当てる */
      201: unknown;
    };
  };
  /** メールカスタマイズ文章と台帳の割り当てを削除 */
  deleteV2NotificationCustomMailContentNotificationCustomMailContentIdLedgerTagLedgerTagId: {
    parameters: {
      path: {
        notification_custom_mail_content_id: number;
        ledger_tag_id: number;
      };
    };
    responses: {
      /** メールカスタマイズ文章と台帳の割り当てを削除 */
      204: never;
    };
  };
  /** メールカスタマイズ文章が割り当てられた台帳・通知種別から絞り込み取得 */
  getV2NotificationCustomMailContentPreview: {
    parameters: {
      query: {
        /** 台帳ID */
        ledger_tag_id: number;
        /** 通知タイプ */
        notification_type: "renewal_deadline" | "disposal" | "other";
      };
    };
    responses: {
      /** メールカスタマイズ文章が割り当てられた台帳・通知種別から絞り込み取得 */
      200: {
        schema: definitions["V2_NotificationCustomMailContentEntity"];
      };
    };
  };
  /** office 連携で uploadするときの宛先情報 */
  getV2OfficeConnectorUploadTargets: {
    parameters: {
      query: {
        /** 難読化済みのテナントID */
        "upload_targets[][tenant_digest]": string[];
        /** 案件の office 連携キー */
        "upload_targets[][matter_key]": string[];
      };
    };
    responses: {
      /** office 連携で uploadするときの宛先情報 */
      200: {
        schema: definitions["V2_OfficeConnectorUploadTargetMatterEntity"];
      };
    };
  };
}

export interface external {}
